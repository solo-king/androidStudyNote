class BluetoothRequestPermissionTest
!!!1038850.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);
        setContentView(R.layout.bluetooth_request_permission_test);
        mAdapter = BluetoothAdapter.getDefaultAdapter();

        Button enable = (Button) findViewById(R.id.enable);
        enable.setOnClickListener(new BtOnClickListener(true /* enable */));

        Button discoverable = (Button) findViewById(R.id.discoverable);
        discoverable.setOnClickListener(new BtOnClickListener(false /* enable & discoverable */));

        Button scanButton = (Button) findViewById(R.id.scan);
        scanButton.setOnClickListener(new BtScanOnClickListener());
        if (mAdapter.isDiscovering()) {
            scanButton.setText(R.string.stop_scan);
        } else {
            scanButton.setText(R.string.start_scan);
        }

        mMsgAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1);

        ListView listView = (ListView) findViewById(R.id.msg_container);
        listView.setAdapter(mMsgAdapter);

        IntentFilter filter = new IntentFilter();
        filter.addAction(BluetoothAdapter.ACTION_DISCOVERY_STARTED);
        filter.addAction(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);
        filter.addAction(BluetoothAdapter.ACTION_STATE_CHANGED);
        filter.addAction(BluetoothDevice.ACTION_FOUND);
        registerReceiver(mReceiver, filter);
        addMsg("Initialized");
!!!1038978.java!!!	requestPermission(inout enableOnly : boolean) : void
        Intent i = new Intent();
        if (enableOnly) {
            addMsg("Starting activity to enable bt");
            i.setAction(BluetoothAdapter.ACTION_REQUEST_ENABLE);
        } else {
            addMsg("Starting activity to enable bt + discovery");
            i.setAction(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);
            // Discoverability duration toggles between 20 seconds and no timeout.
            int timeout = (mDiscoveryWithTimeout ? 20 : 0);
            i.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, timeout);
            mDiscoveryWithTimeout = !mDiscoveryWithTimeout;
        }
        startActivityForResult(i, 1);
!!!1039106.java!!!	onActivityResult(in requestCode : int, in resultCode : int, inout data : Intent) : void
        if (requestCode != 1) {
            Log.e(TAG, "Unexpected onActivityResult " + requestCode + " " + resultCode);
            return;
        }

        if (resultCode == Activity.RESULT_CANCELED) {
            addMsg("Result = RESULT_CANCELED");
        } else if (resultCode == Activity.RESULT_OK) {
            addMsg("Result = RESULT_OK (not expected for discovery)");
        } else {
            addMsg("Result = " + resultCode);
        }
!!!1039234.java!!!	onDestroy() : void
        super.onDestroy();
        unregisterReceiver(mReceiver);
!!!1039362.java!!!	addMsg(in msg : String) : void
        mMsgAdapter.add(msg);
        Log.d(TAG, "msg");
