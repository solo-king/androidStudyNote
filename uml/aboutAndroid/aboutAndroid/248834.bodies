class BatteryHistoryDetail
!!!720514.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);
        String histFile = getArguments().getString(EXTRA_STATS);
        mStats = BatteryStatsHelper.statsFromFile(getActivity(), histFile);
        mBatteryBroadcast = getArguments().getParcelable(EXTRA_BROADCAST);

        TypedValue value = new TypedValue();
        getContext().getTheme().resolveAttribute(android.R.attr.colorAccent, value, true);
        int accentColor = getContext().getColor(value.resourceId);

        mChargingParser = new BatteryFlagParser(accentColor, false,
                HistoryItem.STATE_BATTERY_PLUGGED_FLAG);
        mScreenOn = new BatteryFlagParser(accentColor, false,
                HistoryItem.STATE_SCREEN_ON_FLAG);
        mGpsParser = new BatteryFlagParser(accentColor, false,
                HistoryItem.STATE_GPS_ON_FLAG);
        mFlashlightParser = new BatteryFlagParser(accentColor, true,
                HistoryItem.STATE2_FLASHLIGHT_FLAG);
        mCameraParser = new BatteryFlagParser(accentColor, true,
                HistoryItem.STATE2_CAMERA_FLAG);
        mWifiParser = new BatteryWifiParser(accentColor);
        mCpuParser = new BatteryFlagParser(accentColor, false,
                HistoryItem.STATE_CPU_RUNNING_FLAG);
        mPhoneParser = new BatteryCellParser();
        setHasOptionsMenu(true);
!!!720642.java!!!	onCreateView(inout inflater : LayoutInflater, inout container : ViewGroup, inout savedInstanceState : Bundle) : View
        return inflater.inflate(R.layout.battery_history_detail, container, false);
!!!720770.java!!!	onViewCreated(inout view : View, inout savedInstanceState : Bundle) : void
        super.onViewCreated(view, savedInstanceState);
        updateEverything();
!!!720898.java!!!	updateEverything() : void
        BatteryInfo info = BatteryInfo.getBatteryInfo(getContext(), mBatteryBroadcast, mStats,
                SystemClock.elapsedRealtime() * 1000);
        final View view = getView();
        info.bindHistory((UsageView) view.findViewById(R.id.battery_usage), mChargingParser,
                mScreenOn, mGpsParser, mFlashlightParser, mCameraParser, mWifiParser, mCpuParser,
                mPhoneParser);
        ((TextView) view.findViewById(R.id.charge)).setText(info.batteryPercentString);
        ((TextView) view.findViewById(R.id.estimation)).setText(info.remainingLabel);

        bindData(mChargingParser, R.string.battery_stats_charging_label, R.id.charging_group);
        bindData(mScreenOn, R.string.battery_stats_screen_on_label, R.id.screen_on_group);
        bindData(mGpsParser, R.string.battery_stats_gps_on_label, R.id.gps_group);
        bindData(mFlashlightParser, R.string.battery_stats_flashlight_on_label,
                R.id.flashlight_group);
        bindData(mCameraParser, R.string.battery_stats_camera_on_label, R.id.camera_group);
        bindData(mWifiParser, R.string.battery_stats_wifi_running_label, R.id.wifi_group);
        bindData(mCpuParser, R.string.battery_stats_wake_lock_label, R.id.cpu_group);
        bindData(mPhoneParser, R.string.battery_stats_phone_signal_label, R.id.cell_network_group);
!!!721026.java!!!	bindData(inout provider : BatteryActiveView::BatteryActiveProvider, in label : int, in groupId : int) : void
        View group = getView().findViewById(groupId);
        group.setVisibility(provider.hasData() ? View.VISIBLE : View.GONE);
        ((TextView) group.findViewById(android.R.id.title)).setText(label);
        ((BatteryActiveView) group.findViewById(R.id.battery_active)).setProvider(provider);
!!!721154.java!!!	getMetricsCategory() : int
        return MetricsEvent.FUELGAUGE_BATTERY_HISTORY_DETAIL;
