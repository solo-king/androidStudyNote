class TimeAxis
!!!947842.java!!!	TimeAxis()
            final long currentTime = System.currentTimeMillis();
            setBounds(currentTime - DateUtils.DAY_IN_MILLIS * 30, currentTime);
!!!947970.java!!!	hashCode() : int
            return Objects.hash(mMin, mMax, mSize);
!!!948098.java!!!	setBounds(in min : long, in max : long) : boolean
            if (mMin != min || mMax != max) {
                mMin = min;
                mMax = max;
                return true;
            } else {
                return false;
            }
!!!948226.java!!!	setSize(in size : float) : boolean
            if (mSize != size) {
                mSize = size;
                return true;
            } else {
                return false;
            }
!!!948354.java!!!	convertToPoint(in value : long) : float
            return (mSize * (value - mMin)) / (mMax - mMin);
!!!948482.java!!!	convertToValue(in point : float) : long
            return (long) (mMin + ((point * (mMax - mMin)) / mSize));
!!!948610.java!!!	buildLabel(inout res : Resources, inout builder : SpannableStringBuilder, in value : long) : long
            // TODO: convert to better string
            builder.replace(0, builder.length(), Long.toString(value));
            return value;
!!!948738.java!!!	getTickPoints() : float
            final float[] ticks = new float[32];
            int i = 0;

            // tick mark for first day of each week
            final Time time = new Time();
            time.set(mMax);
            time.monthDay -= time.weekDay - FIRST_DAY_OF_WEEK;
            time.hour = time.minute = time.second = 0;

            time.normalize(true);
            long timeMillis = time.toMillis(true);
            while (timeMillis > mMin) {
                if (timeMillis <= mMax) {
                    ticks[i++] = convertToPoint(timeMillis);
                }
                time.monthDay -= 7;
                time.normalize(true);
                timeMillis = time.toMillis(true);
            }

            return Arrays.copyOf(ticks, i);
!!!948866.java!!!	shouldAdjustAxis(in value : long) : int
            // time axis never adjusts
            return 0;
