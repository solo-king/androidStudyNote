class ShowAdminSupportDetailsDialog
!!!349826.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);

        mEnforcedAdmin = getAdminDetailsFromIntent(getIntent());

        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        mDialogView = LayoutInflater.from(builder.getContext()).inflate(
                R.layout.admin_support_details_dialog, null);
        initializeDialogViews(mDialogView, mEnforcedAdmin.component, mEnforcedAdmin.userId);
        builder.setOnDismissListener(this)
                .setPositiveButton(R.string.okay, null)
                .setView(mDialogView)
                .show();
!!!349954.java!!!	onNewIntent(inout intent : Intent) : void
        super.onNewIntent(intent);
        EnforcedAdmin admin = getAdminDetailsFromIntent(intent);
        if (!mEnforcedAdmin.equals(admin)) {
            mEnforcedAdmin = admin;
            initializeDialogViews(mDialogView, mEnforcedAdmin.component, mEnforcedAdmin.userId);
        }
!!!350082.java!!!	getAdminDetailsFromIntent(inout intent : Intent) : EnforcedAdmin
        EnforcedAdmin admin = new EnforcedAdmin(null, UserHandle.myUserId());
        if (intent == null) {
            return admin;
        }
        admin.component = intent.getParcelableExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN);
        admin.userId = intent.getIntExtra(Intent.EXTRA_USER_ID, UserHandle.myUserId());
        return admin;
!!!350210.java!!!	initializeDialogViews(inout root : View, inout admin : ComponentName, in userId : int) : void
        if (admin != null) {
            if (!RestrictedLockUtils.isAdminInCurrentUserOrProfile(this, admin)
                    || !RestrictedLockUtils.isCurrentUserOrProfile(this, userId)) {
                admin = null;
            } else {
                ActivityInfo ai = null;
                try {
                    ai = AppGlobals.getPackageManager().getReceiverInfo(admin, 0 /* flags */,
                            userId);
                } catch (RemoteException e) {
                    Log.w(TAG, "Missing reciever info", e);
                }
                if (ai != null) {
                    Drawable icon = ai.loadIcon(getPackageManager());
                    Drawable badgedIcon = getPackageManager().getUserBadgedIcon(
                            icon, new UserHandle(userId));
                    ((ImageView) root.findViewById(R.id.admin_support_icon)).setImageDrawable(
                            badgedIcon);
                }
            }
        }

        setAdminSupportDetails(this, root, new EnforcedAdmin(admin, userId), true);
!!!350338.java!!!	setAdminSupportDetails(in activity : Activity, inout root : View, in enforcedAdmin : EnforcedAdmin, in finishActivity : boolean) : void
        if (enforcedAdmin == null) {
            return;
        }

        if (enforcedAdmin.component != null) {
            DevicePolicyManager dpm = (DevicePolicyManager) activity.getSystemService(
                    Context.DEVICE_POLICY_SERVICE);
            if (!RestrictedLockUtils.isAdminInCurrentUserOrProfile(activity,
                    enforcedAdmin.component) || !RestrictedLockUtils.isCurrentUserOrProfile(
                    activity, enforcedAdmin.userId)) {
                enforcedAdmin.component = null;
            } else {
                if (enforcedAdmin.userId == UserHandle.USER_NULL) {
                    enforcedAdmin.userId = UserHandle.myUserId();
                }
                CharSequence supportMessage = null;
                if (UserHandle.isSameApp(Process.myUid(), Process.SYSTEM_UID)) {
                    supportMessage = dpm.getShortSupportMessageForUser(
                            enforcedAdmin.component, enforcedAdmin.userId);
                }
                if (supportMessage != null) {
                    TextView textView = (TextView) root.findViewById(R.id.admin_support_msg);
                    textView.setText(supportMessage);
                }
            }
        }

        root.findViewById(R.id.admins_policies_list).setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        Intent intent = new Intent();
                        if (enforcedAdmin.component != null) {
                            intent.setClass(activity, DeviceAdminAdd.class);
                            intent.putExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN,
                                    enforcedAdmin.component);
                            intent.putExtra(DeviceAdminAdd.EXTRA_CALLED_FROM_SUPPORT_DIALOG, true);
                            // DeviceAdminAdd class may need to run as managed profile.
                            activity.startActivityAsUser(intent,
                                    new UserHandle(enforcedAdmin.userId));
                        } else {
                            intent.setClass(activity, Settings.DeviceAdminSettingsActivity.class);
                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                            // Activity merges both managed profile and parent users
                            // admins so show as same user as this activity.
                            activity.startActivity(intent);
                        }
                        if (finishActivity) {
                            activity.finish();
                        }
                    }
                });
!!!350466.java!!!	onDismiss(inout dialog : DialogInterface) : void
        finish();
