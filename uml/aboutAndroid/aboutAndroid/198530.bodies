class AccountPreferenceBase
!!!425474.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);
        mUm = (UserManager) getSystemService(Context.USER_SERVICE);
        final Activity activity = getActivity();
        mUserHandle = Utils.getSecureTargetUser(activity.getActivityToken(), mUm, getArguments(),
                activity.getIntent().getExtras());
        mAuthenticatorHelper = new AuthenticatorHelper(activity, mUserHandle, this);
!!!425602.java!!!	onAccountsUpdate(inout userHandle : UserHandle) : void

!!!425730.java!!!	onAuthDescriptionsUpdated() : void

!!!425858.java!!!	onSyncStateUpdated() : void

!!!425986.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
        super.onActivityCreated(savedInstanceState);

        final Activity activity = getActivity();

        mDateFormat = DateFormat.getDateFormat(activity);
        mTimeFormat = DateFormat.getTimeFormat(activity);
!!!426114.java!!!	onResume() : void
        super.onResume();
        mStatusChangeListenerHandle = ContentResolver.addStatusChangeListener(
                ContentResolver.SYNC_OBSERVER_TYPE_ACTIVE
                | ContentResolver.SYNC_OBSERVER_TYPE_STATUS
                | ContentResolver.SYNC_OBSERVER_TYPE_SETTINGS,
                mSyncStatusObserver);
        onSyncStateUpdated();
!!!426242.java!!!	onPause() : void
        super.onPause();
        ContentResolver.removeStatusChangeListener(mStatusChangeListenerHandle);
!!!426370.java!!!	getAuthoritiesForAccountType(in type : String) : ArrayList<String>
        return mAuthenticatorHelper.getAuthoritiesForAccountType(type);
!!!426498.java!!!	addPreferencesForType(in accountType : String, inout parent : PreferenceScreen) : PreferenceScreen
        PreferenceScreen prefs = null;
        if (mAuthenticatorHelper.containsAccountType(accountType)) {
            AuthenticatorDescription desc = null;
            try {
                desc = mAuthenticatorHelper.getAccountTypeDescription(accountType);
                if (desc != null && desc.accountPreferencesId != 0) {
                    // Load the context of the target package, then apply the
                    // base Settings theme (no references to local resources)
                    // and create a context theme wrapper so that we get the
                    // correct text colors. Control colors will still be wrong,
                    // but there's not much we can do about it since we can't
                    // reference local color resources.
                    final Context targetCtx = getActivity().createPackageContextAsUser(
                            desc.packageName, 0, mUserHandle);
                    final Theme baseTheme = getResources().newTheme();
                    baseTheme.applyStyle(com.android.settings.R.style.Theme_SettingsBase, true);
                    final Context themedCtx =
                            new LocalClassLoaderContextThemeWrapper(getClass(), targetCtx, 0);
                    themedCtx.getTheme().setTo(baseTheme);
                    prefs = getPreferenceManager().inflateFromResource(themedCtx,
                            desc.accountPreferencesId, parent);
                }
            } catch (PackageManager.NameNotFoundException e) {
                Log.w(TAG, "Couldn't load preferences.xml file from " + desc.packageName);
            } catch (Resources.NotFoundException e) {
                Log.w(TAG, "Couldn't load preferences.xml file from " + desc.packageName);
            }
        }
        return prefs;
!!!426626.java!!!	updateAuthDescriptions() : void
        mAuthenticatorHelper.updateAuthDescriptions(getActivity());
        onAuthDescriptionsUpdated();
!!!426754.java!!!	getDrawableForType(in accountType : String) : Drawable
        return mAuthenticatorHelper.getDrawableForType(getActivity(), accountType);
!!!426882.java!!!	getLabelForType(in accountType : String) : CharSequence
        return mAuthenticatorHelper.getLabelForType(getActivity(), accountType);
!!!427010.java!!!	formatSyncDate(inout date : Date) : String
        // TODO: Switch to using DateUtils.formatDateTime
        return mDateFormat.format(date) + " " + mTimeFormat.format(date);
