class NotificationLockscreenPreference
!!!811138.java!!!	NotificationLockscreenPreference(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
!!!811266.java!!!	setRemoteInputCheckBoxEnabled(inout enabled : boolean) : void
        mRemoteInputCheckBoxEnabled = enabled;
!!!811394.java!!!	setRemoteInputRestricted(inout admin : RestrictedLockUtils.EnforcedAdmin) : void
        mAdminRestrictingRemoteInput = admin;
!!!811522.java!!!	onClick() : void
        final Context context = getContext();
        if (!Utils.startQuietModeDialogIfNecessary(context, UserManager.get(context), mUserId)) {
            // Call super to create preference dialog only when work mode is on
            // startQuietModeDialogIfNecessary will return false if mUserId is not a managed user
            super.onClick();
        }
!!!811650.java!!!	setUserId(in userId : int) : void
        mUserId = userId;
!!!811778.java!!!	onPrepareDialogBuilder(inout builder : AlertDialog.Builder, inout innerListener : DialogInterface.OnClickListener) : void

        mListener = new Listener(innerListener);
        builder.setSingleChoiceItems(createListAdapter(), getSelectedValuePos(), mListener);
        mShowRemoteInput = getEntryValues().length == 3;
        mAllowRemoteInput = Settings.Secure.getInt(getContext().getContentResolver(),
                Settings.Secure.LOCK_SCREEN_ALLOW_REMOTE_INPUT, 0) != 0;
        builder.setView(R.layout.lockscreen_remote_input);
!!!811906.java!!!	onDialogCreated(inout dialog : Dialog) : void
        super.onDialogCreated(dialog);
        dialog.create();
        CheckBox checkbox = (CheckBox) dialog.findViewById(R.id.lockscreen_remote_input);
        checkbox.setChecked(!mAllowRemoteInput);
        checkbox.setOnCheckedChangeListener(mListener);
        checkbox.setEnabled(mAdminRestrictingRemoteInput == null);

        View restricted = dialog.findViewById(R.id.restricted_lock_icon_remote_input);
        restricted.setVisibility(mAdminRestrictingRemoteInput == null ? View.GONE : View.VISIBLE);

        if (mAdminRestrictingRemoteInput != null) {
            checkbox.setClickable(false);
            dialog.findViewById(com.android.internal.R.id.customPanel)
                    .setOnClickListener(mListener);
        }
!!!812034.java!!!	onDialogStateRestored(inout dialog : Dialog, inout savedInstanceState : Bundle) : void
        super.onDialogStateRestored(dialog, savedInstanceState);
        ListView listView = ((AlertDialog) dialog).getListView();
        int selectedPosition = listView.getCheckedItemPosition();

        View panel = dialog.findViewById(com.android.internal.R.id.customPanel);
        panel.setVisibility(checkboxVisibilityForSelectedIndex(selectedPosition,
                mShowRemoteInput));
        mListener.setView(panel);
!!!812162.java!!!	createListAdapter() : ListAdapter
        return new RestrictedArrayAdapter(getContext(), getEntries(), -1);
!!!812290.java!!!	onDialogClosed(inout positiveResult : boolean) : void
        super.onDialogClosed(positiveResult);
        Settings.Secure.putInt(getContext().getContentResolver(),
                Settings.Secure.LOCK_SCREEN_ALLOW_REMOTE_INPUT, mAllowRemoteInput ? 1 : 0);
!!!812418.java!!!	isAutoClosePreference() : boolean
        return false;
!!!812546.java!!!	checkboxVisibilityForSelectedIndex(in selected : int, inout showRemoteAtAll : boolean) : int
        return selected == 1 && showRemoteAtAll && mRemoteInputCheckBoxEnabled ? View.VISIBLE
                : View.GONE;
