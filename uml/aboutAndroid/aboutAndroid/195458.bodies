class AccessibilitySettingsForSetupWizard
!!!404866.java!!!	getMetricsCategory() : int
        return MetricsEvent.SUW_ACCESSIBILITY;
!!!404994.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);
        addPreferencesFromResource(R.xml.accessibility_settings_for_setup_wizard);

        mDisplayMagnificationPreference = findPreference(DISPLAY_MAGNIFICATION_PREFERENCE);
        mScreenReaderPreference = findPreference(SCREEN_READER_PREFERENCE);
!!!405122.java!!!	onResume() : void
        super.onResume();
        updateScreenReaderPreference();
!!!405250.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
        super.onActivityCreated(savedInstanceState);
        setHasOptionsMenu(false);
!!!405378.java!!!	onPreferenceChange(inout preference : Preference, inout newValue : Object) : boolean
        return false;
!!!405506.java!!!	onPreferenceTreeClick(inout preference : Preference) : boolean
        if (mDisplayMagnificationPreference == preference) {
            Bundle extras = mDisplayMagnificationPreference.getExtras();
            extras.putString(AccessibilitySettings.EXTRA_TITLE,
                    getString(R.string.accessibility_screen_magnification_title));
            extras.putCharSequence(AccessibilitySettings.EXTRA_SUMMARY,
                    getText(R.string.accessibility_screen_magnification_summary));
            extras.putBoolean(AccessibilitySettings.EXTRA_CHECKED,
                    Settings.Secure.getInt(getContentResolver(),
                    Settings.Secure.ACCESSIBILITY_DISPLAY_MAGNIFICATION_ENABLED, 0) == 1);
        }

        return super.onPreferenceTreeClick(preference);
!!!405634.java!!!	findFirstServiceWithSpokenFeedback() : AccessibilityServiceInfo
        final AccessibilityManager manager =
                getActivity().getSystemService(AccessibilityManager.class);
        final List<AccessibilityServiceInfo> accessibilityServices =
                manager.getInstalledAccessibilityServiceList();
        for (AccessibilityServiceInfo info : accessibilityServices) {
            if ((info.feedbackType & AccessibilityServiceInfo.FEEDBACK_SPOKEN) != 0) {
                return info;
            }
        }

        return null;
!!!405762.java!!!	updateScreenReaderPreference() : void
        // Find a screen reader.
        AccessibilityServiceInfo info = findFirstServiceWithSpokenFeedback();
        if (info == null) {
            mScreenReaderPreference.setEnabled(false);
        } else {
            mScreenReaderPreference.setEnabled(true);
        }

        ServiceInfo serviceInfo = info.getResolveInfo().serviceInfo;
        String title = info.getResolveInfo().loadLabel(getPackageManager()).toString();
        mScreenReaderPreference.setTitle(title);

        ComponentName componentName = new ComponentName(serviceInfo.packageName, serviceInfo.name);
        mScreenReaderPreference.setKey(componentName.flattenToString());

        // Update the extras.
        Bundle extras = mScreenReaderPreference.getExtras();
        extras.putParcelable(AccessibilitySettings.EXTRA_COMPONENT_NAME, componentName);

        extras.putString(AccessibilitySettings.EXTRA_PREFERENCE_KEY,
                mScreenReaderPreference.getKey());
        extras.putString(AccessibilitySettings.EXTRA_TITLE, title);

        String description = info.loadDescription(getPackageManager());
        if (TextUtils.isEmpty(description)) {
            description = getString(R.string.accessibility_service_default_description);
        }
        extras.putString(AccessibilitySettings.EXTRA_SUMMARY, description);
