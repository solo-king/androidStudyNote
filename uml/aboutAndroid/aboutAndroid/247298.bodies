class BatteryCellParser
!!!713858.java!!!	getValue(inout rec : HistoryItem) : int
        int bin;
        if (((rec.states & HistoryItem.STATE_PHONE_STATE_MASK)
                >> HistoryItem.STATE_PHONE_STATE_SHIFT)
                == ServiceState.STATE_POWER_OFF) {
            bin = 0;
        } else if ((rec.states & HistoryItem.STATE_PHONE_SCANNING_FLAG) != 0) {
            bin = 1;
        } else {
            bin = (rec.states & HistoryItem.STATE_PHONE_SIGNAL_STRENGTH_MASK)
                    >> HistoryItem.STATE_PHONE_SIGNAL_STRENGTH_SHIFT;
            bin += 2;
        }
        return bin;
!!!713986.java!!!	onParsingStarted(in startTime : long, in endTime : long) : void
        mLength = endTime - startTime;
!!!714114.java!!!	onDataPoint(in time : long, inout record : HistoryItem) : void
        int value = getValue(record);
        if (value != mLastValue) {
            mData.put((int) time, value);
            mLastValue = value;
        }
        mLastTime = time;
!!!714242.java!!!	onDataGap() : void
        if (mLastValue != 0) {
            mData.put((int) mLastTime, 0);
            mLastValue = 0;
        }
!!!714370.java!!!	onParsingDone() : void
        if (mLastValue != 0) {
            mData.put((int) mLastTime, 0);
            mLastValue = 0;
        }
!!!714498.java!!!	getPeriod() : long
        return mLength;
!!!714626.java!!!	hasData() : boolean
        return mData.size() > 1;
!!!714754.java!!!	getColorArray() : SparseIntArray
        SparseIntArray ret = new SparseIntArray();
        for (int i = 0; i < mData.size(); i++) {
            ret.put(mData.keyAt(i), getColor(mData.valueAt(i)));
        }
        return ret;
!!!714882.java!!!	getColor(in i : int) : int
        return Utils.BADNESS_COLORS[i];
