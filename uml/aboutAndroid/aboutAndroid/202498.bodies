class AppOpsCategory
!!!450306.java!!!	AppOpsCategory(inout template : AppOpsState::OpsTemplate)
        this(template, false);
!!!450434.java!!!	AppOpsCategory(inout template : AppOpsState::OpsTemplate, inout userControlled : boolean)
        Bundle args = new Bundle();
        args.putParcelable("template", template);
        args.putBoolean("userControlled", userControlled);
        setArguments(args);
!!!452738.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);
        mState = new AppOpsState(getActivity());
        mUserControlled = getArguments().getBoolean("userControlled");
!!!452866.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
        super.onActivityCreated(savedInstanceState);

        // Give some text to display if there is no data.  In a real
        // application this would come from a resource.
        setEmptyText("No applications");

        // We have a menu item to show in action bar.
        setHasOptionsMenu(true);

        // Create an empty adapter we will use to display the loaded data.
        mAdapter = new AppListAdapter(getActivity(), mState, mUserControlled);
        setListAdapter(mAdapter);

        // Start out with a progress indicator.
        setListShown(false);

        // Prepare the loader.
        getLoaderManager().initLoader(0, null, this);
!!!452994.java!!!	startApplicationDetailsActivity() : void
        // start new fragment to display extended information
        Bundle args = new Bundle();
        args.putString(AppOpsDetails.ARG_PACKAGE_NAME, mCurrentPkgName);

        SettingsActivity sa = (SettingsActivity) getActivity();
        sa.startPreferencePanel(AppOpsDetails.class.getName(), args,
                R.string.app_ops_settings, null, this, RESULT_APP_DETAILS);
!!!453122.java!!!	onListItemClick(inout l : ListView, inout v : View, in position : int, in id : long) : void
        AppOpEntry entry = mAdapter.getItem(position);
        if (entry != null) {
            if (mUserControlled) {
                // We treat this as tapping on the check box, toggling the app op state.
                Switch sw = ((Switch) v.findViewById(R.id.op_switch));
                boolean checked = !sw.isChecked();
                sw.setChecked(checked);
                AppOpsManager.OpEntry op = entry.getOpEntry(0);
                int mode = checked ? AppOpsManager.MODE_ALLOWED : AppOpsManager.MODE_IGNORED;
                mState.getAppOpsManager().setMode(op.getOp(),
                        entry.getAppEntry().getApplicationInfo().uid,
                        entry.getAppEntry().getApplicationInfo().packageName,
                        mode);
                entry.overridePrimaryOpMode(mode);
            } else {
                mCurrentPkgName = entry.getAppEntry().getApplicationInfo().packageName;
                startApplicationDetailsActivity();
            }
        }
!!!453250.java!!!	onCreateLoader(in id : int, inout args : Bundle) : Loader<List<AppOpEntry>>
        Bundle fargs = getArguments();
        AppOpsState.OpsTemplate template = null;
        if (fargs != null) {
            template = (AppOpsState.OpsTemplate)fargs.getParcelable("template");
        }
        return new AppListLoader(getActivity(), mState, template, mUserControlled);
!!!453378.java!!!	onLoadFinished(inout loader : Loader<List<AppOpEntry>>, inout data : List<AppOpEntry>) : void
        // Set the new data in the adapter.
        mAdapter.setData(data);

        // The list should now be shown.
        if (isResumed()) {
            setListShown(true);
        } else {
            setListShownNoAnimation(true);
        }
!!!453506.java!!!	onLoaderReset(inout loader : Loader<List<AppOpEntry>>) : void
        // Clear the data in the adapter.
        mAdapter.setData(null);
