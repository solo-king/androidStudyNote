class PercentageBarChart
!!!648194.java!!!	PercentageBarChart(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);

        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.PercentageBarChart);
        mMinTickWidth = a.getDimensionPixelSize(R.styleable.PercentageBarChart_minTickWidth, 1);
        int emptyColor = a.getColor(R.styleable.PercentageBarChart_emptyColor, Color.BLACK);
        a.recycle();

        mEmptyPaint.setColor(emptyColor);
        mEmptyPaint.setStyle(Paint.Style.FILL);
!!!648322.java!!!	onDraw(inout canvas : Canvas) : void
        super.onDraw(canvas);

        final int left = getPaddingLeft();
        final int right = getWidth() - getPaddingRight();
        final int top = getPaddingTop();
        final int bottom = getHeight() - getPaddingBottom();

        final int width = right - left;

        final boolean isLayoutRtl = isLayoutRtl();
        if (isLayoutRtl) {
            float nextX = right;

            if (mEntries != null) {
                for (final Entry e : mEntries) {
                    final float entryWidth;
                    if (e.percentage == 0.0f) {
                        entryWidth = 0.0f;
                    } else {
                        entryWidth = Math.max(mMinTickWidth, width * e.percentage);
                    }

                    final float lastX = nextX - entryWidth;
                    if (lastX < left) {
                        canvas.drawRect(left, top, nextX, bottom, e.paint);
                        return;
                    }

                    canvas.drawRect(lastX, top, nextX, bottom, e.paint);
                    nextX = lastX;
                }
            }

            canvas.drawRect(left, top, nextX, bottom, mEmptyPaint);
        } else {
            float lastX = left;

            if (mEntries != null) {
                for (final Entry e : mEntries) {
                    final float entryWidth;
                    if (e.percentage == 0.0f) {
                        entryWidth = 0.0f;
                    } else {
                        entryWidth = Math.max(mMinTickWidth, width * e.percentage);
                    }

                    final float nextX = lastX + entryWidth;
                    if (nextX > right) {
                        canvas.drawRect(lastX, top, right, bottom, e.paint);
                        return;
                    }

                    canvas.drawRect(lastX, top, nextX, bottom, e.paint);
                    lastX = nextX;
                }
            }

            canvas.drawRect(lastX, top, right, bottom, mEmptyPaint);
        }
!!!648450.java!!!	setBackgroundColor(in color : int) : void
        mEmptyPaint.setColor(color);
!!!648578.java!!!	createEntry(in order : int, in percentage : float, in color : int) : PercentageBarChart::Entry
        final Paint p = new Paint();
        p.setColor(color);
        p.setStyle(Paint.Style.FILL);
        return new Entry(order, percentage, p);
!!!648706.java!!!	setEntries(inout entries : Collection<Entry>) : void
        mEntries = entries;
