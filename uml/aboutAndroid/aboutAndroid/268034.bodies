class ZenModeScheduleDaysSelection
!!!841218.java!!!	ZenModeScheduleDaysSelection(inout context : Context, inout days : int)
        super(context);
        mLayout = new LinearLayout(mContext);
        final int hPad = context.getResources()
                .getDimensionPixelSize(R.dimen.zen_schedule_day_margin);
        mLayout.setPadding(hPad, 0, hPad, 0);
        addView(mLayout);
        if (days != null) {
            for (int i = 0; i < days.length; i++) {
                mDays.put(days[i], true);
            }
        }
        mLayout.setOrientation(LinearLayout.VERTICAL);
        final Calendar c = Calendar.getInstance();
        int[] daysOfWeek = getDaysOfWeekForLocale(c);
        final LayoutInflater inflater = LayoutInflater.from(context);
        for (int i = 0; i < daysOfWeek.length; i++) {
            final int day = daysOfWeek[i];
            final CheckBox checkBox = (CheckBox) inflater.inflate(R.layout.zen_schedule_rule_day,
                    this, false);
            c.set(Calendar.DAY_OF_WEEK, day);
            checkBox.setText(mDayFormat.format(c.getTime()));
            checkBox.setChecked(mDays.get(day));
            checkBox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
                @Override
                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                    mDays.put(day, isChecked);
                    onChanged(getDays());
                }
            });
            mLayout.addView(checkBox);
        }
!!!841346.java!!!	getDays() : int
        final SparseBooleanArray rt = new SparseBooleanArray(mDays.size());
        for (int i = 0; i < mDays.size(); i++) {
            final int day = mDays.keyAt(i);
            if (!mDays.valueAt(i)) continue;
            rt.put(day, true);
        }
        final int[] rta = new int[rt.size()];
        for (int i = 0; i < rta.length; i++) {
            rta[i] = rt.keyAt(i);
        }
        Arrays.sort(rta);
        return rta;
!!!841474.java!!!	getDaysOfWeekForLocale(inout c : Calendar) : int
        int[] daysOfWeek = new int[7];
        int currentDay = c.getFirstDayOfWeek();
        for (int i = 0; i < daysOfWeek.length; i++) {
            if (currentDay > 7) currentDay = 1;
            daysOfWeek[i] = currentDay;
            currentDay++;
        }
        return daysOfWeek;
!!!841602.java!!!	onChanged(inout days : int) : void
        // event hook for subclasses
