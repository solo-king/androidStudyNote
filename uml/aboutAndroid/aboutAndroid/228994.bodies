class HotspotCondition
!!!608642.java!!!	HotspotCondition(inout manager : ConditionManager)
        super(manager);
        mWifiManager = mManager.getContext().getSystemService(WifiManager.class);
!!!608770.java!!!	refreshState() : void
        boolean wifiTetherEnabled = mWifiManager.isWifiApEnabled();
        setActive(wifiTetherEnabled);
!!!608898.java!!!	getReceiverClass() : Class<?>
        return Receiver.class;
!!!609026.java!!!	getIcon() : Icon
        return Icon.createWithResource(mManager.getContext(), R.drawable.ic_hotspot);
!!!609154.java!!!	getSsid() : String
        WifiConfiguration wifiConfig = mWifiManager.getWifiApConfiguration();
        if (wifiConfig == null) {
            return mManager.getContext().getString(
                    com.android.internal.R.string.wifi_tether_configure_ssid_default);
        } else {
            return wifiConfig.SSID;
        }
!!!609282.java!!!	getTitle() : CharSequence
        return mManager.getContext().getString(R.string.condition_hotspot_title);
!!!609410.java!!!	getSummary() : CharSequence
        return mManager.getContext().getString(R.string.condition_hotspot_summary, getSsid());
!!!609538.java!!!	getActions() : CharSequence
        final Context context = mManager.getContext();
        if (RestrictedLockUtils.hasBaseUserRestriction(context,
                UserManager.DISALLOW_CONFIG_TETHERING, UserHandle.myUserId())) {
            return new CharSequence[0];
        }
        return new CharSequence[] { context.getString(R.string.condition_turn_off) };
!!!609666.java!!!	onPrimaryClick() : void
        Utils.startWithFragment(mManager.getContext(), TetherSettings.class.getName(), null, null,
                0, R.string.tether_settings_title_all, null);
!!!609794.java!!!	onActionClick(in index : int) : void
        if (index == 0) {
            final Context context = mManager.getContext();
            final EnforcedAdmin admin = RestrictedLockUtils.checkIfRestrictionEnforced(context,
                    UserManager.DISALLOW_CONFIG_TETHERING, UserHandle.myUserId());
            if (admin != null) {
                RestrictedLockUtils.sendShowAdminSupportDetailsIntent(context, admin);
            } else {
                ConnectivityManager cm = (ConnectivityManager) context.getSystemService(
                        Context.CONNECTIVITY_SERVICE);
                cm.stopTethering(ConnectivityManager.TETHERING_WIFI);
                setActive(false);
            }
        } else {
            throw new IllegalArgumentException("Unexpected index " + index);
        }
!!!609922.java!!!	getMetricsConstant() : int
        return MetricsEvent.SETTINGS_CONDITION_HOTSPOT;
