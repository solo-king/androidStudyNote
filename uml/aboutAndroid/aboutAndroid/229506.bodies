class WorkModeCondition
!!!611458.java!!!	WorkModeCondition(inout conditionManager : ConditionManager)
        super(conditionManager);
        mUm = (UserManager) mManager.getContext().getSystemService(Context.USER_SERVICE);
!!!611586.java!!!	updateUserHandle() : void
        List<UserInfo> profiles = mUm.getProfiles(UserHandle.myUserId());
        final int profilesCount = profiles.size();
        mUserHandle = null;
        for (int i = 0; i < profilesCount; i++) {
            UserInfo userInfo = profiles.get(i);
            if (userInfo.isManagedProfile()) {
                // We assume there's only one managed profile, otherwise UI needs to change.
                mUserHandle = userInfo.getUserHandle();
                break;
            }
        }
!!!611714.java!!!	refreshState() : void
        updateUserHandle();
        setActive(mUserHandle != null && mUm.isQuietModeEnabled(mUserHandle));
!!!611842.java!!!	getIcon() : Icon
        return Icon.createWithResource(mManager.getContext(),
                R.drawable.ic_signal_workmode_enable);
!!!611970.java!!!	getTitle() : CharSequence
        return mManager.getContext().getString(R.string.condition_work_title);
!!!612098.java!!!	getSummary() : CharSequence
        return mManager.getContext().getString(R.string.condition_work_summary);
!!!612226.java!!!	getActions() : CharSequence
        return new CharSequence[] {
                mManager.getContext().getString(R.string.condition_turn_on)
        };
!!!612354.java!!!	onPrimaryClick() : void
        mManager.getContext().startActivity(new Intent(mManager.getContext(),
                Settings.AccountSettingsActivity.class));
!!!612482.java!!!	onActionClick(in index : int) : void
        if (index == 0) {
            if (mUserHandle != null) {
                mUm.trySetQuietModeDisabled(mUserHandle.getIdentifier(), null);
            }
            setActive(false);
        } else {
            throw new IllegalArgumentException("Unexpected index " + index);
        }
!!!612610.java!!!	getMetricsConstant() : int
        return MetricsEvent.SETTINGS_CONDITION_WORK_MODE;
