class RestrictedProfileSettings
!!!906498.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);

        if (icicle != null) {
            mEditUserInfoController.onRestoreInstanceState(icicle);
        }

        init(icicle);
!!!906626.java!!!	onActivityCreated(inout savedInstanceState : Bundle) : void
        mHeaderView = setPinnedHeaderView(R.layout.user_info_header);
        mHeaderView.setOnClickListener(this);
        mUserIconView = (ImageView) mHeaderView.findViewById(android.R.id.icon);
        mUserNameView = (TextView) mHeaderView.findViewById(android.R.id.title);
        mDeleteButton = (ImageView) mHeaderView.findViewById(R.id.delete);
        mDeleteButton.setOnClickListener(this);
        // This is going to bind the preferences.
        super.onActivityCreated(savedInstanceState);
!!!906754.java!!!	onSaveInstanceState(inout outState : Bundle) : void
        super.onSaveInstanceState(outState);
        mEditUserInfoController.onSaveInstanceState(outState);
!!!906882.java!!!	onResume() : void
        super.onResume();

        // Check if user still exists
        UserInfo info = Utils.getExistingUser(mUserManager, mUser);
        if (info == null) {
            finishFragment();
        } else {
            ((TextView) mHeaderView.findViewById(android.R.id.title)).setText(info.name);
            ((ImageView) mHeaderView.findViewById(android.R.id.icon)).setImageDrawable(
                    com.android.settingslib.Utils.getUserIcon(getActivity(), mUserManager, info));
        }
!!!907010.java!!!	startActivityForResult(inout intent : Intent, in requestCode : int) : void
        mEditUserInfoController.startingActivityForResult();
        super.startActivityForResult(intent, requestCode);
!!!907138.java!!!	onActivityResult(in requestCode : int, in resultCode : int, inout data : Intent) : void
        super.onActivityResult(requestCode, resultCode, data);

        mEditUserInfoController.onActivityResult(requestCode, resultCode, data);
!!!907266.java!!!	onClick(inout view : View) : void
        if (view == mHeaderView) {
            showDialog(DIALOG_ID_EDIT_USER_INFO);
        } else if (view == mDeleteButton) {
            showDialog(DIALOG_CONFIRM_REMOVE);
        } else {
            super.onClick(view); // in AppRestrictionsFragment
        }
!!!907394.java!!!	onCreateDialog(in dialogId : int) : Dialog
        if (dialogId == DIALOG_ID_EDIT_USER_INFO) {
            return mEditUserInfoController.createDialog(this, mUserIconView.getDrawable(),
                    mUserNameView.getText(), R.string.profile_info_settings_title,
                    this, mUser);
        } else if (dialogId == DIALOG_CONFIRM_REMOVE) {
            Dialog dlg =
                    UserDialogs.createRemoveDialog(getActivity(), mUser.getIdentifier(),
                            new DialogInterface.OnClickListener() {
                                public void onClick(DialogInterface dialog, int which) {
                                    removeUser();
                                }
                            }
                    );
            return dlg;
        }

        return null;
!!!907522.java!!!	removeUser() : void
        getView().post(new Runnable() {
            public void run() {
                mUserManager.removeUser(mUser.getIdentifier());
                finishFragment();
            }
        });
!!!907650.java!!!	onPhotoChanged(inout photo : Drawable) : void
        mUserIconView.setImageDrawable(photo);
!!!907778.java!!!	onLabelChanged(inout label : CharSequence) : void
        mUserNameView.setText(label);
