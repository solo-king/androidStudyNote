class ReflectUtils
!!!916738.java!!!	setFieldValue(inout targetObject : Object, in filedName : String, inout filedvalue : Object) : void
        try {
            Field field = targetObject.getClass().getDeclaredField(filedName);
            field.setAccessible(true);
            field.set(targetObject, filedvalue);
        } catch (Exception e) {
            Log.e(TAG, "setFieldValue->filedName:" + filedName);
            Log.e(TAG, "setFieldValue->value:" + filedvalue);
            Log.e(TAG, "setFieldValue->exception:" + e);
        }

!!!916866.java!!!	getFieldValue(inout targetObject : Object, in filedName : String) : Object
        try {
            Field field = targetObject.getClass().getDeclaredField(filedName);
            field.setAccessible(true);
            return field.get(targetObject);
        } catch (Exception e) {
            Log.e(TAG, "getFieldValue->filedName:" + filedName);
            Log.e(TAG, "getFieldValue->exception:" + e);
        }
        return null;
!!!916994.java!!!	invokeMethod(inout object : Object, in methodName : String, inout paramTypes : Class<?>, inout values : Object) : Object
        try {
            Method method = object.getClass().getDeclaredMethod(methodName, paramTypes);
            method.setAccessible(true);
            return method.invoke(object, values);
            //return method.invoke(object, paramTypes);
        } catch (Exception e) {
            Log.e(TAG, "invokeMethod->methodName:" + methodName);
            Log.e(TAG, "invokeMethod->exception:" + e);

        }
        return null;
!!!917122.java!!!	invokeMethodNoParameter(inout object : Object, in methodName : String) : Object
        try {
            Method method = object.getClass().getDeclaredMethod(methodName);
            method.setAccessible(true);
            return method.invoke(object);
            //return method.invoke(object, paramTypes);
        } catch (Exception e) {
            Log.e(TAG, "invokeMethod->methodName:" + methodName);
            Log.e(TAG, "invokeMethod->exception:" + e);

        }
        return null;
