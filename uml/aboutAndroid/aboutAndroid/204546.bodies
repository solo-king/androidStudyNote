class AppPermissions
!!!460546.java!!!	AppPermissions(inout context : Context, in packageName : String)
        mContext = context;
        mPackageInfo = getPackageInfo(packageName);
        refresh();
!!!460674.java!!!	getPackageInfo(in packageName : String) : PackageInfo
        try {
            return mContext.getPackageManager().getPackageInfo(packageName,
                    PackageManager.GET_PERMISSIONS);
        } catch (NameNotFoundException e) {
            Log.e(TAG, "Unable to find " + packageName, e);
            return null;
        }
!!!460802.java!!!	refresh() : void
        if (mPackageInfo != null) {
            loadPermissionGroups();
        }
!!!460930.java!!!	getPermissionCount() : int
        return mGroups.size();
!!!461058.java!!!	getGrantedPermissionsCount() : int
        int ct = 0;
        for (int i = 0; i < mGroups.size(); i++) {
            if (mGroups.valueAt(i).areRuntimePermissionsGranted()) {
                ct++;
            }
        }
        return ct;
!!!461186.java!!!	loadPermissionGroups() : void
        mGroups.clear();
        if (mPackageInfo.requestedPermissions == null) {
            return;
        }

        final boolean appSupportsRuntimePermissions = appSupportsRuntime(
                mPackageInfo.applicationInfo);

        for (int i = 0; i < mPackageInfo.requestedPermissions.length; i++) {
            String requestedPerm = mPackageInfo.requestedPermissions[i];

            final PermissionInfo permInfo;
            try {
                permInfo = mContext.getPackageManager().getPermissionInfo(requestedPerm, 0);
            } catch (NameNotFoundException e) {
                Log.w(TAG, "Unknown permission: " + requestedPerm);
                continue;
            }

            String permName = permInfo.name;
            String groupName = permInfo.group != null ? permInfo.group : permName;

            PermissionGroup group = mGroups.get(groupName);
            if (group == null) {
                group = new PermissionGroup();
                mGroups.put(groupName, group);
            }

            final boolean runtime = appSupportsRuntimePermissions
                    && permInfo.protectionLevel == PermissionInfo.PROTECTION_DANGEROUS;
            final boolean granted = (mPackageInfo.requestedPermissionsFlags[i]
                    & PackageInfo.REQUESTED_PERMISSION_GRANTED) != 0;

            Permission permission = new Permission(runtime, granted);
            group.addPermission(permission, permName);
        }
        // Only care about runtime perms for now.
        for (int i = mGroups.size() - 1; i >= 0; i--) {
            if (!mGroups.valueAt(i).mHasRuntimePermissions) {
                mGroups.removeAt(i);
            }
        }
!!!461314.java!!!	appSupportsRuntime(inout info : ApplicationInfo) : boolean
        return info.targetSdkVersion > Build.VERSION_CODES.LOLLIPOP_MR1;
