class SlidingTabLayout
!!!991746.java!!!	SlidingTabLayout(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        mLayoutInflater = LayoutInflater.from(context);
        mTitleView = new LinearLayout(context);
        mTitleView.setGravity(Gravity.CENTER_HORIZONTAL);
        mIndicatorView = mLayoutInflater.inflate(R.layout.sliding_tab_indicator_view, this, false);

        addView(mTitleView, LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
        addView(mIndicatorView, mIndicatorView.getLayoutParams());
!!!991874.java!!!	setViewPager(inout viewPager : RtlCompatibleViewPager) : void
        mTitleView.removeAllViews();

        mViewPager = viewPager;
        if (viewPager != null) {
            viewPager.addOnPageChangeListener(new InternalViewPagerListener());
            populateTabStrip();
        }
!!!992002.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        final int titleCount = mTitleView.getChildCount();
        if (titleCount > 0) {
            final int width = MeasureSpec.makeMeasureSpec(
                    mTitleView.getMeasuredWidth() / titleCount, MeasureSpec.EXACTLY);
            final int height = MeasureSpec.makeMeasureSpec(
                    mIndicatorView.getMeasuredHeight(), MeasureSpec.EXACTLY);
            mIndicatorView.measure(width, height);
        }
!!!992130.java!!!	onLayout(inout changed : boolean, in left : int, in top : int, in right : int, in bottom : int) : void
        if (mTitleView.getChildCount() > 0) {
            final int indicatorBottom = getMeasuredHeight();
            final int indicatorHeight = mIndicatorView.getMeasuredHeight();
            final int indicatorWidth = mIndicatorView.getMeasuredWidth();
            final int totalWidth = getMeasuredWidth();
            final int leftPadding = getPaddingLeft();
            final int rightPadding = getPaddingRight();

            mTitleView.layout(leftPadding, 0, mTitleView.getMeasuredWidth() + rightPadding,
                    mTitleView.getMeasuredHeight());
            // IndicatorView should start on the right when RTL mode is enabled
            if (isRtlMode()) {
                mIndicatorView.layout(totalWidth - indicatorWidth,
                        indicatorBottom - indicatorHeight, totalWidth,
                        indicatorBottom);
            } else {
                mIndicatorView.layout(0, indicatorBottom - indicatorHeight,
                        indicatorWidth, indicatorBottom);
            }
        }
!!!992258.java!!!	onClick(inout v : View) : void
        final int titleCount = mTitleView.getChildCount();
        for (int i = 0; i < titleCount; i++) {
            if (v == mTitleView.getChildAt(i)) {
                mViewPager.setCurrentItem(i);
                return;
            }
        }
!!!992386.java!!!	onViewPagerPageChanged(in position : int, in positionOffset : float) : void
        mSelectedPosition = position;
        mSelectionOffset = positionOffset;
        // Translation should be reversed in RTL mode
        final int leftIndicator = isRtlMode() ? -getIndicatorLeft() : getIndicatorLeft();
        mIndicatorView.setTranslationX(leftIndicator);
!!!992514.java!!!	populateTabStrip() : void
        final PagerAdapter adapter = mViewPager.getAdapter();

        for (int i = 0; i < adapter.getCount(); i++) {
            final TextView tabTitleView = (TextView) mLayoutInflater.inflate(
                    R.layout.sliding_tab_title_view, mTitleView, false);

            tabTitleView.setText(adapter.getPageTitle(i));
            tabTitleView.setOnClickListener(this);

            mTitleView.addView(tabTitleView);
            tabTitleView.setSelected(i == mViewPager.getCurrentItem());
        }
!!!992642.java!!!	getIndicatorLeft() : int
        View selectedTitle = mTitleView.getChildAt(mSelectedPosition);
        int left = selectedTitle.getLeft();
        if (mSelectionOffset > 0f && mSelectedPosition < (getChildCount() - 1)) {
            View nextTitle = mTitleView.getChildAt(mSelectedPosition + 1);
            left = (int) (mSelectionOffset * nextTitle.getLeft()
                    + (1.0f - mSelectionOffset) * left);
        }
        return left;
!!!992770.java!!!	isRtlMode() : boolean
        return getLayoutDirection() == LAYOUT_DIRECTION_RTL;
