class ethernet_static_ip_dialog
!!!692738.java!!!	ethernet_static_ip_dialog(inout context : Context, inout cancelable : boolean, inout listener : DialogInterface.OnClickListener, inout GetgetStaticIpInfo : getStaticIpInfo)
		super(context);
		mcontext = context;
		mListener = listener;
		mGetStaticInfo=GetgetStaticIpInfo;
		// TODO Auto-generated constructor stub
!!!692866.java!!!	onCreate(inout savedInstanceState : Bundle) : void
		mView = getLayoutInflater().inflate(R.layout.static_ip_dialog, null);
		setView(mView);
		setInverseBackgroundForced(true);

		mIpAddressView = (TextView) mView.findViewById(R.id.ipaddress);
		ipnetmask = (TextView) mView.findViewById(R.id.network_prefix_length);
		mIPgateway = (TextView) mView.findViewById(R.id.gateway);
		mdns1 = (TextView) mView.findViewById(R.id.dns1);
		mdns2 = (TextView) mView.findViewById(R.id.dns2);

		mIpAddressView.addTextChangedListener(this);
		ipnetmask.addTextChangedListener(this);
		mIPgateway.addTextChangedListener(this);
		mdns1.addTextChangedListener(this);
		mdns2.addTextChangedListener(this);

		setButton(BUTTON_SUBMIT, mcontext.getString(R.string.ethernet_connect), mListener);
		setButton(BUTTON_NEGATIVE,mcontext.getString(R.string.ethernet_cancel), mListener);
		setTitle(mcontext.getString(R.string.ethernet_settings));
        
        mEthManager = (EthernetManager) mcontext.getSystemService(Context.ETHERNET_SERVICE);

		super.onCreate(savedInstanceState);
!!!692994.java!!!	onStart() : void
		super.onStart();
		updateIpSettingsInfo();
		checkIPValue();
!!!693122.java!!!	updateIpSettingsInfo() : void
		Log.d("blb", "Static IP status updateIpSettingsInfo");
		ContentResolver contentResolver = mcontext.getContentResolver();
		String staticip = /*System.getString(contentResolver,System.ETHERNET_STATIC_IP);*/
                          mEthManager.getIpAddress();
		if (!TextUtils.isEmpty(staticip))
			mIpAddressView.setText(staticip);

		String ipmask = /*System.getString(contentResolver,System.ETHERNET_STATIC_NETMASK);*/
                        mEthManager.getNetmask();
		if (!TextUtils.isEmpty(ipmask))
			ipnetmask.setText(ipmask);

		String gateway = /*System.getString(contentResolver,System.ETHERNET_STATIC_GATEWAY);*/
                         mEthManager.getGateway();
		if (!TextUtils.isEmpty(gateway))
			mIPgateway.setText(gateway);

		String dns = /*System.getString(contentResolver,System.ETHERNET_STATIC_DNS1);*/
                      mEthManager.getDns();
        String mDns1 = nullIpInfo;
        String mDns2 = nullIpInfo;
        if ((dns != null) && (!dns.equals(""))){
            String data[] = dns.split(",");
       		mDns1 = data[0];
            if (data.length > 1)
                mDns2 = data[1];
    	}
		if (!TextUtils.isEmpty(mDns1))
			mdns1.setText(mDns1);
        if (!TextUtils.isEmpty(mDns2))
			mdns2.setText(mDns2);
	/*	String dns2 = System.getString(contentResolver,
				System.ETHERNET_STATIC_DNS2);
		if (!TextUtils.isEmpty(dns2))
			mdns2.setText(dns2);*/
!!!693250.java!!!	saveIpSettingInfo() : void
		ContentResolver contentResolver = mcontext.getContentResolver();
		String ipAddr = mIpAddressView.getText().toString();
		String gateway = mIPgateway.getText().toString();
		String netMask =ipnetmask.getText().toString();
		String dns1 = mdns1.getText().toString();
		String dns2 = mdns2.getText().toString();
		int network_prefix_length = 24;// Integer.parseInt(ipnetmask.getText().toString());

		mGetStaticInfo.getStaticIp(ipAddr);
		mGetStaticInfo.getStaticNetMask(netMask);
		mGetStaticInfo.getStaticGateway(gateway);
		mGetStaticInfo.getStaticDns1(dns1);
		mGetStaticInfo.getStaticDns2(dns2);
!!!693378.java!!!	isValidIpAddress(in value : String) : boolean
		int start = 0;
		int end = value.indexOf('.');
		int numBlocks = 0;

		while (start < value.length()) {

			if (-1 == end) {
				end = value.length();
			}

			try {
				int block = Integer.parseInt(value.substring(start, end));
				if ((block > 255) || (block < 0)) {
					Log.w("EthernetIP",
							"isValidIpAddress() : invalid 'block', block = "
									+ block);
					return false;
				}
			} catch (NumberFormatException e) {
				Log.w("EthernetIP", "isValidIpAddress() : e = " + e);
				return false;
			}

			numBlocks++;

			start = end + 1;
			end = value.indexOf('.', start);
		}
		return numBlocks == 4;
!!!693506.java!!!	checkIPValue() : void

		boolean enable = false;
		String ipAddr = mIpAddressView.getText().toString();
		String gateway = mIPgateway.getText().toString();
		String dns1 = mdns1.getText().toString();
		String dns2 = mdns2.getText().toString();
		String  netMask = ipnetmask.getText().toString();
     	Pattern pattern = Pattern.compile("(^((\\d|[01]?\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[01]?\\d\\d|2[0-4]\\d|25[0-5])$)|^(\\d|[1-2]\\d|3[0-2])$"); /*check subnet mask*/   	
		if (isValidIpAddress(ipAddr) && isValidIpAddress(gateway)
				&& isValidIpAddress(dns1) && (pattern.matcher(netMask).matches())) {
			if (TextUtils.isEmpty(dns2)) { // 为空可以不考虑
				enable = true;
			} else {
				if (isValidIpAddress(dns2)) {
					enable = true;
				} else {
					enable = false;
				}
			}
		} else {
			enable = false;
		}
		getButton(BUTTON_SUBMIT).setEnabled(enable);

!!!693634.java!!!	afterTextChanged(inout s : Editable) : void
		checkIPValue();
	//	Log.d("blb", "afterTextChanged");
!!!693762.java!!!	beforeTextChanged(inout s : CharSequence, in start : int, in count : int, in after : int) : void
		// work done in afterTextChanged
!!!693890.java!!!	onTextChanged(inout s : CharSequence, in start : int, in before : int, in count : int) : void
		// work done in afterTextChanged
