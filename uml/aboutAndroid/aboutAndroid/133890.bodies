class AppHeader
!!!156674.java!!!	createAppHeader(inout fragment : SettingsPreferenceFragment, inout icon : Drawable, inout label : CharSequence, in pkgName : String, in uid : int) : void
        createAppHeader(fragment, icon, label, pkgName, uid, 0, null);
!!!156802.java!!!	createAppHeader(inout fragment : SettingsPreferenceFragment, inout icon : Drawable, inout label : CharSequence, in pkgName : String, in uid : int, inout externalSettings : Intent) : void
        createAppHeader(fragment, icon, label, pkgName, uid, 0, externalSettings);
!!!156930.java!!!	createAppHeader(inout activity : Activity, inout icon : Drawable, inout label : CharSequence, in pkgName : String, in uid : int, inout pinnedHeader : ViewGroup) : void
        final View bar = activity.getLayoutInflater().inflate(R.layout.app_header,
                pinnedHeader, false);
        setupHeaderView(activity, icon, label, pkgName, uid, false, 0, bar, null);
        pinnedHeader.addView(bar);
!!!157058.java!!!	createAppHeader(inout fragment : SettingsPreferenceFragment, inout icon : Drawable, inout label : CharSequence, in pkgName : String, in uid : int, in tintColorRes : int) : void
        createAppHeader(fragment, icon, label, pkgName, uid, tintColorRes, null);
!!!157186.java!!!	createAppHeader(inout fragment : SettingsPreferenceFragment, inout icon : Drawable, inout label : CharSequence, in pkgName : String, in uid : int, in tintColorRes : int, inout externalSettings : Intent) : void
        View bar = fragment.setPinnedHeaderView(R.layout.app_header);
        setupHeaderView(fragment.getActivity(), icon, label, pkgName, uid, includeAppInfo(fragment),
                tintColorRes, bar, externalSettings);
!!!157314.java!!!	setupHeaderView(in activity : Activity, inout icon : Drawable, inout label : CharSequence, in pkgName : String, in uid : int, in includeAppInfo : boolean, in tintColorRes : int, inout bar : View, in externalSettings : Intent) : View
        final ImageView appIcon = (ImageView) bar.findViewById(R.id.app_icon);
        appIcon.setImageDrawable(icon);
        if (tintColorRes != 0) {
            appIcon.setImageTintList(ColorStateList.valueOf(activity.getColor(tintColorRes)));
        }

        final TextView appName = (TextView) bar.findViewById(R.id.app_name);
        appName.setText(label);

        if (pkgName != null && !pkgName.equals(Utils.OS_PKG)) {
            bar.setClickable(true);
            bar.setOnClickListener(new OnClickListener() {
                @Override
                public void onClick(View v) {
                    if (includeAppInfo) {
                        AppInfoBase.startAppInfoFragment(InstalledAppDetails.class,
                                R.string.application_info_label, pkgName, uid, activity,
                                INSTALLED_APP_DETAILS);
                    } else {
                        activity.finish();
                    }
                }
            });
            if (externalSettings != null) {
                final View appSettings = bar.findViewById(R.id.app_settings);
                appSettings.setVisibility(View.VISIBLE);
                appSettings.setOnClickListener(new OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        activity.startActivity(externalSettings);
                    }
                });
            }
        }
        return bar;
!!!157442.java!!!	includeAppInfo(in fragment : Fragment) : boolean
        Bundle args = fragment.getArguments();
        boolean showInfo = true;
        if (args != null && args.getBoolean(EXTRA_HIDE_INFO_BUTTON, false)) {
            showInfo = false;
        }
        Intent intent = fragment.getActivity().getIntent();
        if (intent != null && intent.getBooleanExtra(EXTRA_HIDE_INFO_BUTTON, false)) {
            showInfo = false;
        }
        return showInfo;
