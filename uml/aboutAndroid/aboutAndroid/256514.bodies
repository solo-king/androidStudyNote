class UserDictionaryAddWordFragment
!!!774402.java!!!	onActivityCreated(in savedInstanceState : Bundle) : void
        super.onActivityCreated(savedInstanceState);
        setHasOptionsMenu(true);
        getActivity().getActionBar().setTitle(R.string.user_dict_settings_title);
        // Keep the instance so that we remember mContents when configuration changes (eg rotation)
        setRetainInstance(true);
!!!774530.java!!!	onCreateView(in inflater : LayoutInflater, in container : ViewGroup, in savedState : Bundle) : View
        mRootView = inflater.inflate(R.layout.user_dictionary_add_word_fullscreen, null);
        mIsDeleting = false;
        // If we have a non-null mContents object, it's the old value before a configuration
        // change (eg rotation) so we need to use its values. Otherwise, read from the arguments.
        if (null == mContents) {
            mContents = new UserDictionaryAddWordContents(mRootView, getArguments());
        } else {
            // We create a new mContents object to account for the new situation : a word has
            // been added to the user dictionary when we started rotating, and we are now editing
            // it. That means in particular if the word undergoes any change, the old version should
            // be updated, so the mContents object needs to switch to EDIT mode if it was in
            // INSERT mode.
            mContents = new UserDictionaryAddWordContents(mRootView,
                    mContents /* oldInstanceToBeEdited */);
        }
        getActivity().getActionBar().setSubtitle(UserDictionarySettingsUtils.getLocaleDisplayName(
                getActivity(), mContents.getCurrentUserDictionaryLocale()));
        return mRootView;
!!!774658.java!!!	onCreateOptionsMenu(in menu : Menu, in inflater : MenuInflater) : void
        MenuItem actionItem = menu.add(0, OPTIONS_MENU_DELETE, 0, R.string.delete)
                .setIcon(android.R.drawable.ic_menu_delete);
        actionItem.setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM |
                MenuItem.SHOW_AS_ACTION_WITH_TEXT);
!!!774786.java!!!	onOptionsItemSelected(inout item : MenuItem) : boolean
        if (item.getItemId() == OPTIONS_MENU_DELETE) {
            mContents.delete(getActivity());
            mIsDeleting = true;
            getActivity().onBackPressed();
            return true;
        }
        return false;
!!!774914.java!!!	getMetricsCategory() : int
        return MetricsEvent.INPUTMETHOD_USER_DICTIONARY_ADD_WORD;
!!!775042.java!!!	onResume() : void
        super.onResume();
        // We are being shown: display the word
        updateSpinner();
!!!775170.java!!!	updateSpinner() : void
        final ArrayList<LocaleRenderer> localesList = mContents.getLocalesList(getActivity());

        final ArrayAdapter<LocaleRenderer> adapter = new ArrayAdapter<LocaleRenderer>(getActivity(),
                android.R.layout.simple_spinner_item, localesList);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
!!!775298.java!!!	onPause() : void
        super.onPause();
        // We are being hidden: commit changes to the user dictionary, unless we were deleting it
        if (!mIsDeleting) {
            mContents.apply(getActivity(), null);
        }
!!!775426.java!!!	onItemSelected(in parent : AdapterView<?>, in view : View, in pos : int, in id : long) : void
        final LocaleRenderer locale = (LocaleRenderer)parent.getItemAtPosition(pos);
        if (locale.isMoreLanguages()) {
            SettingsActivity sa = (SettingsActivity)getActivity();
            sa.startPreferenceFragment(new UserDictionaryLocalePicker(this), true);
        } else {
            mContents.updateLocale(locale.getLocaleString());
        }
!!!775554.java!!!	onNothingSelected(in parent : AdapterView<?>) : void
        // I'm not sure we can come here, but if we do, that's the right thing to do.
        final Bundle args = getArguments();
        mContents.updateLocale(args.getString(UserDictionaryAddWordContents.EXTRA_LOCALE));
!!!775682.java!!!	onLocaleSelected(in locale : Locale) : void
        mContents.updateLocale(locale.toString());
        getActivity().onBackPressed();
