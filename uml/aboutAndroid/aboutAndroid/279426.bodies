class UserDialogs
!!!909058.java!!!	createRemoveDialog(inout context : Context, in removingUserId : int, inout onConfirmListener : DialogInterface.OnClickListener) : Dialog
        UserManager um = (UserManager) context.getSystemService(Context.USER_SERVICE);
        UserInfo userInfo = um.getUserInfo(removingUserId);
        AlertDialog.Builder builder = new AlertDialog.Builder(context)
                .setPositiveButton(R.string.user_delete_button, onConfirmListener)
                .setNegativeButton(android.R.string.cancel, null);
        if (userInfo.isManagedProfile()) {
            builder.setTitle(R.string.work_profile_confirm_remove_title);
            View view = createRemoveManagedUserDialogView(context, removingUserId);
            if (view != null) {
                builder.setView(view);
            } else {
                builder.setMessage(R.string.work_profile_confirm_remove_message);
            }
        } else if (UserHandle.myUserId() == removingUserId) {
            builder.setTitle(R.string.user_confirm_remove_self_title);
            builder.setMessage(R.string.user_confirm_remove_self_message);
        } else if (userInfo.isRestricted()) {
            builder.setTitle(R.string.user_profile_confirm_remove_title);
            builder.setMessage(R.string.user_profile_confirm_remove_message);
        } else {
            builder.setTitle(R.string.user_confirm_remove_title);
            builder.setMessage(R.string.user_confirm_remove_message);
        }
        return builder.create();
!!!909186.java!!!	createRemoveManagedUserDialogView(inout context : Context, in userId : int) : View
        PackageManager packageManager = context.getPackageManager();
        ApplicationInfo mdmApplicationInfo = Utils.getAdminApplicationInfo(context, userId);
        if (mdmApplicationInfo == null) {
            return null;
        }
        LayoutInflater inflater =
                (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);

        View view = inflater.inflate(R.layout.delete_managed_profile_dialog, null);
        ImageView imageView =
                (ImageView) view.findViewById(R.id.delete_managed_profile_mdm_icon_view);
        Drawable badgedApplicationIcon = packageManager.getUserBadgedIcon(
                packageManager.getApplicationIcon(mdmApplicationInfo), new UserHandle(userId));
        imageView.setImageDrawable(badgedApplicationIcon);

        CharSequence appLabel = packageManager.getApplicationLabel(mdmApplicationInfo);
        CharSequence badgedAppLabel = packageManager.getUserBadgedLabel(appLabel,
                new UserHandle(userId));
        TextView textView =
                (TextView) view.findViewById(R.id.delete_managed_profile_device_manager_name);
        textView.setText(appLabel);
        if (!appLabel.toString().contentEquals(badgedAppLabel)) {
            textView.setContentDescription(badgedAppLabel);
        }

        return view;
!!!909314.java!!!	createEnablePhoneCallsAndSmsDialog(inout context : Context, inout onConfirmListener : DialogInterface.OnClickListener) : Dialog
        return new AlertDialog.Builder(context)
                .setTitle(R.string.user_enable_calling_and_sms_confirm_title)
                .setMessage(R.string.user_enable_calling_and_sms_confirm_message)
                .setPositiveButton(R.string.okay, onConfirmListener)
                .setNegativeButton(android.R.string.cancel, null)
                .create();
!!!909442.java!!!	createEnablePhoneCallsDialog(inout context : Context, inout onConfirmListener : DialogInterface.OnClickListener) : Dialog
        return new AlertDialog.Builder(context)
                .setTitle(R.string.user_enable_calling_confirm_title)
                .setMessage(R.string.user_enable_calling_confirm_message)
                .setPositiveButton(R.string.okay, onConfirmListener)
                .setNegativeButton(android.R.string.cancel, null)
                .create();
