class ZenModeSettings
!!!843906.java!!!	onCreate(inout savedInstanceState : Bundle) : void
        super.onCreate(savedInstanceState);

        addPreferencesFromResource(R.xml.zen_mode_settings);
        final PreferenceScreen root = getPreferenceScreen();

        mPrioritySettings = root.findPreference(KEY_PRIORITY_SETTINGS);
        mVisualSettings = root.findPreference(KEY_VISUAL_SETTINGS);
        mPolicy = NotificationManager.from(mContext).getNotificationPolicy();
!!!844034.java!!!	onResume() : void
        super.onResume();
        if (isUiRestricted()) {
            return;
        }
!!!844162.java!!!	getMetricsCategory() : int
        return MetricsEvent.NOTIFICATION_ZEN_MODE;
!!!844290.java!!!	onZenModeChanged() : void
        updateControls();
!!!844418.java!!!	onZenModeConfigChanged() : void
        mPolicy = NotificationManager.from(mContext).getNotificationPolicy();
        updateControls();
!!!844546.java!!!	updateControls() : void
        updatePrioritySettingsSummary();
        updateVisualSettingsSummary();
!!!844674.java!!!	updatePrioritySettingsSummary() : void
        String s = getResources().getString(R.string.zen_mode_alarms);
        s = appendLowercase(s, isCategoryEnabled(mPolicy, Policy.PRIORITY_CATEGORY_REMINDERS),
                R.string.zen_mode_reminders);
        s = appendLowercase(s, isCategoryEnabled(mPolicy, Policy.PRIORITY_CATEGORY_EVENTS),
                R.string.zen_mode_events);
        if (isCategoryEnabled(mPolicy, Policy.PRIORITY_CATEGORY_MESSAGES)) {
            if (mPolicy.priorityMessageSenders == Policy.PRIORITY_SENDERS_ANY) {
                s = appendLowercase(s, true, R.string.zen_mode_all_messages);
            } else {
                s = appendLowercase(s, true, R.string.zen_mode_selected_messages);
            }
        }
        if (isCategoryEnabled(mPolicy, Policy.PRIORITY_CATEGORY_CALLS)) {
            if (mPolicy.priorityCallSenders == Policy.PRIORITY_SENDERS_ANY) {
                s = appendLowercase(s, true, R.string.zen_mode_all_callers);
            } else {
                s = appendLowercase(s, true, R.string.zen_mode_selected_callers);
            }
        } else if (isCategoryEnabled(mPolicy, Policy.PRIORITY_CATEGORY_REPEAT_CALLERS)) {
            s = appendLowercase(s, true, R.string.zen_mode_repeat_callers);
        }
        mPrioritySettings.setSummary(s);
!!!844802.java!!!	updateVisualSettingsSummary() : void
        String s = getString(R.string.zen_mode_all_visual_interruptions);
        if (isEffectSuppressed(Policy.SUPPRESSED_EFFECT_SCREEN_ON)
                && isEffectSuppressed(Policy.SUPPRESSED_EFFECT_SCREEN_OFF)) {
            s = getString(R.string.zen_mode_no_visual_interruptions);
        } else if (isEffectSuppressed(Policy.SUPPRESSED_EFFECT_SCREEN_ON)) {
            s = getString(R.string.zen_mode_screen_on_visual_interruptions);
        } else if (isEffectSuppressed(Policy.SUPPRESSED_EFFECT_SCREEN_OFF)) {
            s = getString(R.string.zen_mode_screen_off_visual_interruptions);
        }
        mVisualSettings.setSummary(s);
!!!844930.java!!!	isEffectSuppressed(in effect : int) : boolean
        return (mPolicy.suppressedVisualEffects & effect) != 0;
!!!845058.java!!!	isCategoryEnabled(inout policy : Policy, in categoryType : int) : boolean
        return (policy.priorityCategories & categoryType) != 0;
!!!845186.java!!!	appendLowercase(in s : String, inout condition : boolean, in resId : int) : String
        if (condition) {
            return getResources().getString(R.string.join_many_items_middle, s,
                    getResources().getString(resId).toLowerCase());
        }
        return s;
!!!845314.java!!!	getHelpResource() : int
        return R.string.help_uri_interruptions;
