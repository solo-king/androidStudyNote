class NightDisplayCondition
!!!610178.java!!!	NightDisplayCondition(inout manager : ConditionManager)
        super(manager);
        mController = new NightDisplayController(manager.getContext());
        mController.setListener(this);
!!!610306.java!!!	getMetricsConstant() : int
        return MetricsEvent.SETTINGS_CONDITION_NIGHT_DISPLAY;
!!!610434.java!!!	getIcon() : Icon
        return Icon.createWithResource(mManager.getContext(), R.drawable.ic_settings_night_display);
!!!610562.java!!!	getTitle() : CharSequence
        return mManager.getContext().getString(R.string.condition_night_display_title);
!!!610690.java!!!	getSummary() : CharSequence
        return mManager.getContext().getString(R.string.condition_night_display_summary);
!!!610818.java!!!	getActions() : CharSequence
        return new CharSequence[] { mManager.getContext().getString(R.string.condition_turn_off) };
!!!610946.java!!!	onPrimaryClick() : void
        Utils.startWithFragment(mManager.getContext(), NightDisplaySettings.class.getName(), null,
                null, 0, R.string.night_display_title, null);
!!!611074.java!!!	onActionClick(in index : int) : void
        if (index == 0) {
            mController.setActivated(false);
        } else {
            throw new IllegalArgumentException("Unexpected index " + index);
        }
!!!611202.java!!!	refreshState() : void
        setActive(mController.isActivated());
!!!611330.java!!!	onActivated(inout activated : boolean) : void
        refreshState();
