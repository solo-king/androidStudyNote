class NotificationBackend
!!!809986.java!!!	loadAppRow(inout context : Context, inout pm : PackageManager, inout app : ApplicationInfo) : NotificationBackend::AppRow
        final AppRow row = new AppRow();
        row.pkg = app.packageName;
        row.uid = app.uid;
        try {
            row.label = app.loadLabel(pm);
        } catch (Throwable t) {
            Log.e(TAG, "Error loading application label for " + row.pkg, t);
            row.label = row.pkg;
        }
        row.icon = app.loadIcon(pm);
        row.banned = getNotificationsBanned(row.pkg, row.uid);
        row.appImportance = getImportance(row.pkg, row.uid);
        row.appBypassDnd = getBypassZenMode(row.pkg, row.uid);
        row.appVisOverride = getVisibilityOverride(row.pkg, row.uid);
        row.lockScreenSecure = new LockPatternUtils(context).isSecure(
                UserHandle.myUserId());
        return row;
!!!810114.java!!!	loadAppRow(inout context : Context, inout pm : PackageManager, inout app : PackageInfo) : NotificationBackend::AppRow
        final AppRow row = loadAppRow(context, pm, app.applicationInfo);
        row.cantBlock = Utils.isSystemPackage(context.getResources(), pm, app);
        final String[] nonBlockablePkgs = context.getResources().getStringArray(
                    com.android.internal.R.array.config_nonBlockableNotificationPackages);
        if (nonBlockablePkgs != null) {
            int N = nonBlockablePkgs.length;
            for (int i = 0; i < N; i++) {
                if (app.packageName.equals(nonBlockablePkgs[i])) {
                    row.cantBlock = row.cantSilence = true;
                }
            }
        }
        return row;
!!!810242.java!!!	getNotificationsBanned(in pkg : String, in uid : int) : boolean
        try {
            final boolean enabled = sINM.areNotificationsEnabledForPackage(pkg, uid);
            return !enabled;
        } catch (Exception e) {
            Log.w(TAG, "Error calling NoMan", e);
            return false;
        }
!!!810370.java!!!	getBypassZenMode(in pkg : String, in uid : int) : boolean
        try {
            return sINM.getPriority(pkg, uid) == Notification.PRIORITY_MAX;
        } catch (Exception e) {
            Log.w(TAG, "Error calling NoMan", e);
            return false;
        }
!!!810498.java!!!	setBypassZenMode(in pkg : String, in uid : int, inout bypassZen : boolean) : boolean
        try {
            sINM.setPriority(pkg, uid,
                    bypassZen ? Notification.PRIORITY_MAX : Notification.PRIORITY_DEFAULT);
            return true;
        } catch (Exception e) {
            Log.w(TAG, "Error calling NoMan", e);
            return false;
        }
!!!810626.java!!!	getVisibilityOverride(in pkg : String, in uid : int) : int
        try {
            return sINM.getVisibilityOverride(pkg, uid);
        } catch (Exception e) {
            Log.w(TAG, "Error calling NoMan", e);
            return NotificationListenerService.Ranking.VISIBILITY_NO_OVERRIDE;
        }
!!!810754.java!!!	setVisibilityOverride(in pkg : String, in uid : int, in override : int) : boolean
        try {
            sINM.setVisibilityOverride(pkg, uid, override);
            return true;
        } catch (Exception e) {
            Log.w(TAG, "Error calling NoMan", e);
            return false;
        }
!!!810882.java!!!	setImportance(in pkg : String, in uid : int, in importance : int) : boolean
        try {
            sINM.setImportance(pkg, uid, importance);
            return true;
        } catch (Exception e) {
            Log.w(TAG, "Error calling NoMan", e);
            return false;
        }
!!!811010.java!!!	getImportance(in pkg : String, in uid : int) : int
        try {
            return sINM.getImportance(pkg, uid);
        } catch (Exception e) {
            Log.w(TAG, "Error calling NoMan", e);
            return NotificationListenerService.Ranking.IMPORTANCE_UNSPECIFIED;
        }
