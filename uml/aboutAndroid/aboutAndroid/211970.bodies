class ManageAssist
!!!504066.java!!!	onCreate(inout icicle : Bundle) : void
        super.onCreate(icicle);
        addPreferencesFromResource(R.xml.manage_assist);

        mDefaultAssitPref = (DefaultAssistPreference) findPreference(KEY_DEFAULT_ASSIST);
        mDefaultAssitPref.setOnPreferenceChangeListener(this);

        mContextPref = (SwitchPreference) findPreference(KEY_CONTEXT);
        mContextPref.setChecked(Settings.Secure.getInt(getContentResolver(),
                Settings.Secure.ASSIST_STRUCTURE_ENABLED, 1) != 0);
        mContextPref.setOnPreferenceChangeListener(this);

        mScreenshotPref = (SwitchPreference) findPreference(KEY_SCREENSHOT);
        mScreenshotPref.setOnPreferenceChangeListener(this);

        mFlashPref = (SwitchPreference) findPreference(KEY_FLASH);
        mFlashPref.setOnPreferenceChangeListener(this);

        mVoiceInputPref = (VoiceInputListPreference) findPreference(KEY_VOICE_INPUT);
        updateUi();
!!!504194.java!!!	getMetricsCategory() : int
        return MetricsEvent.APPLICATIONS_MANAGE_ASSIST;
!!!504322.java!!!	onPreferenceChange(inout preference : Preference, inout newValue : Object) : boolean
        if (preference == mContextPref) {
            Settings.Secure.putInt(getContentResolver(), Settings.Secure.ASSIST_STRUCTURE_ENABLED,
                    (boolean) newValue ? 1 : 0);
            mHandler.post(() -> {
                guardScreenshotPref();
                guardFlashPref();
            });
            return true;
        }
        if (preference == mScreenshotPref) {
            Settings.Secure.putInt(getContentResolver(), Settings.Secure.ASSIST_SCREENSHOT_ENABLED,
                    (boolean) newValue ? 1 : 0);
            return true;
        }
        if (preference == mFlashPref) {
            Settings.Secure.putInt(getContentResolver(), Settings.Secure.ASSIST_DISCLOSURE_ENABLED,
                    (boolean) newValue ? 1 : 0);
            return true;
        }
        if (preference == mDefaultAssitPref) {
            String newAssitPackage = (String)newValue;
            if (newAssitPackage == null ||
                    newAssitPackage.contentEquals(DefaultAssistPreference.ITEM_NONE_VALUE)) {
                setDefaultAssist(DefaultAssistPreference.ITEM_NONE_VALUE);
                return false;
            }

            final String currentPackage = mDefaultAssitPref.getValue();
            if (currentPackage == null || !newAssitPackage.contentEquals(currentPackage)) {
                confirmNewAssist(newAssitPackage);
            }
            return false;
        }
        return false;
!!!504450.java!!!	guardScreenshotPref() : void
        boolean isChecked = mContextPref.isChecked();
        boolean screenshotPrefWasSet = Settings.Secure.getInt(
                getContentResolver(), Settings.Secure.ASSIST_SCREENSHOT_ENABLED, 1) != 0;
        mScreenshotPref.setEnabled(isChecked);
        mScreenshotPref.setChecked(isChecked && screenshotPrefWasSet);
!!!504578.java!!!	guardFlashPref() : void
        ComponentName assistant = mDefaultAssitPref.getCurrentAssist();

        boolean isContextChecked = mContextPref.isChecked();
        boolean willShowFlash = AssistUtils.shouldDisclose(getContext(), assistant);
        boolean isSystemAssistant = AssistUtils.isPreinstalledAssistant(getContext(), assistant);

        mFlashPref.setEnabled(isContextChecked && isSystemAssistant);
        mFlashPref.setChecked(willShowFlash);
!!!504706.java!!!	updateUi() : void
        mDefaultAssitPref.refreshAssistApps();
        mVoiceInputPref.refreshVoiceInputs();

        final ComponentName currentAssist = mDefaultAssitPref.getCurrentAssist();
        final boolean hasAssistant = currentAssist != null;
        if (hasAssistant) {
            getPreferenceScreen().addPreference(mContextPref);
            getPreferenceScreen().addPreference(mScreenshotPref);
        } else {
            getPreferenceScreen().removePreference(mContextPref);
            getPreferenceScreen().removePreference(mScreenshotPref);
            getPreferenceScreen().removePreference(mFlashPref);
        }

        if (hasAssistant && AssistUtils.allowDisablingAssistDisclosure(getContext())) {
            getPreferenceScreen().addPreference(mFlashPref);
        } else {
            getPreferenceScreen().removePreference(mFlashPref);
        }

        if (isCurrentAssistVoiceService()) {
            getPreferenceScreen().removePreference(mVoiceInputPref);
        } else {
            getPreferenceScreen().addPreference(mVoiceInputPref);
            mVoiceInputPref.setAssistRestrict(currentAssist);
        }

        guardScreenshotPref();
        guardFlashPref();
!!!504834.java!!!	isCurrentAssistVoiceService() : boolean
        ComponentName currentAssist = mDefaultAssitPref.getCurrentAssist();
        ComponentName activeService = mVoiceInputPref.getCurrentService();
        return currentAssist == null && activeService == null ||
                currentAssist != null && currentAssist.equals(activeService);
!!!504962.java!!!	confirmNewAssist(in newAssitPackage : String) : void
        final int selected = mDefaultAssitPref.findIndexOfValue(newAssitPackage);
        final CharSequence appLabel = mDefaultAssitPref.getEntries()[selected];

        final String title = getString(R.string.assistant_security_warning_title, appLabel);
        final String message = getString(R.string.assistant_security_warning, appLabel);

        final DialogInterface.OnClickListener onAgree = new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                setDefaultAssist(newAssitPackage);
            }
        };

        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
        builder.setTitle(title)
                .setMessage(message)
                .setCancelable(true)
                .setPositiveButton(R.string.assistant_security_warning_agree, onAgree)
                .setNegativeButton(R.string.assistant_security_warning_disagree, null);
        AlertDialog dialog = builder.create();
        dialog.show();
!!!505090.java!!!	setDefaultAssist(in assistPackage : String) : void
        mDefaultAssitPref.setValue(assistPackage);
        updateUi();
