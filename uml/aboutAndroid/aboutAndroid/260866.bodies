class PaymentBackend
!!!795266.java!!!	PaymentBackend(inout context : Context)
        mContext = context;

        mAdapter = NfcAdapter.getDefaultAdapter(context);
        mCardEmuManager = CardEmulation.getInstance(mAdapter);
        refresh();
!!!795394.java!!!	onPause() : void
        mSettingsPackageMonitor.unregister();
!!!795522.java!!!	onResume() : void
        mSettingsPackageMonitor.register(mContext, mContext.getMainLooper(), false);
!!!795650.java!!!	refresh() : void
        PackageManager pm = mContext.getPackageManager();
        List<ApduServiceInfo> serviceInfos =
                mCardEmuManager.getServices(CardEmulation.CATEGORY_PAYMENT);
        ArrayList<PaymentAppInfo> appInfos = new ArrayList<PaymentAppInfo>();

        if (serviceInfos == null) {
            makeCallbacks();
            return;
        }

        ComponentName defaultAppName = getDefaultPaymentApp();
        PaymentAppInfo foundDefaultApp = null;
        for (ApduServiceInfo service : serviceInfos) {
            PaymentAppInfo appInfo = new PaymentAppInfo();
            appInfo.label = service.loadLabel(pm);
            if (appInfo.label == null) {
                appInfo.label = service.loadAppLabel(pm);
            }
            appInfo.isDefault = service.getComponent().equals(defaultAppName);
            if (appInfo.isDefault) {
                foundDefaultApp = appInfo;
            }
            appInfo.componentName = service.getComponent();
            String settingsActivity = service.getSettingsActivityName();
            if (settingsActivity != null) {
                appInfo.settingsComponent = new ComponentName(appInfo.componentName.getPackageName(),
                        settingsActivity);
            } else {
                appInfo.settingsComponent = null;
            }
            appInfo.description = service.getDescription();
            appInfo.banner = service.loadBanner(pm);
            appInfos.add(appInfo);
        }
        mAppInfos = appInfos;
        mDefaultAppInfo = foundDefaultApp;
        makeCallbacks();
!!!795778.java!!!	registerCallback(inout callback : PaymentBackend::Callback) : void
        mCallbacks.add(callback);
!!!795906.java!!!	unregisterCallback(inout callback : PaymentBackend::Callback) : void
        mCallbacks.remove(callback);
!!!796034.java!!!	getPaymentAppInfos() : PaymentBackend::PaymentAppInfo
        return mAppInfos;
!!!796162.java!!!	getDefaultApp() : PaymentBackend::PaymentAppInfo
        return mDefaultAppInfo;
!!!796290.java!!!	makeCallbacks() : void
        for (Callback callback : mCallbacks) {
            callback.onPaymentAppsChanged();
        }
!!!796418.java!!!	loadDrawableForPackage(in pkgName : String, in drawableResId : int) : Drawable
        PackageManager pm = mContext.getPackageManager();
        try {
            Resources res = pm.getResourcesForApplication(pkgName);
            Drawable banner = res.getDrawable(drawableResId);
            return banner;
        } catch (Resources.NotFoundException e) {
            return null;
        } catch (PackageManager.NameNotFoundException e) {
            return null;
        }
!!!796546.java!!!	isForegroundMode() : boolean
        try {
            return Settings.Secure.getInt(mContext.getContentResolver(),
                    Settings.Secure.NFC_PAYMENT_FOREGROUND) != 0;
        } catch (SettingNotFoundException e) {
            return false;
        }
!!!796674.java!!!	setForegroundMode(inout foreground : boolean) : void
        Settings.Secure.putInt(mContext.getContentResolver(),
                Settings.Secure.NFC_PAYMENT_FOREGROUND, foreground ? 1 : 0) ;
!!!796802.java!!!	getDefaultPaymentApp() : ComponentName
        String componentString = Settings.Secure.getString(mContext.getContentResolver(),
                Settings.Secure.NFC_PAYMENT_DEFAULT_COMPONENT);
        if (componentString != null) {
            return ComponentName.unflattenFromString(componentString);
        } else {
            return null;
        }
!!!796930.java!!!	setDefaultPaymentApp(inout app : ComponentName) : void
        Settings.Secure.putString(mContext.getContentResolver(),
                Settings.Secure.NFC_PAYMENT_DEFAULT_COMPONENT,
                app != null ? app.flattenToString() : null);
        refresh();
