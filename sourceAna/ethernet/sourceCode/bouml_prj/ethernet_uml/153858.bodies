class DhcpRequestPacket
!!!332802.java!!!	DhcpRequestPacket(in transId : int, inout clientIp : InetAddress, inout clientMac : byte, inout broadcast : boolean)
        super(transId, clientIp, Inet4Address.ANY, Inet4Address.ANY,
          Inet4Address.ANY, clientMac, broadcast);
!!!332930.java!!!	toString() : String
        String s = super.toString();
        return s + " REQUEST, desired IP " + mRequestedIp + " from host '"
            + mHostName + "', param list length "
            + (mRequestedParams == null ? 0 : mRequestedParams.length);
!!!333058.java!!!	buildPacket(in encap : int, in destUdp : short, in srcUdp : short) : ByteBuffer
        ByteBuffer result = ByteBuffer.allocate(MAX_LENGTH);

        fillInPacket(encap, Inet4Address.ALL, Inet4Address.ANY, destUdp, srcUdp,
            result, DHCP_BOOTREQUEST, mBroadcast);
        result.flip();
        return result;
!!!333186.java!!!	finishPacket(inout buffer : ByteBuffer) : void
        byte[] clientId = new byte[7];

        // assemble client identifier
        clientId[0] = CLIENT_ID_ETHER;
        System.arraycopy(mClientMac, 0, clientId, 1, 6);

        addTlv(buffer, DHCP_MESSAGE_TYPE, DHCP_MESSAGE_TYPE_REQUEST);
        addTlv(buffer, DHCP_PARAMETER_LIST, mRequestedParams);
        addTlv(buffer, DHCP_REQUESTED_IP, mRequestedIp);
        addTlv(buffer, DHCP_SERVER_IDENTIFIER, mServerIdentifier);
        addTlv(buffer, DHCP_CLIENT_IDENTIFIER, clientId);
        addTlvEnd(buffer);
!!!333314.java!!!	doNextOp(inout machine : DhcpStateMachine) : void
        InetAddress clientRequest =
            mRequestedIp == null ? mClientIp : mRequestedIp;
        Log.v(TAG, "requested IP is " + mRequestedIp + " and client IP is " +
            mClientIp);
        machine.onRequestReceived(mBroadcast, mTransId, mClientMac,
            clientRequest, mRequestedParams, mHostName);
