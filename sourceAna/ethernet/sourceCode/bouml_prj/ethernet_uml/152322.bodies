class Builder
!!!320258.java!!!	Builder()
            mConfig.user = VpnService.this.getClass().getName();
!!!320386.java!!!	setSession(in session : String) : VpnService::Builder
            mConfig.session = session;
            return this;
!!!320514.java!!!	setConfigureIntent(inout intent : PendingIntent) : VpnService::Builder
            mConfig.configureIntent = intent;
            return this;
!!!320642.java!!!	setMtu(in mtu : int) : VpnService::Builder
            if (mtu <= 0) {
                throw new IllegalArgumentException("Bad mtu");
            }
            mConfig.mtu = mtu;
            return this;
!!!320770.java!!!	check(inout address : InetAddress, in prefixLength : int) : void
            if (address.isLoopbackAddress()) {
                throw new IllegalArgumentException("Bad address");
            }
            if (address instanceof Inet4Address) {
                if (prefixLength < 0 || prefixLength > 32) {
                    throw new IllegalArgumentException("Bad prefixLength");
                }
            } else if (address instanceof Inet6Address) {
                if (prefixLength < 0 || prefixLength > 128) {
                    throw new IllegalArgumentException("Bad prefixLength");
                }
            } else {
                throw new IllegalArgumentException("Unsupported family");
            }
!!!320898.java!!!	addAddress(inout address : InetAddress, in prefixLength : int) : VpnService::Builder
            check(address, prefixLength);

            if (address.isAnyLocalAddress()) {
                throw new IllegalArgumentException("Bad address");
            }
            mAddresses.add(new LinkAddress(address, prefixLength));
            return this;
!!!321026.java!!!	addAddress(in address : String, in prefixLength : int) : VpnService::Builder
            return addAddress(InetAddress.parseNumericAddress(address), prefixLength);
!!!321154.java!!!	addRoute(inout address : InetAddress, in prefixLength : int) : VpnService::Builder
            check(address, prefixLength);

            int offset = prefixLength / 8;
            byte[] bytes = address.getAddress();
            if (offset < bytes.length) {
                for (bytes[offset] <<= prefixLength % 8; offset < bytes.length; ++offset) {
                    if (bytes[offset] != 0) {
                        throw new IllegalArgumentException("Bad address");
                    }
                }
            }
            mRoutes.add(new RouteInfo(new LinkAddress(address, prefixLength), null));
            return this;
!!!321282.java!!!	addRoute(in address : String, in prefixLength : int) : VpnService::Builder
            return addRoute(InetAddress.parseNumericAddress(address), prefixLength);
!!!321410.java!!!	addDnsServer(inout address : InetAddress) : VpnService::Builder
            if (address.isLoopbackAddress() || address.isAnyLocalAddress()) {
                throw new IllegalArgumentException("Bad address");
            }
            if (mConfig.dnsServers == null) {
                mConfig.dnsServers = new ArrayList<String>();
            }
            mConfig.dnsServers.add(address.getHostAddress());
            return this;
!!!321538.java!!!	addDnsServer(in address : String) : VpnService::Builder
            return addDnsServer(InetAddress.parseNumericAddress(address));
!!!321666.java!!!	addSearchDomain(in domain : String) : VpnService::Builder
            if (mConfig.searchDomains == null) {
                mConfig.searchDomains = new ArrayList<String>();
            }
            mConfig.searchDomains.add(domain);
            return this;
!!!321794.java!!!	establish() : ParcelFileDescriptor
            mConfig.addresses = mAddresses;
            mConfig.routes = mRoutes;

            try {
                return getService().establishVpn(mConfig);
            } catch (RemoteException e) {
                throw new IllegalStateException(e);
            }
