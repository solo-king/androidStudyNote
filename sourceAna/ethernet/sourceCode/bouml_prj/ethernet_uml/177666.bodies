class ObserverThread
!!!481282.java!!!	ObserverThread()
            super("FileObserver");
            m_fd = init();
!!!481410.java!!!	run() : void
            observe(m_fd);
!!!481538.java!!!	startWatching(in path : String, in mask : int, inout observer : FileObserver) : int
            int wfd = startWatching(m_fd, path, mask);

            Integer i = new Integer(wfd);
            if (wfd >= 0) {
                synchronized (m_observers) {
                    m_observers.put(i, new WeakReference(observer));
                }
            }

            return i;
!!!481666.java!!!	stopWatching(in descriptor : int) : void
            stopWatching(m_fd, descriptor);
!!!481794.java!!!	onEvent(in wfd : int, in mask : int, in path : String) : void
            // look up our observer, fixing up the map if necessary...
            FileObserver observer = null;

            synchronized (m_observers) {
                WeakReference weak = m_observers.get(wfd);
                if (weak != null) {  // can happen with lots of events from a dead wfd
                    observer = (FileObserver) weak.get();
                    if (observer == null) {
                        m_observers.remove(wfd);
                    }
                }
            }

            // ...then call out to the observer without the sync lock held
            if (observer != null) {
                try {
                    observer.onEvent(mask, path);
                } catch (Throwable throwable) {
                    Log.wtf(LOG_TAG, "Unhandled exception in FileObserver " + observer, throwable);
                }
            }
