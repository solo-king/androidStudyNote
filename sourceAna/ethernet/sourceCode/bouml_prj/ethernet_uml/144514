format 76
"content" // sourceCode::content
  revision 1
  modified_by 2 "loveS"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  java_dir "G:/androidStudyNote/sourceAna/ethernet/sourceCode/content/"
  java_package "android.content"
  classview 143618 "content"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 192642 "AbstractThreadedSyncAdapter"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation.
If a sync operation is already in progress when a startSync() request is received then an error
will be returned to the new request and the existing request will be allowed to continue.
When a startSync() is received and there is no sync operation in progress then a thread
will be started to run the operation and {@link #onPerformSync} will be invoked on that thread.
If a cancelSync() is received that matches an existing sync operation then the thread
that is running that sync operation will be interrupted, which will indicate to the thread
that the sync has been canceled.
<p>
In order to be a sync adapter one must extend this class, provide implementations for the
abstract methods and write a service that returns the result of {@link #getSyncAdapterBinder()}
in the service's {@link android.app.Service#onBind(android.content.Intent)} when invoked
with an intent with action <code>android.content.SyncAdapter</code>. This service
must specify the following intent filter and metadata tags in its AndroidManifest.xml file
<pre>
  &lt;intent-filter&gt;
    &lt;action android:name=\"android.content.SyncAdapter\" /&gt;
  &lt;/intent-filter&gt;
  &lt;meta-data android:name=\"android.content.SyncAdapter\"
            android:resource=\"@xml/syncadapter\" /&gt;
</pre>
The <code>android:resource</code> attribute must point to a resource that looks like:
<pre>
&lt;sync-adapter xmlns:android=\"http://schemas.android.com/apk/res/android\"
   android:contentAuthority=\"authority\"
   android:accountType=\"accountType\"
   android:userVisible=\"true|false\"
   android:supportsUploading=\"true|false\"
   android:allowParallelSyncs=\"true|false\"
   android:isAlwaysSyncable=\"true|false\"
   android:syncAdapterSettingsAction=\"ACTION_OF_SETTINGS_ACTIVITY\"
/&gt;
</pre>
<ul>
<li>The <code>android:contentAuthority</code> and <code>android:accountType</code> attributes
indicate which content authority and for which account types this sync adapter serves.
<li><code>android:userVisible</code> defaults to true and controls whether or not this sync
adapter shows up in the Sync Settings screen.
<li><code>android:supportsUploading</code> defaults
to true and if true an upload-only sync will be requested for all syncadapters associated
with an authority whenever that authority's content provider does a
{@link ContentResolver#notifyChange(android.net.Uri, android.database.ContentObserver, boolean)}
with syncToNetwork set to true.
<li><code>android:allowParallelSyncs</code> defaults to false and if true indicates that
the sync adapter can handle syncs for multiple accounts at the same time. Otherwise
the SyncManager will wait until the sync adapter is not in use before requesting that
it sync an account's data.
<li><code>android:isAlwaysSyncable</code> defaults to false and if true tells the SyncManager
to intialize the isSyncable state to 1 for that sync adapter for each account that is added.
<li><code>android:syncAdapterSettingsAction</code> defaults to null and if supplied it
specifies an Intent action of an activity that can be used to adjust the sync adapter's
sync settings. The activity must live in the same package as the sync adapter.
</ul>"
      attribute 416002 "LOG_SYNC_DETAILS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2743"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Kernel event log tag.  Also listed in data/etc/event-log-tags.
@deprecated Private constant.  May go away in the next release.
"
      end

      classrelation 200322 // mContext (<unidirectional association>)
	relation 200322 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 200322 // mContext (<unidirectional association>)
	  b parent class_ref 192770 // Context
      end

      attribute 416130 "mNumSyncStarts"
	const_attribute private explicit_type "AtomicInteger"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 192898 "ISyncAdapterImpl"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 200706 // <generalisation>
	  relation 200706 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 200706 // <generalisation>
	    b parent class_ref 193154 // Stub
	end

	operation 623618 "startSync"
	  public explicit_return_type "void"
	  nparams 4
	    param inout name "syncContext" explicit_type "ISyncContext"
	    param in name "authority" explicit_type "String"
	    param inout name "account" explicit_type "Account"
	    param inout name "extras" type class_ref 174082 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 623746 "cancelSync"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "syncContext" explicit_type "ISyncContext"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 623874 "initialize"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "account" explicit_type "Account"
	    param in name "authority" explicit_type "String"
	  nexceptions 1
	    exception class_ref 172802 // RemoteException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 200450 // mISyncAdapterImpl (<unidirectional association>)
	relation 200450 --->
	  a role_name "mISyncAdapterImpl" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 200450 // mISyncAdapterImpl (<unidirectional association>)
	  b parent class_ref 192898 // ISyncAdapterImpl
      end

      class 193026 "SyncThread"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 200834 // <generalisation>
	  relation 200834 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 200834 // <generalisation>
	    b parent class_ref 130178 // Thread
	end

	classrelation 200962 // mSyncContext (<unidirectional association>)
	  relation 200962 --->
	    a role_name "mSyncContext" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 200962 // mSyncContext (<unidirectional association>)
	    b parent class_ref 193282 // SyncContext
	end

	attribute 416642 "mAuthority"
	  const_attribute private explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 416770 "mAccount"
	  const_attribute private explicit_type "Account"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 201090 // mExtras (<unidirectional association>)
	  relation 201090 --->
	    a role_name "mExtras" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 201090 // mExtras (<unidirectional association>)
	    b parent class_ref 174082 // Bundle
	end

	attribute 416898 "mThreadsKey"
	  const_attribute private explicit_type "Account"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 624002 "SyncThread"
	  private explicit_return_type ""
	  nparams 5
	    param in name "name" explicit_type "String"
	    param inout name "syncContext" type class_ref 193282 // SyncContext
	    param in name "authority" explicit_type "String"
	    param inout name "account" explicit_type "Account"
	    param inout name "extras" type class_ref 174082 // Bundle
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 624130 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 624258 "isCanceled"
	  private explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 200578 // mSyncThreads (<unidirectional association>)
	relation 200578 --->
	  stereotype "HashMap"
	  a role_name "mSyncThreads" init_value " new HashMap<Account, SyncThread>()" const_relation private
	    comment " all accesses to this member variable must be synchronized on mSyncThreadLock"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<Account, ${type}> ${name}${value};
"
	    classrelation_ref 200578 // mSyncThreads (<unidirectional association>)
	  b parent class_ref 193026 // SyncThread
      end

      attribute 416258 "mSyncThreadLock"
	const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 416386 "mAutoInitialize"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 416514 "mAllowParallelSyncs"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 623106 "AbstractThreadedSyncAdapter"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "autoInitialize" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@link AbstractThreadedSyncAdapter}.
@param context the {@link android.content.Context} that this is running within.
@param autoInitialize if true then sync requests that have
{@link ContentResolver#SYNC_EXTRAS_INITIALIZE} set will be internally handled by
{@link AbstractThreadedSyncAdapter} by calling
{@link ContentResolver#setIsSyncable(android.accounts.Account, String, int)} with 1 if it
is currently set to <0."
      end

      operation 623234 "AbstractThreadedSyncAdapter"
	public explicit_return_type ""
	nparams 3
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "autoInitialize" explicit_type "boolean"
	  param inout name "allowParallelSyncs" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an {@link AbstractThreadedSyncAdapter}.
@param context the {@link android.content.Context} that this is running within.
@param autoInitialize if true then sync requests that have
{@link ContentResolver#SYNC_EXTRAS_INITIALIZE} set will be internally handled by
{@link AbstractThreadedSyncAdapter} by calling
{@link ContentResolver#setIsSyncable(android.accounts.Account, String, int)} with 1 if it
is currently set to <0.
@param allowParallelSyncs if true then allow syncs for different accounts to run
at the same time, each in their own thread. This must be consistent with the setting
in the SyncAdapter's configuration file."
      end

      operation 623362 "getContext"
	public return_type class_ref 192770 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 623490 "toSyncKey"
	private explicit_return_type "Account"
	nparams 1
	  param inout name "account" explicit_type "Account"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 624386 "getSyncAdapterBinder"
	public return_type class_ref 172674 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return a reference to the IBinder of the SyncAdapter service."
      end

      operation 624514 "onPerformSync"
	abstract public explicit_return_type "void"
	nparams 5
	  param inout name "account" explicit_type "Account"
	  param inout name "extras" type class_ref 174082 // Bundle
	  param in name "authority" explicit_type "String"
	  param inout name "provider" type class_ref 193410 // ContentProviderClient
	  param inout name "syncResult" type class_ref 193538 // SyncResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a sync for this account. SyncAdapter-specific parameters may
be specified in extras, which is guaranteed to not be null. Invocations
of this method are guaranteed to be serialized.

@param account the account that should be synced
@param extras SyncAdapter-specific parameters
@param authority the authority of this sync request
@param provider a ContentProviderClient that points to the ContentProvider for this
  authority
@param syncResult SyncAdapter-specific parameters"
      end

      operation 624642 "onSyncCanceled"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that a sync operation has been canceled. This will be invoked on a separate
thread than the sync thread and so you must consider the multi-threaded implications
of the work that you do in this method.
<p>
This will only be invoked when the SyncAdapter indicates that it doesn't support
parallel syncs."
      end

      operation 624770 "onSyncCanceled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "thread" explicit_type "Thread"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that a sync operation has been canceled. This will be invoked on a separate
thread than the sync thread and so you must consider the multi-threaded implications
of the work that you do in this method.
<p>
This will only be invoked when the SyncAdapter indicates that it does support
parallel syncs.
@param thread the Thread of the sync that is to be canceled."
      end
    end

    class 192770 "Context"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface to global information about an application environment.  This is
an abstract class whose implementation is provided by
the Android system.  It
allows access to application-specific resources and classes, as well as
up-calls for application-level operations such as launching activities,
broadcasting and receiving intents, etc."
      attribute 438402 "MODE_PRIVATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "File creation mode: the default mode, where the created file can only
be accessed by the calling application (or all applications sharing the
same user ID).
@see #MODE_WORLD_READABLE
@see #MODE_WORLD_WRITEABLE
"
      end

      attribute 438530 "MODE_WORLD_READABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Creating world-readable files is very dangerous, and likely
to cause security holes in applications.  It is strongly discouraged;
instead, applications should use more formal mechanism for interactions
such as {@link ContentProvider}, {@link BroadcastReceiver}, and
{@link android.app.Service}.  There are no guarantees that this
access mode will remain on a file, such as when it goes through a
backup and restore.
File creation mode: allow all other applications to have read access
to the created file.
@see #MODE_PRIVATE
@see #MODE_WORLD_WRITEABLE
"
      end

      attribute 438658 "MODE_WORLD_WRITEABLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Creating world-writable files is very dangerous, and likely
to cause security holes in applications.  It is strongly discouraged;
instead, applications should use more formal mechanism for interactions
such as {@link ContentProvider}, {@link BroadcastReceiver}, and
{@link android.app.Service}.  There are no guarantees that this
access mode will remain on a file, such as when it goes through a
backup and restore.
File creation mode: allow all other applications to have write access
to the created file.
@see #MODE_PRIVATE
@see #MODE_WORLD_READABLE
"
      end

      attribute 438786 "MODE_APPEND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "File creation mode: for use with {@link #openFileOutput}, if the file
already exists then write data to the end of the existing file
instead of erasing it.
@see #openFileOutput
"
      end

      attribute 438914 "MODE_MULTI_PROCESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "SharedPreference loading flag: when set, the file on disk will
be checked for modification even if the shared preferences
instance is already loaded in this process.  This behavior is
sometimes desired in cases where the application has multiple
processes, all writing to the same SharedPreferences file.
Generally there are better forms of communication between
processes, though.

<p>This was the legacy (but undocumented) behavior in and
before Gingerbread (Android 2.3) and this flag is implied when
targetting such releases.  For applications targetting SDK
versions <em>greater than</em> Android 2.3, this flag must be
explicitly set if desired.

@see #getSharedPreferences
"
      end

      attribute 439042 "MODE_ENABLE_WRITE_AHEAD_LOGGING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Database open flag: when set, the database is opened with write-ahead
logging enabled by default.

@see #openOrCreateDatabase(String, int, CursorFactory)
@see #openOrCreateDatabase(String, int, CursorFactory, DatabaseErrorHandler)
@see SQLiteDatabase#enableWriteAheadLogging
"
      end

      attribute 439170 "BIND_AUTO_CREATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: automatically create the service as long
as the binding exists.  Note that while this will create the service,
its {@link android.app.Service#onStartCommand}
method will still only be called due to an
explicit call to {@link #startService}.  Even without that, though,
this still provides you with access to the service object while the
service is created.

<p>Note that prior to {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH},
not supplying this flag would also impact how important the system
consider's the target service's process to be.  When set, the only way
for it to be raised was by binding from a service in which case it will
only be important when that activity is in the foreground.  Now to
achieve this behavior you must explicitly supply the new flag
{@link #BIND_ADJUST_WITH_ACTIVITY}.  For compatibility, old applications
that don't specify {@link #BIND_AUTO_CREATE} will automatically have
the flags {@link #BIND_WAIVE_PRIORITY} and
{@link #BIND_ADJUST_WITH_ACTIVITY} set for them in order to achieve
the same result.
"
      end

      attribute 439298 "BIND_DEBUG_UNBIND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: include debugging help for mismatched
calls to unbind.  When this flag is set, the callstack of the following
{@link #unbindService} call is retained, to be printed if a later
incorrect unbind call is made.  Note that doing this requires retaining
information about the binding that was made for the lifetime of the app,
resulting in a leak -- this should only be used for debugging.
"
      end

      attribute 439426 "BIND_NOT_FOREGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: don't allow this binding to raise
the target service's process to the foreground scheduling priority.
It will still be raised to at least the same memory priority
as the client (so that its process will not be killable in any
situation where the client is not killable), but for CPU scheduling
purposes it may be left in the background.  This only has an impact
in the situation where the binding client is a foreground process
and the target service is in a background process.
"
      end

      attribute 439554 "BIND_ABOVE_CLIENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: indicates that the client application
binding to this service considers the service to be more important than
the app itself.  When set, the platform will try to have the out of
memory killer kill the app before it kills the service it is bound to, though
this is not guaranteed to be the case.
"
      end

      attribute 439682 "BIND_ALLOW_OOM_MANAGEMENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: allow the process hosting the bound
service to go through its normal memory management.  It will be
treated more like a running service, allowing the system to
(temporarily) expunge the process if low on memory or for some other
whim it may have, and being more aggressive about making it a candidate
to be killed (and restarted) if running for a long time.
"
      end

      attribute 439810 "BIND_WAIVE_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: don't impact the scheduling or
memory management priority of the target service's hosting process.
Allows the service's process to be managed on the background LRU list
just like a regular application process in the background.
"
      end

      attribute 439938 "BIND_IMPORTANT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: this service is very important to
the client, so should be brought to the foreground process level
when the client is.  Normally a process can only be raised to the
visibility level by a client, even if that client is in the foreground.
"
      end

      attribute 440066 "BIND_ADJUST_WITH_ACTIVITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0080"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: If binding from an activity, allow the
target service's process importance to be raised based on whether the
activity is visible to the user, regardless whether another flag is
used to reduce the amount that the client process's overall importance
is used to impact it.
"
      end

      attribute 440194 "BIND_VISIBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide An idea that is not yet implemented.
Flag for {@link #bindService}: If binding from an activity, consider
this service to be visible like the binding activity is.  That is,
it will be treated as something more important to keep around than
invisible background activities.  This will impact the number of
recent activities the user can switch between without having them
restart.  There is no guarantee this will be respected, as the system
tries to balance such requests from one app vs. the importantance of
keeping other apps around.
"
      end

      attribute 440322 "BIND_SHOWING_UI"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Flag for {@link #bindService}: Consider this binding to be causing the target
process to be showing UI, so it will be do a UI_HIDDEN memory trim when it goes
away.
"
      end

      attribute 440450 "BIND_NOT_VISIBLE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for {@link #bindService}: Don't consider the bound service to be
visible, even if the caller is visible.
@hide
"
      end

      operation 690050 "getAssets"
	abstract public return_type class_ref 200834 // AssetManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return an AssetManager instance for your application's package. "
      end

      operation 690178 "getResources"
	abstract public return_type class_ref 199298 // Resources
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a Resources instance for your application's package. "
      end

      operation 690306 "getPackageManager"
	abstract public return_type class_ref 200962 // PackageManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return PackageManager instance to find global package information. "
      end

      operation 690434 "getContentResolver"
	abstract public return_type class_ref 193922 // ContentResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return a ContentResolver instance for your application's package. "
      end

      operation 690562 "getMainLooper"
	abstract public return_type class_ref 168834 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Looper for the main thread of the current process.  This is
the thread used to dispatch calls to application components (activities,
services, etc).
<p>
By definition, this method returns the same result as would be obtained
by calling {@link Looper#getMainLooper() Looper.getMainLooper()}.
</p>

@return The main looper."
      end

      operation 690690 "getApplicationContext"
	abstract public return_type class_ref 192770 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the context of the single, global Application object of the
current process.  This generally should only be used if you need a
Context whose lifecycle is separate from the current context, that is
tied to the lifetime of the process rather than the current component.

<p>Consider for example how this interacts with
{@link #registerReceiver(BroadcastReceiver, IntentFilter)}:
<ul>
<li> <p>If used from an Activity context, the receiver is being registered
within that activity.  This means that you are expected to unregister
before the activity is done being destroyed; in fact if you do not do
so, the framework will clean up your leaked registration as it removes
the activity and log an error.  Thus, if you use the Activity context
to register a receiver that is static (global to the process, not
associated with an Activity instance) then that registration will be
removed on you at whatever point the activity you used is destroyed.
<li> <p>If used from the Context returned here, the receiver is being
registered with the global state associated with your application.  Thus
it will never be unregistered for you.  This is necessary if the receiver
is associated with static data, not a particular component.  However
using the ApplicationContext elsewhere can easily lead to serious leaks
if you forget to unregister, unbind, etc.
</ul>"
      end

      operation 690818 "registerComponentCallbacks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 196354 // ComponentCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new {@link ComponentCallbacks} to the base application of the
Context, which will be called at the same times as the ComponentCallbacks
methods of activities and other components are called.  Note that you
<em>must</em> be sure to use {@link #unregisterComponentCallbacks} when
appropriate in the future; this will not be removed for you.

@param callback The interface to call.  This can be either a
{@link ComponentCallbacks} or {@link ComponentCallbacks2} interface."
      end

      operation 690946 "unregisterComponentCallbacks"
	public explicit_return_type "void"
	nparams 1
	  param inout name "callback" type class_ref 196354 // ComponentCallbacks
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a {@link ComponentCallbacks} object that was previously registered
with {@link #registerComponentCallbacks(ComponentCallbacks)}."
      end

      operation 691074 "getText"
	public explicit_return_type "CharSequence"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a localized, styled CharSequence from the application's package's
default string table.

@param resId Resource id for the CharSequence text"
      end

      operation 691202 "getString"
	public explicit_return_type "String"
	nparams 1
	  param in name "resId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a localized string from the application's package's
default string table.

@param resId Resource id for the string"
      end

      operation 691330 "getString"
	public explicit_return_type "String"
	nparams 2
	  param in name "resId" explicit_type "int"
	  param inout name "" explicit_type "Object...formatArgs"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a localized formatted string from the application's package's
default string table, substituting the format arguments as defined in
{@link java.util.Formatter} and {@link java.lang.String#format}.

@param resId Resource id for the format string
@param formatArgs The format arguments that will be used for substitution."
      end

      operation 691458 "setTheme"
	abstract public explicit_return_type "void"
	nparams 1
	  param in name "resid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base theme for this context.  Note that this should be called
before any views are instantiated in the Context (for example before
calling {@link android.app.Activity#setContentView} or
{@link android.view.LayoutInflater#inflate}).

@param resid The style resource describing the theme."
      end

      operation 691586 "getThemeResId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide Needed for some internal implementation...  not public because
you can't assume this actually means anything. "
      end

      operation 691714 "getTheme"
	abstract public return_type class_ref 201090 // Theme
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Theme object associated with this Context."
      end

      operation 691842 "obtainStyledAttributes"
	public return_type class_ref 201218 // TypedArray
	nparams 1
	  param inout name "attrs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve styled attribute information in this Context's theme.  See
{@link Resources.Theme#obtainStyledAttributes(int[])}
for more information.

@see Resources.Theme#obtainStyledAttributes(int[])"
      end

      operation 691970 "obtainStyledAttributes"
	public return_type class_ref 201218 // TypedArray
	nparams 2
	  param in name "resid" explicit_type "int"
	  param inout name "attrs" explicit_type "int"
	nexceptions 1
	  exception class_ref 201346 // NotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve styled attribute information in this Context's theme.  See
{@link Resources.Theme#obtainStyledAttributes(int, int[])}
for more information.

@see Resources.Theme#obtainStyledAttributes(int, int[])"
      end

      operation 692098 "obtainStyledAttributes"
	public return_type class_ref 201218 // TypedArray
	nparams 2
	  param inout name "set" explicit_type "AttributeSet"
	  param inout name "attrs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve styled attribute information in this Context's theme.  See
{@link Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)}
for more information.

@see Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)"
      end

      operation 692226 "obtainStyledAttributes"
	public return_type class_ref 201218 // TypedArray
	nparams 4
	  param inout name "set" explicit_type "AttributeSet"
	  param inout name "attrs" explicit_type "int"
	  param in name "defStyleAttr" explicit_type "int"
	  param in name "defStyleRes" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve styled attribute information in this Context's theme.  See
{@link Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)}
for more information.

@see Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)"
      end

      operation 692354 "getClassLoader"
	abstract public explicit_return_type "ClassLoader"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a class loader you can use to retrieve classes in this package."
      end

      operation 692482 "getPackageName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the name of this application's package. "
      end

      operation 692610 "getBasePackageName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide Return the name of the base context this context is derived from. "
      end

      operation 692738 "getOpPackageName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide Return the package name that should be used for app ops calls from
this context.  This is the same as {@link #getBasePackageName()} except in
cases where system components are loaded into other app processes, in which
case this will be the name of the primary package in that process (so that app
ops uid verification will work with the name). "
      end

      operation 692866 "getApplicationInfo"
	abstract public return_type class_ref 201474 // ApplicationInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Return the full application info for this context's package. "
      end

      operation 692994 "getPackageResourcePath"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the full path to this context's primary Android package.
The Android package is a ZIP file which contains the application's
primary resources.

<p>Note: this is not generally useful for applications, since they should
not be directly accessing the file system.

@return String Path to the resources."
      end

      operation 693122 "getPackageCodePath"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the full path to this context's primary Android package.
The Android package is a ZIP file which contains application's
primary code and assets.

<p>Note: this is not generally useful for applications, since they should
not be directly accessing the file system.

@return String Path to the code and assets."
      end

      operation 693250 "getSharedPrefsFile"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
Return the full path to the shared prefs file for the given prefs group name.

<p>Note: this is not generally useful for applications, since they should
not be directly accessing the file system."
      end

      operation 693378 "getSharedPreferences"
	abstract public return_type class_ref 201602 // SharedPreferences
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve and hold the contents of the preferences file 'name', returning
a SharedPreferences through which you can retrieve and modify its
values.  Only one instance of the SharedPreferences object is returned
to any callers for the same name, meaning they will see each other's
edits as soon as they are made.

@param name Desired preferences file. If a preferences file by this name
does not exist, it will be created when you retrieve an
editor (SharedPreferences.edit()) and then commit changes (Editor.commit()).
@param mode Operating mode.  Use 0 or {@link #MODE_PRIVATE} for the
default operation, {@link #MODE_WORLD_READABLE}
and {@link #MODE_WORLD_WRITEABLE} to control permissions.  The bit
{@link #MODE_MULTI_PROCESS} can also be used if multiple processes
are mutating the same SharedPreferences file.  {@link #MODE_MULTI_PROCESS}
is always on in apps targetting Gingerbread (Android 2.3) and below, and
off by default in later versions.

@return The single {@link SharedPreferences} instance that can be used
        to retrieve and modify the preference values.

@see #MODE_PRIVATE
@see #MODE_WORLD_READABLE
@see #MODE_WORLD_WRITEABLE
@see #MODE_MULTI_PROCESS"
      end

      operation 693506 "openFileInput"
	abstract public explicit_return_type "FileInputStream"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a private file associated with this Context's application package
for reading.

@param name The name of the file to open; can not contain path
            separators.

@return The resulting {@link FileInputStream}.

@see #openFileOutput
@see #fileList
@see #deleteFile
@see java.io.FileInputStream#FileInputStream(String)"
      end

      operation 693634 "openFileOutput"
	abstract public explicit_return_type "FileOutputStream"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a private file associated with this Context's application package
for writing.  Creates the file if it doesn't already exist.

@param name The name of the file to open; can not contain path
            separators.
@param mode Operating mode.  Use 0 or {@link #MODE_PRIVATE} for the
default operation, {@link #MODE_APPEND} to append to an existing file,
{@link #MODE_WORLD_READABLE} and {@link #MODE_WORLD_WRITEABLE} to control
permissions.

@return The resulting {@link FileOutputStream}.

@see #MODE_APPEND
@see #MODE_PRIVATE
@see #MODE_WORLD_READABLE
@see #MODE_WORLD_WRITEABLE
@see #openFileInput
@see #fileList
@see #deleteFile
@see java.io.FileOutputStream#FileOutputStream(String)"
      end

      operation 693762 "deleteFile"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete the given private file associated with this Context's
application package.

@param name The name of the file to delete; can not contain path
            separators.

@return {@code true} if the file was successfully deleted; else
        {@code false}.

@see #openFileInput
@see #openFileOutput
@see #fileList
@see java.io.File#delete()"
      end

      operation 693890 "getFileStreamPath"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path on the filesystem where a file created with
{@link #openFileOutput} is stored.

@param name The name of the file for which you would like to get
         its path.

@return An absolute path to the given file.

@see #openFileOutput
@see #getFilesDir
@see #getDir"
      end

      operation 694018 "getFilesDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the directory on the filesystem where
files created with {@link #openFileOutput} are stored.

@return The path of the directory holding application files.

@see #openFileOutput
@see #getFileStreamPath
@see #getDir"
      end

      operation 694146 "getExternalFilesDir"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the directory on the primary external filesystem
(that is somewhere on {@link android.os.Environment#getExternalStorageDirectory()
Environment.getExternalStorageDirectory()}) where the application can
place persistent files it owns.  These files are internal to the
applications, and not typically visible to the user as media.

<p>This is like {@link #getFilesDir()} in that these
files will be deleted when the application is uninstalled, however there
are some important differences:

<ul>
<li>External files are not always available: they will disappear if the
user mounts the external storage on a computer or removes it.  See the
APIs on {@link android.os.Environment} for information in the storage state.
<li>There is no security enforced with these files.  For example, any application
holding {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>

<p>Starting in {@link android.os.Build.VERSION_CODES#KITKAT}, no permissions
are required to read or write to the returned path; it's always
accessible to the calling app.  This only applies to paths generated for
package name of the calling application.  To access paths belonging
to other packages, {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE}
and/or {@link android.Manifest.permission#READ_EXTERNAL_STORAGE} are required.

<p>On devices with multiple users (as described by {@link UserManager}),
each user has their own isolated external storage. Applications only
have access to the external storage for the user they're running as.</p>

<p>Here is an example of typical code to manipulate a file in
an application's private storage:</p>

{@sample development/samples/ApiDemos/src/com/example/android/apis/content/ExternalStorage.java
private_file}

<p>If you supply a non-null <var>type</var> to this function, the returned
file will be a path to a sub-directory of the given type.  Though these files
are not automatically scanned by the media scanner, you can explicitly
add them to the media database with
{@link android.media.MediaScannerConnection#scanFile(Context, String[], String[],
     OnScanCompletedListener) MediaScannerConnection.scanFile}.
Note that this is not the same as
{@link android.os.Environment#getExternalStoragePublicDirectory
Environment.getExternalStoragePublicDirectory()}, which provides
directories of media shared by all applications.  The
directories returned here are
owned by the application, and their contents will be removed when the
application is uninstalled.  Unlike
{@link android.os.Environment#getExternalStoragePublicDirectory
Environment.getExternalStoragePublicDirectory()}, the directory
returned here will be automatically created for you.

<p>Here is an example of typical code to manipulate a picture in
an application's private storage and add it to the media database:</p>

{@sample development/samples/ApiDemos/src/com/example/android/apis/content/ExternalStorage.java
private_picture}

@param type The type of files directory to return.  May be null for
the root of the files directory or one of
the following Environment constants for a subdirectory:
{@link android.os.Environment#DIRECTORY_MUSIC},
{@link android.os.Environment#DIRECTORY_PODCASTS},
{@link android.os.Environment#DIRECTORY_RINGTONES},
{@link android.os.Environment#DIRECTORY_ALARMS},
{@link android.os.Environment#DIRECTORY_NOTIFICATIONS},
{@link android.os.Environment#DIRECTORY_PICTURES}, or
{@link android.os.Environment#DIRECTORY_MOVIES}.

@return The path of the directory holding application files
on external storage.  Returns null if external storage is not currently
mounted so it could not ensure the path exists; you will need to call
this method again when it is available.

@see #getFilesDir
@see android.os.Environment#getExternalStoragePublicDirectory"
      end

      operation 694274 "getExternalFilesDirs"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns absolute paths to application-specific directories on all
external storage devices where the application can place persistent files
it owns. These files are internal to the application, and not typically
visible to the user as media.
<p>
This is like {@link #getFilesDir()} in that these files will be deleted when
the application is uninstalled, however there are some important differences:
<ul>
<li>External files are not always available: they will disappear if the
user mounts the external storage on a computer or removes it.
<li>There is no security enforced with these files.
</ul>
<p>
External storage devices returned here are considered a permanent part of
the device, including both emulated external storage and physical media
slots, such as SD cards in a battery compartment. The returned paths do
not include transient devices, such as USB flash drives.
<p>
An application may store data on any or all of the returned devices.  For
example, an app may choose to store large files on the device with the
most available space, as measured by {@link StatFs}.
<p>
No permissions are required to read or write to the returned paths; they
are always accessible to the calling app.  Write access outside of these
paths on secondary external storage devices is not available.
<p>
The first path returned is the same as {@link #getExternalFilesDir(String)}.
Returned paths may be {@code null} if a storage device is unavailable.

@see #getExternalFilesDir(String)
@see Environment#getStorageState(File)"
      end

      operation 694402 "getObbDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the primary external storage directory where this application's OBB
files (if there are any) can be found. Note if the application does not have
any OBB files, this directory may not exist.
<p>
This is like {@link #getFilesDir()} in that these files will be deleted when
the application is uninstalled, however there are some important differences:
<ul>
<li>External files are not always available: they will disappear if the
user mounts the external storage on a computer or removes it.
<li>There is no security enforced with these files.  For example, any application
holding {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>
<p>
Starting in {@link android.os.Build.VERSION_CODES#KITKAT}, no permissions
are required to read or write to the returned path; it's always
accessible to the calling app.  This only applies to paths generated for
package name of the calling application.  To access paths belonging
to other packages, {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE}
and/or {@link android.Manifest.permission#READ_EXTERNAL_STORAGE} are required.
<p>
On devices with multiple users (as described by {@link UserManager}),
multiple users may share the same OBB storage location. Applications
should ensure that multiple instances running under different users don't
interfere with each other."
      end

      operation 694530 "getObbDirs"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns absolute paths to application-specific directories on all
external storage devices where the application's OBB files (if there are
any) can be found. Note if the application does not have any OBB files,
these directories may not exist.
<p>
This is like {@link #getFilesDir()} in that these files will be deleted when
the application is uninstalled, however there are some important differences:
<ul>
<li>External files are not always available: they will disappear if the
user mounts the external storage on a computer or removes it.
<li>There is no security enforced with these files.
</ul>
<p>
External storage devices returned here are considered a permanent part of
the device, including both emulated external storage and physical media
slots, such as SD cards in a battery compartment. The returned paths do
not include transient devices, such as USB flash drives.
<p>
An application may store data on any or all of the returned devices.  For
example, an app may choose to store large files on the device with the
most available space, as measured by {@link StatFs}.
<p>
No permissions are required to read or write to the returned paths; they
are always accessible to the calling app.  Write access outside of these
paths on secondary external storage devices is not available.
<p>
The first path returned is the same as {@link #getObbDir()}.
Returned paths may be {@code null} if a storage device is unavailable.

@see #getObbDir()
@see Environment#getStorageState(File)"
      end

      operation 694658 "getCacheDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the application specific cache directory
on the filesystem. These files will be ones that get deleted first when the
device runs low on storage.
There is no guarantee when these files will be deleted.

<strong>Note: you should not <em>rely</em> on the system deleting these
files for you; you should always have a reasonable maximum, such as 1 MB,
for the amount of space you consume with cache files, and prune those
files when exceeding that space.</strong>

@return The path of the directory holding application cache files.

@see #openFileOutput
@see #getFileStreamPath
@see #getDir"
      end

      operation 694786 "getExternalCacheDir"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path to the directory on the primary external filesystem
(that is somewhere on {@link android.os.Environment#getExternalStorageDirectory()
Environment.getExternalStorageDirectory()} where the application can
place cache files it owns. These files are internal to the application, and
not typically visible to the user as media.

<p>This is like {@link #getCacheDir()} in that these
files will be deleted when the application is uninstalled, however there
are some important differences:

<ul>
<li>The platform does not always monitor the space available in external
storage, and thus may not automatically delete these files.  Currently
the only time files here will be deleted by the platform is when running
on {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR1} or later and
{@link android.os.Environment#isExternalStorageEmulated()
Environment.isExternalStorageEmulated()} returns true.  Note that you should
be managing the maximum space you will use for these anyway, just like
with {@link #getCacheDir()}.
<li>External files are not always available: they will disappear if the
user mounts the external storage on a computer or removes it.  See the
APIs on {@link android.os.Environment} for information in the storage state.
<li>There is no security enforced with these files.  For example, any application
holding {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} can write to
these files.
</ul>

<p>Starting in {@link android.os.Build.VERSION_CODES#KITKAT}, no permissions
are required to read or write to the returned path; it's always
accessible to the calling app.  This only applies to paths generated for
package name of the calling application.  To access paths belonging
to other packages, {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE}
and/or {@link android.Manifest.permission#READ_EXTERNAL_STORAGE} are required.

<p>On devices with multiple users (as described by {@link UserManager}),
each user has their own isolated external storage. Applications only
have access to the external storage for the user they're running as.</p>

@return The path of the directory holding application cache files
on external storage.  Returns null if external storage is not currently
mounted so it could not ensure the path exists; you will need to call
this method again when it is available.

@see #getCacheDir"
      end

      operation 694914 "getExternalCacheDirs"
	abstract public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns absolute paths to application-specific directories on all
external storage devices where the application can place cache files it
owns. These files are internal to the application, and not typically
visible to the user as media.
<p>
This is like {@link #getCacheDir()} in that these files will be deleted when
the application is uninstalled, however there are some important differences:
<ul>
<li>External files are not always available: they will disappear if the
user mounts the external storage on a computer or removes it.
<li>There is no security enforced with these files.
</ul>
<p>
External storage devices returned here are considered a permanent part of
the device, including both emulated external storage and physical media
slots, such as SD cards in a battery compartment. The returned paths do
not include transient devices, such as USB flash drives.
<p>
An application may store data on any or all of the returned devices.  For
example, an app may choose to store large files on the device with the
most available space, as measured by {@link StatFs}.
<p>
No permissions are required to read or write to the returned paths; they
are always accessible to the calling app.  Write access outside of these
paths on secondary external storage devices is not available.
<p>
The first path returned is the same as {@link #getExternalCacheDir()}.
Returned paths may be {@code null} if a storage device is unavailable.

@see #getExternalCacheDir()
@see Environment#getStorageState(File)"
      end

      operation 695042 "fileList"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings naming the private files associated with
this Context's application package.

@return Array of strings naming the private files.

@see #openFileInput
@see #openFileOutput
@see #deleteFile"
      end

      operation 695170 "getDir"
	abstract public explicit_return_type "File"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve, creating if needed, a new directory in which the application
can place its own custom data files.  You can use the returned File
object to create and access files in this directory.  Note that files
created through a File object will only be accessible by your own
application; you can only set the mode of the entire directory, not
of individual files.

@param name Name of the directory to retrieve.  This is a directory
that is created as part of your application data.
@param mode Operating mode.  Use 0 or {@link #MODE_PRIVATE} for the
default operation, {@link #MODE_WORLD_READABLE} and
{@link #MODE_WORLD_WRITEABLE} to control permissions.

@return A {@link File} object for the requested directory.  The directory
will have been created if it does not already exist.

@see #openFileOutput(String, int)"
      end

      operation 695298 "openOrCreateDatabase"
	abstract public explicit_return_type "SQLiteDatabase"
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param inout name "factory" explicit_type "CursorFactory"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a new private SQLiteDatabase associated with this Context's
application package.  Create the database file if it doesn't exist.

@param name The name (unique in the application package) of the database.
@param mode Operating mode.  Use 0 or {@link #MODE_PRIVATE} for the
    default operation, {@link #MODE_WORLD_READABLE}
    and {@link #MODE_WORLD_WRITEABLE} to control permissions.
    Use {@link #MODE_ENABLE_WRITE_AHEAD_LOGGING} to enable write-ahead logging by default.
@param factory An optional factory class that is called to instantiate a
    cursor when query is called.

@return The contents of a newly created database with the given name.
@throws android.database.sqlite.SQLiteException if the database file could not be opened.

@see #MODE_PRIVATE
@see #MODE_WORLD_READABLE
@see #MODE_WORLD_WRITEABLE
@see #MODE_ENABLE_WRITE_AHEAD_LOGGING
@see #deleteDatabase"
      end

      operation 695426 "openOrCreateDatabase"
	abstract public explicit_return_type "SQLiteDatabase"
	nparams 4
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param inout name "factory" explicit_type "CursorFactory"
	  param inout name "errorHandler" explicit_type "DatabaseErrorHandler"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a new private SQLiteDatabase associated with this Context's
application package.  Creates the database file if it doesn't exist.

<p>Accepts input param: a concrete instance of {@link DatabaseErrorHandler} to be
used to handle corruption when sqlite reports database corruption.</p>

@param name The name (unique in the application package) of the database.
@param mode Operating mode.  Use 0 or {@link #MODE_PRIVATE} for the
    default operation, {@link #MODE_WORLD_READABLE}
    and {@link #MODE_WORLD_WRITEABLE} to control permissions.
    Use {@link #MODE_ENABLE_WRITE_AHEAD_LOGGING} to enable write-ahead logging by default.
@param factory An optional factory class that is called to instantiate a
    cursor when query is called.
@param errorHandler the {@link DatabaseErrorHandler} to be used when sqlite reports database
corruption. if null, {@link android.database.DefaultDatabaseErrorHandler} is assumed.
@return The contents of a newly created database with the given name.
@throws android.database.sqlite.SQLiteException if the database file could not be opened.

@see #MODE_PRIVATE
@see #MODE_WORLD_READABLE
@see #MODE_WORLD_WRITEABLE
@see #MODE_ENABLE_WRITE_AHEAD_LOGGING
@see #deleteDatabase"
      end

      operation 695554 "deleteDatabase"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Delete an existing private SQLiteDatabase associated with this Context's
application package.

@param name The name (unique in the application package) of the
            database.

@return {@code true} if the database was successfully deleted; else {@code false}.

@see #openOrCreateDatabase"
      end

      operation 695682 "getDatabasePath"
	abstract public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the absolute path on the filesystem where a database created with
{@link #openOrCreateDatabase} is stored.

@param name The name of the database for which you would like to get
         its path.

@return An absolute path to the given database.

@see #openOrCreateDatabase"
      end

      operation 695810 "databaseList"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns an array of strings naming the private databases associated with
this Context's application package.

@return Array of strings naming the private databases.

@see #openOrCreateDatabase
@see #deleteDatabase"
      end

      operation 695938 "getWallpaper"
	abstract public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#getDrawable
WallpaperManager.get()} instead."
      end

      operation 696066 "peekWallpaper"
	abstract public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#peekDrawable
WallpaperManager.peek()} instead."
      end

      operation 696194 "getWallpaperDesiredMinimumWidth"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#getDesiredMinimumWidth()
WallpaperManager.getDesiredMinimumWidth()} instead."
      end

      operation 696322 "getWallpaperDesiredMinimumHeight"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#getDesiredMinimumHeight()
WallpaperManager.getDesiredMinimumHeight()} instead."
      end

      operation 696450 "setWallpaper"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "bitmap" explicit_type "Bitmap"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#setBitmap(Bitmap)
WallpaperManager.set()} instead.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#SET_WALLPAPER}."
      end

      operation 696578 "setWallpaper"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "InputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#setStream(InputStream)
WallpaperManager.set()} instead.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#SET_WALLPAPER}."
      end

      operation 696706 "clearWallpaper"
	abstract public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Use {@link android.app.WallpaperManager#clear
WallpaperManager.clear()} instead.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#SET_WALLPAPER}."
      end

      operation 696834 "startActivity"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #startActivity(Intent, Bundle)} with no options
specified.

@param intent The description of the activity to start.

@throws ActivityNotFoundException &nbsp;

@see #startActivity(Intent, Bundle)
@see PackageManager#resolveActivity"
      end

      operation 696962 "startActivityAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #startActivity(Intent)} that allows you to specify the
user the activity will be started for.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS_FULL permission.
@param intent The description of the activity to start.
@param user The UserHandle of the user to start this activity for.
@throws ActivityNotFoundException &nbsp;
@hide"
      end

      operation 697090 "startActivity"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "options" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launch a new activity.  You will not receive any information about when
the activity exits.

<p>Note that if this method is being called from outside of an
{@link android.app.Activity} Context, then the Intent must include
the {@link Intent#FLAG_ACTIVITY_NEW_TASK} launch flag.  This is because,
without being started from an existing Activity, there is no existing
task in which to place the new activity and thus it needs to be placed
in its own separate task.

<p>This method throws {@link ActivityNotFoundException}
if there was no Activity found to run the given Intent.

@param intent The description of the activity to start.
@param options Additional options for how the Activity should be started.
May be null if there are no options.  See {@link android.app.ActivityOptions}
for how to build the Bundle supplied here; there are no supported definitions
for building it manually.

@throws ActivityNotFoundException &nbsp;

@see #startActivity(Intent)
@see PackageManager#resolveActivity"
      end

      operation 697218 "startActivityAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "options" type class_ref 174082 // Bundle
	  param inout name "userId" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #startActivity(Intent, Bundle)} that allows you to specify the
user the activity will be started for.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS_FULL permission.
@param intent The description of the activity to start.
@param options Additional options for how the Activity should be started.
May be null if there are no options.  See {@link android.app.ActivityOptions}
for how to build the Bundle supplied here; there are no supported definitions
for building it manually.
@param userId The UserHandle of the user to start this activity for.
@throws ActivityNotFoundException &nbsp;
@hide"
      end

      operation 697346 "startActivities"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intents" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #startActivities(Intent[], Bundle)} with no options
specified.

@param intents An array of Intents to be started.

@throws ActivityNotFoundException &nbsp;

@see #startActivities(Intent[], Bundle)
@see PackageManager#resolveActivity"
      end

      operation 697474 "startActivities"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intents" type class_ref 195458 // Intent
	  param inout name "options" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Launch multiple new activities.  This is generally the same as calling
{@link #startActivity(Intent)} for the first Intent in the array,
that activity during its creation calling {@link #startActivity(Intent)}
for the second entry, etc.  Note that unlike that approach, generally
none of the activities except the last in the array will be created
at this point, but rather will be created when the user first visits
them (due to pressing back from the activity on top).

<p>This method throws {@link ActivityNotFoundException}
if there was no Activity found for <em>any</em> given Intent.  In this
case the state of the activity stack is undefined (some Intents in the
list may be on it, some not), so you probably want to avoid such situations.

@param intents An array of Intents to be started.
@param options Additional options for how the Activity should be started.
See {@link android.content.Context#startActivity(Intent, Bundle)
Context.startActivity(Intent, Bundle)} for more details.

@throws ActivityNotFoundException &nbsp;

@see #startActivities(Intent[])
@see PackageManager#resolveActivity"
      end

      operation 697602 "startActivitiesAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intents" type class_ref 195458 // Intent
	  param inout name "options" type class_ref 174082 // Bundle
	  param inout name "userHandle" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Launch multiple new activities.  This is generally the same as calling
{@link #startActivity(Intent)} for the first Intent in the array,
that activity during its creation calling {@link #startActivity(Intent)}
for the second entry, etc.  Note that unlike that approach, generally
none of the activities except the last in the array will be created
at this point, but rather will be created when the user first visits
them (due to pressing back from the activity on top).

<p>This method throws {@link ActivityNotFoundException}
if there was no Activity found for <em>any</em> given Intent.  In this
case the state of the activity stack is undefined (some Intents in the
list may be on it, some not), so you probably want to avoid such situations.

@param intents An array of Intents to be started.
@param options Additional options for how the Activity should be started.
@param userHandle The user for whom to launch the activities
See {@link android.content.Context#startActivity(Intent, Bundle)
Context.startActivity(Intent, Bundle)} for more details.

@throws ActivityNotFoundException &nbsp;

@see #startActivities(Intent[])
@see PackageManager#resolveActivity"
      end

      operation 697730 "startIntentSender"
	abstract public explicit_return_type "void"
	nparams 5
	  param inout name "intent" type class_ref 201730 // IntentSender
	  param inout name "fillInIntent" type class_ref 195458 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	nexceptions 1
	  exception class_ref 201858 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #startIntentSender(IntentSender, Intent, int, int, int, Bundle)}
with no options specified.

@param intent The IntentSender to launch.
@param fillInIntent If non-null, this will be provided as the
intent parameter to {@link IntentSender#sendIntent}.
@param flagsMask Intent flags in the original IntentSender that you
would like to change.
@param flagsValues Desired values for any bits set in
<var>flagsMask</var>
@param extraFlags Always set to 0.

@see #startActivity(Intent)
@see #startIntentSender(IntentSender, Intent, int, int, int, Bundle)"
      end

      operation 697858 "startIntentSender"
	abstract public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 201730 // IntentSender
	  param inout name "fillInIntent" type class_ref 195458 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	  param inout name "options" type class_ref 174082 // Bundle
	nexceptions 1
	  exception class_ref 201858 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #startActivity(Intent, Bundle)}, but taking a IntentSender
to start.  If the IntentSender is for an activity, that activity will be started
as if you had called the regular {@link #startActivity(Intent)}
here; otherwise, its associated action will be executed (such as
sending a broadcast) as if you had called
{@link IntentSender#sendIntent IntentSender.sendIntent} on it.

@param intent The IntentSender to launch.
@param fillInIntent If non-null, this will be provided as the
intent parameter to {@link IntentSender#sendIntent}.
@param flagsMask Intent flags in the original IntentSender that you
would like to change.
@param flagsValues Desired values for any bits set in
<var>flagsMask</var>
@param extraFlags Always set to 0.
@param options Additional options for how the Activity should be started.
See {@link android.content.Context#startActivity(Intent, Bundle)
Context.startActivity(Intent, Bundle)} for more details.  If options
have also been supplied by the IntentSender, options given here will
override any that conflict with those given by the IntentSender.

@see #startActivity(Intent, Bundle)
@see #startIntentSender(IntentSender, Intent, int, int, int)"
      end

      operation 697986 "sendBroadcast"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Broadcast the given intent to all interested BroadcastReceivers.  This
call is asynchronous; it returns immediately, and you will continue
executing while the receivers are run.  No results are propagated from
receivers and receivers can not abort the broadcast. If you want
to allow receivers to propagate results or abort the broadcast, you must
send an ordered broadcast using
{@link #sendOrderedBroadcast(Intent, String)}.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.

@see android.content.BroadcastReceiver
@see #registerReceiver
@see #sendBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)"
      end

      operation 698114 "sendBroadcast"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Broadcast the given intent to all interested BroadcastReceivers, allowing
an optional required permission to be enforced.  This
call is asynchronous; it returns immediately, and you will continue
executing while the receivers are run.  No results are propagated from
receivers and receivers can not abort the broadcast. If you want
to allow receivers to propagate results or abort the broadcast, you must
send an ordered broadcast using
{@link #sendOrderedBroadcast(Intent, String)}.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermission (optional) String naming a permission that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.

@see android.content.BroadcastReceiver
@see #registerReceiver
@see #sendBroadcast(Intent)
@see #sendOrderedBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)"
      end

      operation 698242 "sendBroadcast"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #sendBroadcast(Intent, String)}, but also allows specification
of an assocated app op as per {@link android.app.AppOpsManager}.
@hide"
      end

      operation 698370 "sendOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Broadcast the given intent to all interested BroadcastReceivers, delivering
them one at a time to allow more preferred receivers to consume the
broadcast before it is delivered to less preferred receivers.  This
call is asynchronous; it returns immediately, and you will continue
executing while the receivers are run.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermission (optional) String naming a permissions that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.

@see android.content.BroadcastReceiver
@see #registerReceiver
@see #sendBroadcast(Intent)
@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)"
      end

      operation 698498 "sendOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendBroadcast(Intent)} that allows you to
receive data back from the broadcast.  This is accomplished by
supplying your own BroadcastReceiver when calling, which will be
treated as a final receiver at the end of the broadcast -- its
{@link BroadcastReceiver#onReceive} method will be called with
the result values collected from the other receivers.  The broadcast will
be serialized in the same way as calling
{@link #sendOrderedBroadcast(Intent, String)}.

<p>Like {@link #sendBroadcast(Intent)}, this method is
asynchronous; it will return before
resultReceiver.onReceive() is called.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param receiverPermission String naming a permissions that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.

@see #sendBroadcast(Intent)
@see #sendBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String)
@see #sendStickyBroadcast(Intent)
@see #sendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, int, String, Bundle)
@see android.content.BroadcastReceiver
@see #registerReceiver
@see android.app.Activity#RESULT_OK"
      end

      operation 698626 "sendOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #sendOrderedBroadcast(Intent, String, BroadcastReceiver, android.os.Handler,
int, String, android.os.Bundle)}, but also allows specification
of an assocated app op as per {@link android.app.AppOpsManager}.
@hide"
      end

      operation 698754 "sendBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendBroadcast(Intent)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.
@param intent The intent to broadcast
@param user UserHandle to send the intent to.
@see #sendBroadcast(Intent)"
      end

      operation 698882 "sendBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendBroadcast(Intent, String)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param user UserHandle to send the intent to.
@param receiverPermission (optional) String naming a permission that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.

@see #sendBroadcast(Intent, String)"
      end

      operation 699010 "sendOrderedBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of
{@link #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)}
that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param user UserHandle to send the intent to.
@param receiverPermission String naming a permissions that
              a receiver must hold in order to receive your broadcast.
              If null, no permission is required.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.

@see #sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle)"
      end

      operation 699138 "sendStickyBroadcast"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform a {@link #sendBroadcast(Intent)} that is \"sticky,\" meaning the
Intent you are sending stays around after the broadcast is complete,
so that others can quickly retrieve that data through the return
value of {@link #registerReceiver(BroadcastReceiver, IntentFilter)}.  In
all other ways, this behaves the same as
{@link #sendBroadcast(Intent)}.

<p>You must hold the {@link android.Manifest.permission#BROADCAST_STICKY}
permission in order to use this API.  If you do not hold that
permission, {@link SecurityException} will be thrown.

@param intent The Intent to broadcast; all receivers matching this
Intent will receive the broadcast, and the Intent will be held to
be re-broadcast to future receivers.

@see #sendBroadcast(Intent)
@see #sendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, int, String, Bundle)"
      end

      operation 699266 "sendStickyOrderedBroadcast"
	abstract public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendStickyBroadcast} that allows you to
receive data back from the broadcast.  This is accomplished by
supplying your own BroadcastReceiver when calling, which will be
treated as a final receiver at the end of the broadcast -- its
{@link BroadcastReceiver#onReceive} method will be called with
the result values collected from the other receivers.  The broadcast will
be serialized in the same way as calling
{@link #sendOrderedBroadcast(Intent, String)}.

<p>Like {@link #sendBroadcast(Intent)}, this method is
asynchronous; it will return before
resultReceiver.onReceive() is called.  Note that the sticky data
stored is only the data you initially supply to the broadcast, not
the result of any changes made by the receivers.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.

@see #sendBroadcast(Intent)
@see #sendBroadcast(Intent, String)
@see #sendOrderedBroadcast(Intent, String)
@see #sendStickyBroadcast(Intent)
@see android.content.BroadcastReceiver
@see #registerReceiver
@see android.app.Activity#RESULT_OK"
      end

      operation 699394 "removeStickyBroadcast"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove the data previously sent with {@link #sendStickyBroadcast},
so that it is as if the sticky broadcast had never happened.

<p>You must hold the {@link android.Manifest.permission#BROADCAST_STICKY}
permission in order to use this API.  If you do not hold that
permission, {@link SecurityException} will be thrown.

@param intent The Intent that was previously broadcast.

@see #sendStickyBroadcast"
      end

      operation 699522 "sendStickyBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #sendStickyBroadcast(Intent)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

@param intent The Intent to broadcast; all receivers matching this
Intent will receive the broadcast, and the Intent will be held to
be re-broadcast to future receivers.
@param user UserHandle to send the intent to.

@see #sendBroadcast(Intent)"
      end

      operation 699650 "sendStickyOrderedBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of
{@link #sendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, int, String, Bundle)}
that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

@param intent The Intent to broadcast; all receivers matching this
              Intent will receive the broadcast.
@param user UserHandle to send the intent to.
@param resultReceiver Your own BroadcastReceiver to treat as the final
                      receiver of the broadcast.
@param scheduler A custom Handler with which to schedule the
                 resultReceiver callback; if null it will be
                 scheduled in the Context's main thread.
@param initialCode An initial value for the result code.  Often
                   Activity.RESULT_OK.
@param initialData An initial value for the result data.  Often
                   null.
@param initialExtras An initial value for the result extras.  Often
                     null.

@see #sendStickyOrderedBroadcast(Intent, BroadcastReceiver, Handler, int, String, Bundle)"
      end

      operation 699778 "removeStickyBroadcastAsUser"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Version of {@link #removeStickyBroadcast(Intent)} that allows you to specify the
user the broadcast will be sent to.  This is not available to applications
that are not pre-installed on the system image.  Using it requires holding
the INTERACT_ACROSS_USERS permission.

<p>You must hold the {@link android.Manifest.permission#BROADCAST_STICKY}
permission in order to use this API.  If you do not hold that
permission, {@link SecurityException} will be thrown.

@param intent The Intent that was previously broadcast.
@param user UserHandle to remove the sticky broadcast from.

@see #sendStickyBroadcastAsUser"
      end

      operation 699906 "registerReceiver"
	abstract public return_type class_ref 195458 // Intent
	nparams 2
	  param inout name "receiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "filter" type class_ref 201986 // IntentFilter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a BroadcastReceiver to be run in the main activity thread.  The
<var>receiver</var> will be called with any broadcast Intent that
matches <var>filter</var>, in the main application thread.

<p>The system may broadcast Intents that are \"sticky\" -- these stay
around after the broadcast as finished, to be sent to any later
registrations. If your IntentFilter matches one of these sticky
Intents, that Intent will be returned by this function
<strong>and</strong> sent to your <var>receiver</var> as if it had just
been broadcast.

<p>There may be multiple sticky Intents that match <var>filter</var>,
in which case each of these will be sent to <var>receiver</var>.  In
this case, only one of these can be returned directly by the function;
which of these that is returned is arbitrarily decided by the system.

<p>If you know the Intent your are registering for is sticky, you can
supply null for your <var>receiver</var>.  In this case, no receiver is
registered -- the function simply returns the sticky Intent that
matches <var>filter</var>.  In the case of multiple matches, the same
rules as described above apply.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

<p>As of {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}, receivers
registered with this method will correctly respect the
{@link Intent#setPackage(String)} specified for an Intent being broadcast.
Prior to that, it would be ignored and delivered to all matching registered
receivers.  Be careful if using this for security.</p>

<p class=\"note\">Note: this method <em>cannot be called from a
{@link BroadcastReceiver} component;</em> that is, from a BroadcastReceiver
that is declared in an application's manifest.  It is okay, however, to call
this method from another BroadcastReceiver that has itself been registered
at run time with {@link #registerReceiver}, since the lifetime of such a
registered BroadcastReceiver is tied to the object that registered it.</p>

@param receiver The BroadcastReceiver to handle the broadcast.
@param filter Selects the Intent broadcasts to be received.

@return The first sticky intent found that matches <var>filter</var>,
        or null if there are none.

@see #registerReceiver(BroadcastReceiver, IntentFilter, String, Handler)
@see #sendBroadcast
@see #unregisterReceiver"
      end

      operation 700034 "registerReceiver"
	abstract public return_type class_ref 195458 // Intent
	nparams 4
	  param inout name "receiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "filter" type class_ref 201986 // IntentFilter
	  param in name "broadcastPermission" explicit_type "String"
	  param inout name "scheduler" type class_ref 168578 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register to receive intent broadcasts, to run in the context of
<var>scheduler</var>.  See
{@link #registerReceiver(BroadcastReceiver, IntentFilter)} for more
information.  This allows you to enforce permissions on who can
broadcast intents to your receiver, or have the receiver run in
a different thread than the main application thread.

<p>See {@link BroadcastReceiver} for more information on Intent broadcasts.

<p>As of {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}, receivers
registered with this method will correctly respect the
{@link Intent#setPackage(String)} specified for an Intent being broadcast.
Prior to that, it would be ignored and delivered to all matching registered
receivers.  Be careful if using this for security.</p>

@param receiver The BroadcastReceiver to handle the broadcast.
@param filter Selects the Intent broadcasts to be received.
@param broadcastPermission String naming a permissions that a
     broadcaster must hold in order to send an Intent to you.  If null,
     no permission is required.
@param scheduler Handler identifying the thread that will receive
     the Intent.  If null, the main thread of the process will be used.

@return The first sticky intent found that matches <var>filter</var>,
        or null if there are none.

@see #registerReceiver(BroadcastReceiver, IntentFilter)
@see #sendBroadcast
@see #unregisterReceiver"
      end

      operation 700162 "registerReceiverAsUser"
	abstract public return_type class_ref 195458 // Intent
	nparams 5
	  param inout name "receiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "user" type class_ref 173186 // UserHandle
	  param inout name "filter" type class_ref 201986 // IntentFilter
	  param in name "broadcastPermission" explicit_type "String"
	  param inout name "scheduler" type class_ref 168578 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Same as {@link #registerReceiver(BroadcastReceiver, IntentFilter, String, Handler)
but for a specific user.  This receiver will receiver broadcasts that
are sent to the requested user.  It
requires holding the {@link android.Manifest.permission#INTERACT_ACROSS_USERS_FULL}
permission.

@param receiver The BroadcastReceiver to handle the broadcast.
@param user UserHandle to send the intent to.
@param filter Selects the Intent broadcasts to be received.
@param broadcastPermission String naming a permissions that a
     broadcaster must hold in order to send an Intent to you.  If null,
     no permission is required.
@param scheduler Handler identifying the thread that will receive
     the Intent.  If null, the main thread of the process will be used.

@return The first sticky intent found that matches <var>filter</var>,
        or null if there are none.

@see #registerReceiver(BroadcastReceiver, IntentFilter, String, Handler
@see #sendBroadcast
@see #unregisterReceiver"
      end

      operation 700290 "unregisterReceiver"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "receiver" type class_ref 195202 // BroadcastReceiver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregister a previously registered BroadcastReceiver.  <em>All</em>
filters that have been registered for this BroadcastReceiver will be
removed.

@param receiver The BroadcastReceiver to unregister.

@see #registerReceiver"
      end

      operation 700418 "startService"
	abstract public return_type class_ref 196738 // ComponentName
	nparams 1
	  param inout name "service" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request that a given application service be started.  The Intent
should contain either contain the complete class name of a specific service
implementation to start or a specific package name to target.  If the
Intent is less specified, it log a warning about this and which of the
multiple matching services it finds and uses will be undefined.  If this service
is not already running, it will be instantiated and started (creating a
process for it if needed); if it is running then it remains running.

<p>Every call to this method will result in a corresponding call to
the target service's {@link android.app.Service#onStartCommand} method,
with the <var>intent</var> given here.  This provides a convenient way
to submit jobs to a service without having to bind and call on to its
interface.

<p>Using startService() overrides the default service lifetime that is
managed by {@link #bindService}: it requires the service to remain
running until {@link #stopService} is called, regardless of whether
any clients are connected to it.  Note that calls to startService()
are not nesting: no matter how many times you call startService(),
a single call to {@link #stopService} will stop it.

<p>The system attempts to keep running services around as much as
possible.  The only time they should be stopped is if the current
foreground application is using so many resources that the service needs
to be killed.  If any errors happen in the service's process, it will
automatically be restarted.

<p>This function will throw {@link SecurityException} if you do not
have permission to start the given service.

@param service Identifies the service to be started.  The Intent must be either
     fully explicit (supplying a component name) or specify a specific package
     name it is targetted to.  Additional values
     may be included in the Intent extras to supply arguments along with
     this specific start call.

@return If the service is being started or is already running, the
{@link ComponentName} of the actual service that was started is
returned; else if the service does not exist null is returned.

@throws SecurityException &nbsp;

@see #stopService
@see #bindService"
      end

      operation 700546 "stopService"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "service" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request that a given application service be stopped.  If the service is
not running, nothing happens.  Otherwise it is stopped.  Note that calls
to startService() are not counted -- this stops the service no matter
how many times it was started.

<p>Note that if a stopped service still has {@link ServiceConnection}
objects bound to it with the {@link #BIND_AUTO_CREATE} set, it will
not be destroyed until all of these bindings are removed.  See
the {@link android.app.Service} documentation for more details on a
service's lifecycle.

<p>This function will throw {@link SecurityException} if you do not
have permission to stop the given service.

@param service Description of the service to be stopped.  The Intent must be either
     fully explicit (supplying a component name) or specify a specific package
     name it is targetted to.

@return If there is a service matching the given Intent that is already
running, then it is stopped and {@code true} is returned; else {@code false} is returned.

@throws SecurityException &nbsp;

@see #startService"
      end

      operation 700674 "startServiceAsUser"
	abstract public return_type class_ref 196738 // ComponentName
	nparams 2
	  param inout name "service" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide like {@link #startService(Intent)} but for a specific user."
      end

      operation 700802 "stopServiceAsUser"
	abstract public explicit_return_type "boolean"
	nparams 2
	  param inout name "service" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide like {@link #stopService(Intent)} but for a specific user."
      end

      operation 700930 "bindService"
	abstract public explicit_return_type "boolean"
	nparams 3
	  param inout name "service" type class_ref 195458 // Intent
	  param inout name "conn" type class_ref 202114 // ServiceConnection
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Connect to an application service, creating it if needed.  This defines
a dependency between your application and the service.  The given
<var>conn</var> will receive the service object when it is created and be
told if it dies and restarts.  The service will be considered required
by the system only for as long as the calling context exists.  For
example, if this Context is an Activity that is stopped, the service will
not be required to continue running until the Activity is resumed.

<p>This function will throw {@link SecurityException} if you do not
have permission to bind to the given service.

<p class=\"note\">Note: this method <em>can not be called from a
{@link BroadcastReceiver} component</em>.  A pattern you can use to
communicate from a BroadcastReceiver to a Service is to call
{@link #startService} with the arguments containing the command to be
sent, with the service calling its
{@link android.app.Service#stopSelf(int)} method when done executing
that command.  See the API demo App/Service/Service Start Arguments
Controller for an illustration of this.  It is okay, however, to use
this method from a BroadcastReceiver that has been registered with
{@link #registerReceiver}, since the lifetime of this BroadcastReceiver
is tied to another object (the one that registered it).</p>

@param service Identifies the service to connect to.  The Intent may
     specify either an explicit component name, or a logical
     description (action, category, etc) to match an
     {@link IntentFilter} published by a service.
@param conn Receives information as the service is started and stopped.
     This must be a valid ServiceConnection object; it must not be null.
@param flags Operation options for the binding.  May be 0,
         {@link #BIND_AUTO_CREATE}, {@link #BIND_DEBUG_UNBIND},
         {@link #BIND_NOT_FOREGROUND}, {@link #BIND_ABOVE_CLIENT},
         {@link #BIND_ALLOW_OOM_MANAGEMENT}, or
         {@link #BIND_WAIVE_PRIORITY}.
@return If you have successfully bound to the service, {@code true} is returned;
        {@code false} is returned if the connection is not made so you will not
        receive the service object.

@throws SecurityException &nbsp;

@see #unbindService
@see #startService
@see #BIND_AUTO_CREATE
@see #BIND_DEBUG_UNBIND
@see #BIND_NOT_FOREGROUND"
      end

      operation 701058 "bindServiceAsUser"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "service" type class_ref 195458 // Intent
	  param inout name "conn" type class_ref 202114 // ServiceConnection
	  param in name "flags" explicit_type "int"
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Same as {@link #bindService(Intent, ServiceConnection, int)}, but with an explicit userHandle
argument for use by system server and other multi-user aware code.
@hide"
      end

      operation 701186 "unbindService"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "conn" type class_ref 202114 // ServiceConnection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Disconnect from an application service.  You will no longer receive
calls as the service is restarted, and the service is now allowed to
stop at any time.

@param conn The connection interface previously supplied to
            bindService().  This parameter must not be null.

@see #bindService"
      end

      operation 701314 "startInstrumentation"
	abstract public explicit_return_type "boolean"
	nparams 3
	  param inout name "className" type class_ref 196738 // ComponentName
	  param in name "profileFile" explicit_type "String"
	  param inout name "arguments" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start executing an {@link android.app.Instrumentation} class.  The given
Instrumentation component will be run by killing its target application
(if currently running), starting the target process, instantiating the
instrumentation component, and then letting it drive the application.

<p>This function is not synchronous -- it returns as soon as the
instrumentation has started and while it is running.

<p>Instrumentation is normally only allowed to run against a package
that is either unsigned or signed with a signature that the
the instrumentation package is also signed with (ensuring the target
trusts the instrumentation).

@param className Name of the Instrumentation component to be run.
@param profileFile Optional path to write profiling data as the
instrumentation runs, or null for no profiling.
@param arguments Additional optional arguments to pass to the
instrumentation, or null.

@return {@code true} if the instrumentation was successfully started,
else {@code false} if it could not be found."
      end

      operation 701442 "getSystemService"
	abstract public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the handle to a system-level service by name. The class of the
returned object varies by the requested name. Currently available names
are:

<dl>
 <dt> {@link #WINDOW_SERVICE} (\"window\")
 <dd> The top-level window manager in which you can place custom
 windows.  The returned object is a {@link android.view.WindowManager}.
 <dt> {@link #LAYOUT_INFLATER_SERVICE} (\"layout_inflater\")
 <dd> A {@link android.view.LayoutInflater} for inflating layout resources
 in this context.
 <dt> {@link #ACTIVITY_SERVICE} (\"activity\")
 <dd> A {@link android.app.ActivityManager} for interacting with the
 global activity state of the system.
 <dt> {@link #POWER_SERVICE} (\"power\")
 <dd> A {@link android.os.PowerManager} for controlling power
 management.
 <dt> {@link #ALARM_SERVICE} (\"alarm\")
 <dd> A {@link android.app.AlarmManager} for receiving intents at the
 time of your choosing.
 <dt> {@link #NOTIFICATION_SERVICE} (\"notification\")
 <dd> A {@link android.app.NotificationManager} for informing the user
  of background events.
 <dt> {@link #KEYGUARD_SERVICE} (\"keyguard\")
 <dd> A {@link android.app.KeyguardManager} for controlling keyguard.
 <dt> {@link #LOCATION_SERVICE} (\"location\")
 <dd> A {@link android.location.LocationManager} for controlling location
  (e.g., GPS) updates.
 <dt> {@link #SEARCH_SERVICE} (\"search\")
 <dd> A {@link android.app.SearchManager} for handling search.
 <dt> {@link #VIBRATOR_SERVICE} (\"vibrator\")
 <dd> A {@link android.os.Vibrator} for interacting with the vibrator
 hardware.
 <dt> {@link #CONNECTIVITY_SERVICE} (\"connection\")
 <dd> A {@link android.net.ConnectivityManager ConnectivityManager} for
 handling management of network connections.
 <dt> {@link #WIFI_SERVICE} (\"wifi\")
 <dd> A {@link android.net.wifi.WifiManager WifiManager} for management of
Wi-Fi connectivity.
<dt> {@link #INPUT_METHOD_SERVICE} (\"input_method\")
<dd> An {@link android.view.inputmethod.InputMethodManager InputMethodManager}
for management of input methods.
<dt> {@link #UI_MODE_SERVICE} (\"uimode\")
<dd> An {@link android.app.UiModeManager} for controlling UI modes.
<dt> {@link #DOWNLOAD_SERVICE} (\"download\")
<dd> A {@link android.app.DownloadManager} for requesting HTTP downloads
</dl>

<p>Note:  System services obtained via this API may be closely associated with
the Context in which they are obtained from.  In general, do not share the
service objects between various different contexts (Activities, Applications,
Services, Providers, etc.)

@param name The name of the desired service.

@return The service or null if the name does not exist.

@see #WINDOW_SERVICE
@see android.view.WindowManager
@see #LAYOUT_INFLATER_SERVICE
@see android.view.LayoutInflater
@see #ACTIVITY_SERVICE
@see android.app.ActivityManager
@see #POWER_SERVICE
@see android.os.PowerManager
@see #ALARM_SERVICE
@see android.app.AlarmManager
@see #NOTIFICATION_SERVICE
@see android.app.NotificationManager
@see #KEYGUARD_SERVICE
@see android.app.KeyguardManager
@see #LOCATION_SERVICE
@see android.location.LocationManager
@see #SEARCH_SERVICE
@see android.app.SearchManager
@see #SENSOR_SERVICE
@see android.hardware.SensorManager
@see #STORAGE_SERVICE
@see android.os.storage.StorageManager
@see #VIBRATOR_SERVICE
@see android.os.Vibrator
@see #CONNECTIVITY_SERVICE
@see android.net.ConnectivityManager
@see #WIFI_SERVICE
@see android.net.wifi.WifiManager
@see #AUDIO_SERVICE
@see android.media.AudioManager
@see #MEDIA_ROUTER_SERVICE
@see android.media.MediaRouter
@see #TELEPHONY_SERVICE
@see android.telephony.TelephonyManager
@see #INPUT_METHOD_SERVICE
@see android.view.inputmethod.InputMethodManager
@see #UI_MODE_SERVICE
@see android.app.UiModeManager
@see #DOWNLOAD_SERVICE
@see android.app.DownloadManager"
      end

      attribute 440578 "POWER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"power\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.PowerManager} for controlling power management,
including \"wake locks,\" which let you keep the device on while
you're running long tasks.
"
      end

      attribute 440706 "WINDOW_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"window\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.WindowManager} for accessing the system's window
manager.

@see #getSystemService
@see android.view.WindowManager
"
      end

      attribute 440834 "LAYOUT_INFLATER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"layout_inflater\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.LayoutInflater} for inflating layout resources in this
context.

@see #getSystemService
@see android.view.LayoutInflater
"
      end

      attribute 440962 "ACCOUNT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"account\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.accounts.AccountManager} for receiving intents at a
time of your choosing.

@see #getSystemService
@see android.accounts.AccountManager
"
      end

      attribute 441090 "ACTIVITY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"activity\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.ActivityManager} for interacting with the global
system state.

@see #getSystemService
@see android.app.ActivityManager
"
      end

      attribute 441218 "ALARM_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"alarm\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.AlarmManager} for receiving intents at a
time of your choosing.

@see #getSystemService
@see android.app.AlarmManager
"
      end

      attribute 441346 "NOTIFICATION_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"notification\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.NotificationManager} for informing the user of
background events.

@see #getSystemService
@see android.app.NotificationManager
"
      end

      attribute 441474 "PROFILE_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"profile\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.ProfileManager} for setting
notification profiles.

@see #getSystemService
@see android.app.ProfileManager

@hide
"
      end

      attribute 441602 "ACCESSIBILITY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"accessibility\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.accessibility.AccessibilityManager} for giving the user
feedback for UI events through the registered event listeners.

@see #getSystemService
@see android.view.accessibility.AccessibilityManager
"
      end

      attribute 441730 "CAPTIONING_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"captioning\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.accessibility.CaptioningManager} for obtaining
captioning properties and listening for changes in captioning
preferences.

@see #getSystemService
@see android.view.accessibility.CaptioningManager
"
      end

      attribute 441858 "KEYGUARD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"keyguard\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.NotificationManager} for controlling keyguard.

@see #getSystemService
@see android.app.KeyguardManager
"
      end

      attribute 441986 "LOCATION_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"location\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.location.LocationManager} for controlling location
updates.

@see #getSystemService
@see android.location.LocationManager
"
      end

      attribute 442114 "COUNTRY_DETECTOR"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"country_detector\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.location.CountryDetector} for detecting the country that
the user is in.

@hide
"
      end

      attribute 442242 "SEARCH_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"search\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.app.SearchManager} for handling searches.

@see #getSystemService
@see android.app.SearchManager
"
      end

      attribute 442370 "SENSOR_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"sensor\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.hardware.SensorManager} for accessing sensors.

@see #getSystemService
@see android.hardware.SensorManager
"
      end

      attribute 442498 "STORAGE_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"storage\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.os.storage.StorageManager} for accessing system storage
functions.

@see #getSystemService
@see android.os.storage.StorageManager
"
      end

      attribute 442626 "WALLPAPER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"wallpaper\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
com.android.server.WallpaperService for accessing wallpapers.

@see #getSystemService
"
      end

      attribute 442754 "VIBRATOR_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"vibrator\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.os.Vibrator} for interacting with the vibration hardware.

@see #getSystemService
@see android.os.Vibrator
"
      end

      attribute 442882 "STATUS_BAR_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"statusbar\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.app.StatusBarManager} for interacting with the status bar.

@see #getSystemService
@see android.app.StatusBarManager
@hide
"
      end

      attribute 443010 "CONNECTIVITY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"connectivity\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.ConnectivityManager} for handling management of
network connections.

@see #getSystemService
@see android.net.ConnectivityManager
"
      end

      attribute 443138 "UPDATE_LOCK_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"updatelock\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.os.IUpdateLock} for managing runtime sequences that
must not be interrupted by headless OTA application or similar.

@hide
@see #getSystemService
@see android.os.UpdateLock
"
      end

      attribute 443266 "NETWORKMANAGEMENT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"network_management\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Constant for the internal network management service, not really a Context service.
@hide
"
      end

      attribute 443394 "NETWORK_STATS_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"netstats\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 443522 "NETWORK_POLICY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"netpolicy\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} "
      end

      attribute 443650 "WIFI_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"wifi\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.wifi.WifiManager} for handling management of
Wi-Fi access.

@see #getSystemService
@see android.net.wifi.WifiManager
"
      end

      attribute 443778 "WIFI_P2P_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"wifip2p\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.wifi.p2p.WifiP2pManager} for handling management of
Wi-Fi peer-to-peer connections.

@see #getSystemService
@see android.net.wifi.p2p.WifiP2pManager
"
      end

      attribute 443906 "ETH_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"ethernet\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link 
android.net.ethernet.EthernetManager} for handling management of 
Ethernet access. 

@see #getSystemService 
@see android.net.ethernet.EthernetManager 

 add by chenqigan"
      end

      attribute 444034 "NSD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"servicediscovery\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.net.nsd.NsdManager} for handling management of network service
discovery

@see #getSystemService
@see android.net.nsd.NsdManager
"
      end

      attribute 444162 "AUDIO_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"audio\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.media.AudioManager} for handling management of volume,
ringer modes and audio routing.

@see #getSystemService
@see android.media.AudioManager
"
      end

      attribute 444290 "MEDIA_ROUTER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"media_router\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.media.MediaRouter} for controlling and managing
routing of media.

@see #getSystemService
@see android.media.MediaRouter
"
      end

      attribute 444418 "TELEPHONY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"phone\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.telephony.TelephonyManager} for handling management the
telephony features of the device.

@see #getSystemService
@see android.telephony.TelephonyManager
"
      end

      attribute 444546 "MSIM_TELEPHONY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"phone_msim\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{android.telephony.MSimTelephonyManager} for handling the management
of the telephony features of the multi sim device.

@see #getSystemService
@see android.telephony.MSimTelephonyManager
@hide
"
      end

      attribute 444674 "CLIPBOARD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"clipboard\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.text.ClipboardManager} for accessing and modifying
the contents of the global clipboard.

@see #getSystemService
@see android.text.ClipboardManager
"
      end

      attribute 444802 "INPUT_METHOD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"input_method\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.inputmethod.InputMethodManager} for accessing input
methods.

@see #getSystemService
"
      end

      attribute 444930 "TEXT_SERVICES_MANAGER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"textservices\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.view.textservice.TextServicesManager} for accessing
text services.

@see #getSystemService
"
      end

      attribute 445058 "APPWIDGET_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"appwidget\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.appwidget.AppWidgetManager} for accessing AppWidgets.

@hide
@see #getSystemService
"
      end

      attribute 445186 "BACKUP_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"backup\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve an
{@link android.app.backup.IBackupManager IBackupManager} for communicating
with the backup mechanism.
@hide

@see #getSystemService
"
      end

      attribute 445314 "DROPBOX_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"dropbox\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.DropBoxManager} instance for recording
diagnostic logs.
@see #getSystemService
"
      end

      attribute 445442 "DEVICE_POLICY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"device_policy\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.admin.DevicePolicyManager} for working with global
device policy management.

@see #getSystemService
"
      end

      attribute 445570 "UI_MODE_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"uimode\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.UiModeManager} for controlling UI modes.

@see #getSystemService
"
      end

      attribute 445698 "DOWNLOAD_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"download\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.DownloadManager} for requesting HTTP downloads.

@see #getSystemService
"
      end

      attribute 445826 "NFC_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"nfc\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.nfc.NfcManager} for using NFC.

@see #getSystemService
"
      end

      attribute 445954 "BLUETOOTH_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"bluetooth\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.bluetooth.BluetoothAdapter} for using Bluetooth.

@see #getSystemService
"
      end

      attribute 446082 "SIP_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"sip\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.net.sip.SipManager} for accessing the SIP related service.

@see #getSystemService

 @hide "
      end

      attribute 446210 "USB_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"usb\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.hardware.usb.UsbManager} for access to USB devices (as a USB host)
and for controlling this device's behavior as a USB device.

@see #getSystemService
@see android.hardware.usb.UsbManager
"
      end

      attribute 446338 "SERIAL_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"serial\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a {@link
android.hardware.SerialManager} for access to serial ports.

@see #getSystemService
@see android.hardware.SerialManager

"
      end

      attribute 446466 "INPUT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"input\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.input.InputManager} for interacting with input devices.

@see #getSystemService
@see android.hardware.input.InputManager
"
      end

      attribute 446594 "DISPLAY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"display\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.display.DisplayManager} for interacting with display devices.

@see #getSystemService
@see android.hardware.display.DisplayManager
"
      end

      attribute 446722 "USER_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"user\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.os.UserManager} for managing users on devices that support multiple users.

@see #getSystemService
@see android.os.UserManager
"
      end

      attribute 446850 "APP_OPS_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"appops\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.app.AppOpsManager} for tracking application operations
on the device.

@see #getSystemService
@see android.app.AppOpsManager
"
      end

      attribute 446978 "CAMERA_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"camera\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.camera2.CameraManager} for interacting with
camera devices.

@see #getSystemService
@see android.hardware.camera2.CameraManager
@hide
"
      end

      attribute 447106 "PRINT_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"print\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@link android.print.PrintManager} for printing and managing
printers and print tasks.

@see #getSystemService
@see android.print.PrintManager
"
      end

      attribute 447234 "CONSUMER_IR_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"consumer_ir\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #getSystemService} to retrieve a
{@link android.hardware.ConsumerIrManager} for transmitting infrared
signals from the device.

@see #getSystemService
@see android.hardware.ConsumerIrManager
"
      end

      attribute 447362 "EPC300_CMD_COMPATIBILITY_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"EPC300CmdCompatibilityService\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "add by chenqigan "
      end

      attribute 447490 "USR_LED_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"usrLedService\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 447618 "STM8_GPIO_SERVICE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"Stm8GpioService\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 701570 "checkPermission"
	abstract public explicit_return_type "int"
	nparams 3
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "add by chenqigan END 

Determine whether the given permission is allowed for a particular
process and user ID running in the system.

@param permission The name of the permission being checked.
@param pid The process ID being checked against.  Must be > 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.

@return {@link PackageManager#PERMISSION_GRANTED} if the given
pid/uid is allowed that permission, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see PackageManager#checkPermission(String, String)
@see #checkCallingPermission"
      end

      operation 701698 "checkCallingPermission"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether the calling process of an IPC you are handling has been
granted a particular permission.  This is basically the same as calling
{@link #checkPermission(String, int, int)} with the pid and uid returned
by {@link android.os.Binder#getCallingPid} and
{@link android.os.Binder#getCallingUid}.  One important difference
is that if you are not currently processing an IPC, this function
will always fail.  This is done to protect against accidentally
leaking permissions; you can use {@link #checkCallingOrSelfPermission}
to avoid this protection.

@param permission The name of the permission being checked.

@return {@link PackageManager#PERMISSION_GRANTED} if the calling
pid/uid is allowed that permission, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see PackageManager#checkPermission(String, String)
@see #checkPermission
@see #checkCallingOrSelfPermission"
      end

      operation 701826 "checkCallingOrSelfPermission"
	abstract public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether the calling process of an IPC <em>or you</em> have been
granted a particular permission.  This is the same as
{@link #checkCallingPermission}, except it grants your own permissions
if you are not currently processing an IPC.  Use with care!

@param permission The name of the permission being checked.

@return {@link PackageManager#PERMISSION_GRANTED} if the calling
pid/uid is allowed that permission, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see PackageManager#checkPermission(String, String)
@see #checkPermission
@see #checkCallingPermission"
      end

      operation 701954 "enforcePermission"
	abstract public explicit_return_type "void"
	nparams 4
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the given permission is not allowed for a particular process
and user ID running in the system, throw a {@link SecurityException}.

@param permission The name of the permission being checked.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param message A message to include in the exception if it is thrown.

@see #checkPermission(String, int, int)"
      end

      operation 702082 "enforceCallingPermission"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "permission" explicit_type "String"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the calling process of an IPC you are handling has not been
granted a particular permission, throw a {@link
SecurityException}.  This is basically the same as calling
{@link #enforcePermission(String, int, int, String)} with the
pid and uid returned by {@link android.os.Binder#getCallingPid}
and {@link android.os.Binder#getCallingUid}.  One important
difference is that if you are not currently processing an IPC,
this function will always throw the SecurityException.  This is
done to protect against accidentally leaking permissions; you
can use {@link #enforceCallingOrSelfPermission} to avoid this
protection.

@param permission The name of the permission being checked.
@param message A message to include in the exception if it is thrown.

@see #checkCallingPermission(String)"
      end

      operation 702210 "enforceCallingOrSelfPermission"
	abstract public explicit_return_type "void"
	nparams 2
	  param in name "permission" explicit_type "String"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If neither you nor the calling process of an IPC you are
handling has been granted a particular permission, throw a
{@link SecurityException}.  This is the same as {@link
#enforceCallingPermission}, except it grants your own
permissions if you are not currently processing an IPC.  Use
with care!

@param permission The name of the permission being checked.
@param message A message to include in the exception if it is thrown.

@see #checkCallingOrSelfPermission(String)"
      end

      operation 702338 "grantUriPermission"
	abstract public explicit_return_type "void"
	nparams 3
	  param in name "toPackage" explicit_type "String"
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Grant permission to access a specific Uri to another package, regardless
of whether that package has general permission to access the Uri's
content provider.  This can be used to grant specific, temporary
permissions, typically in response to user interaction (such as the
user opening an attachment that you would like someone else to
display).

<p>Normally you should use {@link Intent#FLAG_GRANT_READ_URI_PERMISSION
Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION
Intent.FLAG_GRANT_WRITE_URI_PERMISSION} with the Intent being used to
start an activity instead of this function directly.  If you use this
function directly, you should be sure to call
{@link #revokeUriPermission} when the target should no longer be allowed
to access it.

<p>To succeed, the content provider owning the Uri must have set the
{@link android.R.styleable#AndroidManifestProvider_grantUriPermissions
grantUriPermissions} attribute in its manifest or included the
{@link android.R.styleable#AndroidManifestGrantUriPermission
&lt;grant-uri-permissions&gt;} tag.

@param toPackage The package you would like to allow to access the Uri.
@param uri The Uri you would like to grant access to.
@param modeFlags The desired access modes.  Any combination of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION
Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION
Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@see #revokeUriPermission"
      end

      operation 702466 "revokeUriPermission"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove all permissions to access a particular content provider Uri
that were previously added with {@link #grantUriPermission}.  The given
Uri will match all previously granted Uris that are the same or a
sub-path of the given Uri.  That is, revoking \"content://foo/target\" will
revoke both \"content://foo/target\" and \"content://foo/target/sub\", but not
\"content://foo\".

@param uri The Uri you would like to revoke access to.
@param modeFlags The desired access modes.  Any combination of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION
Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION
Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@see #grantUriPermission"
      end

      operation 702594 "checkUriPermission"
	abstract public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether a particular process and user ID has been granted
permission to access a specific URI.  This only checks for permissions
that have been explicitly granted -- if the given process/uid has
more general access to the URI's content provider then this check will
always fail.

@param uri The uri that is being checked.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@return {@link PackageManager#PERMISSION_GRANTED} if the given
pid/uid is allowed to access that uri, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see #checkCallingUriPermission"
      end

      operation 702722 "checkCallingUriPermission"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether the calling process and user ID has been
granted permission to access a specific URI.  This is basically
the same as calling {@link #checkUriPermission(Uri, int, int,
int)} with the pid and uid returned by {@link
android.os.Binder#getCallingPid} and {@link
android.os.Binder#getCallingUid}.  One important difference is
that if you are not currently processing an IPC, this function
will always fail.

@param uri The uri that is being checked.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@return {@link PackageManager#PERMISSION_GRANTED} if the caller
is allowed to access that uri, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see #checkUriPermission(Uri, int, int, int)"
      end

      operation 702850 "checkCallingOrSelfUriPermission"
	abstract public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine whether the calling process of an IPC <em>or you</em> has been granted
permission to access a specific URI.  This is the same as
{@link #checkCallingUriPermission}, except it grants your own permissions
if you are not currently processing an IPC.  Use with care!

@param uri The uri that is being checked.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@return {@link PackageManager#PERMISSION_GRANTED} if the caller
is allowed to access that uri, or
{@link PackageManager#PERMISSION_DENIED} if it is not.

@see #checkCallingUriPermission"
      end

      operation 702978 "checkUriPermission"
	abstract public explicit_return_type "int"
	nparams 6
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check both a Uri and normal permission.  This allows you to perform
both {@link #checkPermission} and {@link #checkUriPermission} in one
call.

@param uri The Uri whose permission is to be checked, or null to not
do this check.
@param readPermission The permission that provides overall read access,
or null to not do this check.
@param writePermission The permission that provides overall write
acess, or null to not do this check.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.

@return {@link PackageManager#PERMISSION_GRANTED} if the caller
is allowed to access that uri or holds one of the given permissions, or
{@link PackageManager#PERMISSION_DENIED} if it is not."
      end

      operation 703106 "enforceUriPermission"
	abstract public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If a particular process and user ID has not been granted
permission to access a specific URI, throw {@link
SecurityException}.  This only checks for permissions that have
been explicitly granted -- if the given process/uid has more
general access to the URI's content provider then this check
will always fail.

@param uri The uri that is being checked.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.
@param message A message to include in the exception if it is thrown.

@see #checkUriPermission(Uri, int, int, int)"
      end

      operation 703234 "enforceCallingUriPermission"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the calling process and user ID has not been granted
permission to access a specific URI, throw {@link
SecurityException}.  This is basically the same as calling
{@link #enforceUriPermission(Uri, int, int, int, String)} with
the pid and uid returned by {@link
android.os.Binder#getCallingPid} and {@link
android.os.Binder#getCallingUid}.  One important difference is
that if you are not currently processing an IPC, this function
will always throw a SecurityException.

@param uri The uri that is being checked.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.
@param message A message to include in the exception if it is thrown.

@see #checkCallingUriPermission(Uri, int)"
      end

      operation 703362 "enforceCallingOrSelfUriPermission"
	abstract public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If the calling process of an IPC <em>or you</em> has not been
granted permission to access a specific URI, throw {@link
SecurityException}.  This is the same as {@link
#enforceCallingUriPermission}, except it grants your own
permissions if you are not currently processing an IPC.  Use
with care!

@param uri The uri that is being checked.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.
@param message A message to include in the exception if it is thrown.

@see #checkCallingOrSelfUriPermission(Uri, int)"
      end

      operation 703490 "enforceUriPermission"
	abstract public explicit_return_type "void"
	nparams 7
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Enforce both a Uri and normal permission.  This allows you to perform
both {@link #enforcePermission} and {@link #enforceUriPermission} in one
call.

@param uri The Uri whose permission is to be checked, or null to not
do this check.
@param readPermission The permission that provides overall read access,
or null to not do this check.
@param writePermission The permission that provides overall write
acess, or null to not do this check.
@param pid The process ID being checked against.  Must be &gt; 0.
@param uid The user ID being checked against.  A uid of 0 is the root
user, which will pass every permission check.
@param modeFlags The type of access to grant.  May be one or both of
{@link Intent#FLAG_GRANT_READ_URI_PERMISSION Intent.FLAG_GRANT_READ_URI_PERMISSION} or
{@link Intent#FLAG_GRANT_WRITE_URI_PERMISSION Intent.FLAG_GRANT_WRITE_URI_PERMISSION}.
@param message A message to include in the exception if it is thrown.

@see #checkUriPermission(Uri, String, String, int, int, int)"
      end

      attribute 447746 "CONTEXT_INCLUDE_CODE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for use with {@link #createPackageContext}: include the application
code with the context.  This means loading code into the caller's
process, so that {@link #getClassLoader()} can be used to instantiate
the application's classes.  Setting this flags imposes security
restrictions on what application context you can access; if the
requested application can not be safely loaded into your process,
java.lang.SecurityException will be thrown.  If this flag is not set,
there will be no restrictions on the packages that can be loaded,
but {@link #getClassLoader} will always return the default system
class loader.
"
      end

      attribute 447874 "CONTEXT_IGNORE_SECURITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for use with {@link #createPackageContext}: ignore any security
restrictions on the Context being requested, allowing it to always
be loaded.  For use with {@link #CONTEXT_INCLUDE_CODE} to allow code
to be loaded into a process even when it isn't safe to do so.  Use
with extreme care!
"
      end

      attribute 448002 "CONTEXT_RESTRICTED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Flag for use with {@link #createPackageContext}: a restricted context may
disable specific features. For instance, a View associated with a restricted
context would ignore particular XML attributes.
"
      end

      operation 703618 "createPackageContext"
	abstract public return_type class_ref 192770 // Context
	nparams 2
	  param in name "packageName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 202242 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new Context object for the given application name.  This
Context is the same as what the named application gets when it is
launched, containing the same resources and class loader.  Each call to
this method returns a new instance of a Context object; Context objects
are not shared, however they share common state (Resources, ClassLoader,
etc) so the Context instance itself is fairly lightweight.

<p>Throws {@link PackageManager.NameNotFoundException} if there is no
application with the given package name.

<p>Throws {@link java.lang.SecurityException} if the Context requested
can not be loaded into the caller's process for security reasons (see
{@link #CONTEXT_INCLUDE_CODE} for more information}.

@param packageName Name of the application's package.
@param flags Option flags, one of {@link #CONTEXT_INCLUDE_CODE}
             or {@link #CONTEXT_IGNORE_SECURITY}.

@return A {@link Context} for the application.

@throws SecurityException &nbsp;
@throws PackageManager.NameNotFoundException if there is no application with
the given package name."
      end

      operation 703746 "createPackageContextAsUser"
	abstract public return_type class_ref 192770 // Context
	nparams 3
	  param in name "packageName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	  param inout name "user" type class_ref 173186 // UserHandle
	nexceptions 1
	  exception class_ref 202242 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Similar to {@link #createPackageContext(String, int)}, but with a
different {@link UserHandle}. For example, {@link #getContentResolver()}
will open any {@link Uri} as the given user.

@hide"
      end

      operation 703874 "getUserId"
	abstract public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the userId associated with this context
@return user id

@hide"
      end

      operation 704002 "createConfigurationContext"
	abstract public return_type class_ref 192770 // Context
	nparams 1
	  param inout name "overrideConfiguration" type class_ref 196482 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new Context object for the current Context but whose resources
are adjusted to match the given Configuration.  Each call to this method
returns a new instance of a Context object; Context objects are not
shared, however common state (ClassLoader, other Resources for the
same configuration) may be so the Context itself can be fairly lightweight.

@param overrideConfiguration A {@link Configuration} specifying what
values to modify in the base Configuration of the original Context's
resources.  If the base configuration changes (such as due to an
orientation change), the resources of this context will also change except
for those that have been explicitly overridden with a value here.

@return A {@link Context} with the given configuration override."
      end

      operation 704130 "createDisplayContext"
	abstract public return_type class_ref 192770 // Context
	nparams 1
	  param inout name "display" explicit_type "Display"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a new Context object for the current Context but whose resources
are adjusted to match the metrics of the given Display.  Each call to this method
returns a new instance of a Context object; Context objects are not
shared, however common state (ClassLoader, other Resources for the
same configuration) may be so the Context itself can be fairly lightweight.

The returned display Context provides a {@link WindowManager}
(see {@link #getSystemService(String)}) that is configured to show windows
on the given display.  The WindowManager's {@link WindowManager#getDefaultDisplay}
method can be used to retrieve the Display from the returned Context.

@param display A {@link Display} object specifying the display
for whose metrics the Context's resources should be tailored and upon which
new windows should be shown.

@return A {@link Context} for the display."
      end

      operation 704258 "getDisplayAdjustments"
	abstract public explicit_return_type "DisplayAdjustments"
	nparams 1
	  param in name "displayId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the display adjustments holder for this context.  This information
is provided on a per-application or activity basis and is used to simulate lower density
display metrics for legacy applications and restricted screen sizes.

@param displayId The display id for which to get compatibility info.
@return The compatibility info holder, or null if not required by the application.
@hide"
      end

      operation 704386 "isRestricted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates whether this Context is restricted.

@return {@code true} if this Context is restricted, {@code false} otherwise.

@see #CONTEXT_RESTRICTED"
      end
    end

    class 193282 "SyncContext"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 500098 "mSyncContext"
	private explicit_type "ISyncContext"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 500226 "mLastHeartbeatSendTime"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 500354 "HEARTBEAT_SEND_INTERVAL_IN_MS"
	class_attribute const_attribute private explicit_type "long"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 773506 "SyncContext"
	public explicit_return_type ""
	nparams 1
	  param inout name "syncContextInterface" explicit_type "ISyncContext"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 773634 "setStatusText"
	public explicit_return_type "void"
	nparams 1
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call to update the status text for this sync. This internally invokes
{@link #updateHeartbeat}, so it also takes the place of a call to that.

@param message the current status message for this sync

@hide"
      end

      operation 773762 "updateHeartbeat"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call to indicate that the SyncAdapter is making progress. E.g., if this SyncAdapter
downloads or sends records to/from the server, this may be called after each record
is downloaded or uploaded."
      end

      operation 773890 "onFinished"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 193538 // SyncResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 774018 "getSyncContextBinder"
	public return_type class_ref 172674 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 193410 "ContentProviderClient"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The public interface object used to interact with a {@link ContentProvider}. This is obtained by
calling {@link ContentResolver#acquireContentProviderClient}. This object must be released
using {@link #release} in order to indicate to the system that the {@link ContentProvider} is
no longer needed and can be killed to free up resources.

<p>Note that you should generally create a new ContentProviderClient instance
for each thread that will be performing operations.  Unlike
{@link ContentResolver}, the methods here such as {@link #query} and
{@link #openFile} are not thread safe -- you must not call
{@link #release()} on the ContentProviderClient those calls are made from
until you are finished with the data they have returned."
      attribute 428418 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ContentProviderClient\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 207618 // sAnrHandler (<unidirectional association>)
	relation 207618 --->
	  a role_name "sAnrHandler" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    java_annotation "@GuardedBy(\"ContentProviderClient.class\")
"
	    classrelation_ref 207618 // sAnrHandler (<unidirectional association>)
	  b parent class_ref 168578 // Handler
      end

      classrelation 207746 // mContentResolver (<unidirectional association>)
	relation 207746 --->
	  a role_name "mContentResolver" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207746 // mContentResolver (<unidirectional association>)
	  b parent class_ref 193922 // ContentResolver
      end

      classrelation 207874 // mContentProvider (<unidirectional association>)
	relation 207874 --->
	  a role_name "mContentProvider" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207874 // mContentProvider (<unidirectional association>)
	  b parent class_ref 197506 // IContentProvider
      end

      attribute 428546 "mPackageName"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 428674 "mStable"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 428802 "mGuard"
	const_attribute private explicit_type "CloseGuard"
	init_value " CloseGuard.get()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 428930 "mAnrTimeout"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 198530 "NotRespondingRunnable"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 208130 // <realization>
	  relation 208130 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 208130 // <realization>
	    b parent class_ref 167426 // Runnable
	end

	operation 668418 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      classrelation 208002 // mAnrRunnable (<unidirectional association>)
	relation 208002 --->
	  a role_name "mAnrRunnable" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 208002 // mAnrRunnable (<unidirectional association>)
	  b parent class_ref 198530 // NotRespondingRunnable
      end

      attribute 429058 "mReleased"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 665090 "ContentProviderClient"
	package explicit_return_type ""
	nparams 3
	  param inout name "contentResolver" type class_ref 193922 // ContentResolver
	  param inout name "contentProvider" type class_ref 197506 // IContentProvider
	  param inout name "stable" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 665218 "setDetectNotResponding"
	public explicit_return_type "void"
	nparams 1
	  param in name "timeoutMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 665346 "beforeRemote"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 665474 "afterRemote"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 665602 "query"
	public explicit_return_type "Cursor"
	nparams 5
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#query ContentProvider.query} "
      end

      operation 665730 "query"
	public explicit_return_type "Cursor"
	nparams 6
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 174338 // CancellationSignal
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#query ContentProvider.query} "
      end

      operation 665858 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#getType ContentProvider.getType} "
      end

      operation 665986 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mimeTypeFilter" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#getStreamTypes ContentProvider.getStreamTypes} "
      end

      operation 666114 "canonicalize"
	public return_type class_ref 145410 // Uri
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#canonicalize} "
      end

      operation 666242 "uncanonicalize"
	public return_type class_ref 145410 // Uri
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#uncanonicalize} "
      end

      operation 666370 "insert"
	public return_type class_ref 145410 // Uri
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "initialValues" type class_ref 194178 // ContentValues
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#insert ContentProvider.insert} "
      end

      operation 666498 "bulkInsert"
	public explicit_return_type "int"
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "initialValues" type class_ref 194178 // ContentValues
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#bulkInsert ContentProvider.bulkInsert} "
      end

      operation 666626 "delete"
	public explicit_return_type "int"
	nparams 3
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#delete ContentProvider.delete} "
      end

      operation 666754 "update"
	public explicit_return_type "int"
	nparams 4
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#update ContentProvider.update} "
      end

      operation 666882 "openFile"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See {@link ContentProvider#openFile ContentProvider.openFile}.  Note that
this <em>does not</em>
take care of non-content: URIs such as file:.  It is strongly recommended
you use the {@link ContentResolver#openFileDescriptor
ContentResolver.openFileDescriptor} API instead."
      end

      operation 667010 "openFile"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 3
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 174338 // CancellationSignal
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See {@link ContentProvider#openFile ContentProvider.openFile}.  Note that
this <em>does not</em>
take care of non-content: URIs such as file:.  It is strongly recommended
you use the {@link ContentResolver#openFileDescriptor
ContentResolver.openFileDescriptor} API instead."
      end

      operation 667138 "openAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See {@link ContentProvider#openAssetFile ContentProvider.openAssetFile}.
Note that this <em>does not</em>
take care of non-content: URIs such as file:.  It is strongly recommended
you use the {@link ContentResolver#openAssetFileDescriptor
ContentResolver.openAssetFileDescriptor} API instead."
      end

      operation 667266 "openAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 3
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 174338 // CancellationSignal
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "See {@link ContentProvider#openAssetFile ContentProvider.openAssetFile}.
Note that this <em>does not</em>
take care of non-content: URIs such as file:.  It is strongly recommended
you use the {@link ContentResolver#openAssetFileDescriptor
ContentResolver.openAssetFileDescriptor} API instead."
      end

      operation 667394 "openTypedAssetFileDescriptor"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 174082 // Bundle
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#openTypedAssetFile ContentProvider.openTypedAssetFile} "
      end

      operation 667522 "openTypedAssetFileDescriptor"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 174082 // Bundle
	  param inout name "signal" type class_ref 174338 // CancellationSignal
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#openTypedAssetFile ContentProvider.openTypedAssetFile} "
      end

      operation 667650 "applyBatch"
	public return_type class_ref 197890 // ContentProviderResult
	nparams 1
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  exception class_ref 198018 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#applyBatch ContentProvider.applyBatch} "
      end

      operation 667778 "call"
	public return_type class_ref 174082 // Bundle
	nparams 3
	  param in name "method" explicit_type "String"
	  param in name "arg" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " See {@link ContentProvider#call(String, String, Bundle)} "
      end

      operation 667906 "release"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call this to indicate to the system that the associated {@link ContentProvider} is no
longer needed by this {@link ContentProviderClient}.
@return true if this was release, false if it was already released"
      end

      operation 668034 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 668162 "getLocalContentProvider"
	public return_type class_ref 197122 // ContentProvider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get a reference to the {@link ContentProvider} that is associated with this
client. If the {@link ContentProvider} is running in a different process then
null will be returned. This can be used if you know you are running in the same
process as a provider, and want to get direct access to its implementation details.

@return If the associated {@link ContentProvider} is local, returns it.
Otherwise returns null."
      end

      operation 668290 "releaseQuietly"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "client" type class_ref 193410 // ContentProviderClient
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end
    end

    class 193538 "SyncResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to communicate the results of a sync operation to the SyncManager.
Based on the values here the SyncManager will determine the disposition of the
sync and whether or not a new sync operation needs to be scheduled in the future.
"
      classrelation 221442 // <realization>
	relation 221442 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 221442 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 505090 "syncAlreadyInProgress"
	const_attribute public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to indicate that the SyncAdapter is already performing a sync operation, though
not necessarily for the requested account and authority and that it wasn't able to
process this request. The SyncManager will reschedule the request to run later.
"
      end

      attribute 505218 "tooManyDeletions"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to indicate that the SyncAdapter determined that it would need to issue
too many delete operations to the server in order to satisfy the request
(as defined by the SyncAdapter). The SyncManager will record
that the sync request failed and will cause a System Notification to be created
asking the user what they want to do about this. It will give the user a chance to
choose between (1) go ahead even with those deletes, (2) revert the deletes,
or (3) take no action. If the user decides (1) or (2) the SyncManager will issue another
sync request with either {@link ContentResolver#SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS}
or {@link ContentResolver#SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS} set in the extras.
It is then up to the SyncAdapter to decide how to honor that request.
"
      end

      attribute 505346 "tooManyRetries"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to indicate that the SyncAdapter experienced a hard error due to trying the same
operation too many times (as defined by the SyncAdapter). The SyncManager will record
that the sync request failed and it will not reschedule the request.
"
      end

      attribute 505474 "databaseError"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to indicate that the SyncAdapter experienced a hard error due to an error it
received from interacting with the storage layer. The SyncManager will record that
the sync request failed and it will not reschedule the request.
"
      end

      attribute 505602 "fullSyncRequested"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set the SyncManager will request an immediate sync with the same Account and authority
(but empty extras Bundle) as was used in the sync request.
"
      end

      attribute 505730 "partialSyncUnavailable"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This field is ignored by the SyncManager.
"
      end

      attribute 505858 "moreRecordsToGet"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This field is ignored by the SyncManager.
"
      end

      attribute 505986 "delayUntil"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to indicate to the SyncManager that future sync requests that match the request's
Account and authority should be delayed at least this many seconds.
"
      end

      classrelation 221570 // stats (<unidirectional association>)
	relation 221570 --->
	  a role_name "stats" const_relation public
	    comment "
Used to hold extras statistics about the sync operation. Some of these indicate that
the sync request resulted in a hard or soft error, others are for purely informational
purposes.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221570 // stats (<unidirectional association>)
	  b parent class_ref 208002 // SyncStats
      end

      classrelation 221698 // ALREADY_IN_PROGRESS (<unidirectional association>)
	relation 221698 --->
	  a role_name "ALREADY_IN_PROGRESS" class_relation const_relation public
	    comment "
This instance of a SyncResult is returned by the SyncAdapter in response to a
sync request when a sync is already underway. The SyncManager will reschedule the
sync request to try again later.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 221698 // ALREADY_IN_PROGRESS (<unidirectional association>)
	  b parent class_ref 193538 // SyncResult
      end

      extra_member 135682 "initialization"
	
	cpp "" ""
	java "  static {
        ALREADY_IN_PROGRESS = new SyncResult(true);
    }"
	php ""
	python ""
	idl ""
      end

      operation 778370 "SyncResult"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a \"clean\" SyncResult. If this is returned without any changes then the
SyncManager will consider the sync to have completed successfully. The various fields
can be set by the SyncAdapter in order to give the SyncManager more information as to
the disposition of the sync.
<p>
The errors are classified into two broad categories: hard errors and soft errors.
Soft errors are retried with exponential backoff. Hard errors are not retried (except
when the hard error is for a {@link ContentResolver#SYNC_EXTRAS_UPLOAD} request,
in which the request is retryed without the {@link ContentResolver#SYNC_EXTRAS_UPLOAD}
extra set). The SyncManager checks the type of error by calling
{@link SyncResult#hasHardError()} and  {@link SyncResult#hasSoftError()}. If both are
true then the SyncManager treats it as a hard error, not a soft error."
      end

      operation 778498 "SyncResult"
	private explicit_return_type ""
	nparams 1
	  param inout name "syncAlreadyInProgress" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Internal helper for creating a clean SyncResult or one that indicated that
a sync is already in progress.
@param syncAlreadyInProgress if true then set the {@link #syncAlreadyInProgress} flag"
      end

      operation 778626 "SyncResult"
	private explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 778754 "hasHardError"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for determining if the SyncResult indicates that a hard error
occurred. See {@link #SyncResult()} for an explanation of what the SyncManager does
when it sees a hard error.
<p>
A hard error is indicated when any of the following is true:
<ul>
<li> {@link SyncStats#numParseExceptions} > 0
<li> {@link SyncStats#numConflictDetectedExceptions} > 0
<li> {@link SyncStats#numAuthExceptions} > 0
<li> {@link #tooManyDeletions}
<li> {@link #tooManyRetries}
<li> {@link #databaseError}
@return true if a hard error is indicated"
      end

      operation 778882 "hasSoftError"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for determining if the SyncResult indicates that a soft error
occurred. See {@link #SyncResult()} for an explanation of what the SyncManager does
when it sees a soft error.
<p>
A soft error is indicated when any of the following is true:
<ul>
<li> {@link SyncStats#numIoExceptions} > 0
<li> {@link #syncAlreadyInProgress}
</ul>
@return true if a soft error is indicated"
      end

      operation 779010 "hasError"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A convenience method for determining of the SyncResult indicates that an error occurred.
@return true if either a soft or hard error occurred"
      end

      operation 779138 "madeSomeProgress"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience method for determining if the Sync should be rescheduled after failing for some
reason.
@return true if the SyncManager should reschedule this sync."
      end

      operation 779266 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the SyncResult to a clean state. Throws an {@link UnsupportedOperationException}
if this is called when {@link #syncAlreadyInProgress} is set."
      end

      classrelation 221826 // CREATOR (<unidirectional association>)
	relation 221826 --->
	  a role_name "CREATOR" init_value " new Creator<SyncResult>() {
        public SyncResult createFromParcel(Parcel in) {
            return new SyncResult(in);
        }

        public SyncResult[] newArray(int size) {
            return new SyncResult[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncResult> ${name}${value};
"
	    classrelation_ref 221826 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 779394 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 779522 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 779650 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 779778 "toDebugString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generates a debugging string indicating the status.
The string consist of a sequence of code letter followed by the count.
Code letters are f - fullSyncRequested, r - partialSyncUnavailable,
X - hardError, e - numParseExceptions, c - numConflictDetectedExceptions,
a - numAuthExceptions, D - tooManyDeletions, R - tooManyRetries,
b - databaseError, x - softError, l - syncAlreadyInProgress,
I - numIoExceptions
@return debugging string."
      end
    end

    class 193666 "ActivityNotFoundException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown when a call to {@link Context#startActivity} or
one of its variants fails because an Activity can not be found to execute
the given Intent."
      classrelation 201218 // <generalisation>
	relation 201218 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 201218 // <generalisation>
	  b parent class_ref 148482 // RuntimeException
      end

      operation 624898 "ActivityNotFoundException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 625026 "ActivityNotFoundException"
	public explicit_return_type ""
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 193794 "AsyncQueryHandler"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A helper class to help make handling asynchronous {@link ContentResolver}
queries easier."
      classrelation 201346 // <generalisation>
	relation 201346 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 201346 // <generalisation>
	  b parent class_ref 168578 // Handler
      end

      attribute 417026 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"AsyncQuery\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 417154 "localLOGV"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 417282 "EVENT_ARG_QUERY"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 417410 "EVENT_ARG_INSERT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 417538 "EVENT_ARG_UPDATE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 417666 "EVENT_ARG_DELETE"
	class_attribute const_attribute private explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 201474 // mResolver (<unidirectional association>)
	relation 201474 --->
	  stereotype "WeakReference"
	  a role_name "mResolver" const_relation package
	    comment " package "
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 201474 // mResolver (<unidirectional association>)
	  b parent class_ref 193922 // ContentResolver
      end

      classrelation 201602 // sLooper (<unidirectional association>)
	relation 201602 --->
	  a role_name "sLooper" init_value " null" class_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 201602 // sLooper (<unidirectional association>)
	  b parent class_ref 168834 // Looper
      end

      classrelation 201730 // mWorkerThreadHandler (<unidirectional association>)
	relation 201730 --->
	  a role_name "mWorkerThreadHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 201730 // mWorkerThreadHandler (<unidirectional association>)
	  b parent class_ref 168578 // Handler
      end

      class 194050 "WorkerArgs"
	visibility protected 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 201858 // uri (<unidirectional association>)
	  relation 201858 --->
	    a role_name "uri" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 201858 // uri (<unidirectional association>)
	    b parent class_ref 145410 // Uri
	end

	classrelation 201986 // handler (<unidirectional association>)
	  relation 201986 --->
	    a role_name "handler" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 201986 // handler (<unidirectional association>)
	    b parent class_ref 168578 // Handler
	end

	attribute 417794 "projection"
	  public explicit_type "String"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 417922 "selection"
	  public explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 418050 "selectionArgs"
	  public explicit_type "String"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 418178 "orderBy"
	  public explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 418306 "result"
	  public explicit_type "Object"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 418434 "cookie"
	  public explicit_type "Object"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 202114 // values (<unidirectional association>)
	  relation 202114 --->
	    a role_name "values" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 202114 // values (<unidirectional association>)
	    b parent class_ref 194178 // ContentValues
	end
      end

      class 194306 "WorkerHandler"
	visibility protected 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 202242 // <generalisation>
	  relation 202242 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 202242 // <generalisation>
	    b parent class_ref 168578 // Handler
	end

	operation 625154 "WorkerHandler"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "looper" type class_ref 168834 // Looper
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 625282 "handleMessage"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "msg" type class_ref 167682 // Message
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 625410 "AsyncQueryHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "cr" type class_ref 193922 // ContentResolver
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 625538 "createHandler"
	protected return_type class_ref 168578 // Handler
	nparams 1
	  param inout name "looper" type class_ref 168834 // Looper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 625666 "startQuery"
	public explicit_return_type "void"
	nparams 7
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "orderBy" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5}[] ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method begins an asynchronous query. When the query is done
{@link #onQueryComplete} is called.

@param token A token passed into {@link #onQueryComplete} to identify
 the query.
@param cookie An object that gets passed into {@link #onQueryComplete}
@param uri The URI, using the content:// scheme, for the content to
        retrieve.
@param projection A list of which columns to return. Passing null will
        return all columns, which is discouraged to prevent reading data
        from storage that isn't going to be used.
@param selection A filter declaring which rows to return, formatted as an
        SQL WHERE clause (excluding the WHERE itself). Passing null will
        return all rows for the given URI.
@param selectionArgs You may include ?s in selection, which will be
        replaced by the values from selectionArgs, in the order that they
        appear in the selection. The values will be bound as Strings.
@param orderBy How to order the rows, formatted as an SQL ORDER BY
        clause (excluding the ORDER BY itself). Passing null will use the
        default sort order, which may be unordered."
      end

      operation 625794 "cancelOperation"
	public explicit_return_type "void"
	nparams 1
	  param in name "token" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempts to cancel operation that has not already started. Note that
there is no guarantee that the operation will be canceled. They still may
result in a call to on[Query/Insert/Update/Delete]Complete after this
call has completed.

@param token The token representing the operation to be canceled.
 If multiple operations have the same token they will all be canceled."
      end

      operation 625922 "startInsert"
	public explicit_return_type "void"
	nparams 4
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "initialValues" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method begins an asynchronous insert. When the insert operation is
done {@link #onInsertComplete} is called.

@param token A token passed into {@link #onInsertComplete} to identify
 the insert operation.
@param cookie An object that gets passed into {@link #onInsertComplete}
@param uri the Uri passed to the insert operation.
@param initialValues the ContentValues parameter passed to the insert operation."
      end

      operation 626050 "startUpdate"
	public explicit_return_type "void"
	nparams 6
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5}[] ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method begins an asynchronous update. When the update operation is
done {@link #onUpdateComplete} is called.

@param token A token passed into {@link #onUpdateComplete} to identify
 the update operation.
@param cookie An object that gets passed into {@link #onUpdateComplete}
@param uri the Uri passed to the update operation.
@param values the ContentValues parameter passed to the update operation."
      end

      operation 626178 "startDelete"
	public explicit_return_type "void"
	nparams 5
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method begins an asynchronous delete. When the delete operation is
done {@link #onDeleteComplete} is called.

@param token A token passed into {@link #onDeleteComplete} to identify
 the delete operation.
@param cookie An object that gets passed into {@link #onDeleteComplete}
@param uri the Uri passed to the delete operation.
@param selection the where clause."
      end

      operation 626306 "onQueryComplete"
	protected explicit_return_type "void"
	nparams 3
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "cursor" explicit_type "Cursor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an asynchronous query is completed.

@param token the token to identify the query, passed in from
           {@link #startQuery}.
@param cookie the cookie object passed in from {@link #startQuery}.
@param cursor The cursor holding the results from the query."
      end

      operation 626434 "onInsertComplete"
	protected explicit_return_type "void"
	nparams 3
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an asynchronous insert is completed.

@param token the token to identify the query, passed in from
       {@link #startInsert}.
@param cookie the cookie object that's passed in from
       {@link #startInsert}.
@param uri the uri returned from the insert operation."
      end

      operation 626562 "onUpdateComplete"
	protected explicit_return_type "void"
	nparams 3
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param in name "result" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an asynchronous update is completed.

@param token the token to identify the query, passed in from
       {@link #startUpdate}.
@param cookie the cookie object that's passed in from
       {@link #startUpdate}.
@param result the result returned from the update operation"
      end

      operation 626690 "onDeleteComplete"
	protected explicit_return_type "void"
	nparams 3
	  param in name "token" explicit_type "int"
	  param inout name "cookie" explicit_type "Object"
	  param in name "result" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when an asynchronous delete is completed.

@param token the token to identify the query, passed in from
       {@link #startDelete}.
@param cookie the cookie object that's passed in from
       {@link #startDelete}.
@param result the result returned from the delete operation"
      end

      operation 626818 "handleMessage"
	public explicit_return_type "void"
	nparams 1
	  param inout name "msg" type class_ref 167682 // Message
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 193922 "ContentResolver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class provides applications access to the content model.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using a ContentResolver with content providers, read the
<a href=\"{@docRoot}guide/topics/providers/content-providers.html\">Content Providers</a>
developer guide.</p>"
      attribute 432258 "SYNC_EXTRAS_ACCOUNT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"account\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated instead use
{@link #requestSync(android.accounts.Account, String, android.os.Bundle)}
"
      end

      attribute 432386 "SYNC_EXTRAS_EXPEDITED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"expedited\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If this extra is set to true, the sync request will be scheduled
at the front of the sync request queue and without any delay
"
      end

      attribute 432514 "SYNC_EXTRAS_FORCE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"force\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated instead use
{@link #SYNC_EXTRAS_MANUAL}
"
      end

      attribute 432642 "SYNC_EXTRAS_IGNORE_SETTINGS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"ignore_settings\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If this extra is set to true then the sync settings (like getSyncAutomatically())
are ignored by the sync scheduler.
"
      end

      attribute 432770 "SYNC_EXTRAS_IGNORE_BACKOFF"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"ignore_backoff\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If this extra is set to true then any backoffs for the initial attempt (e.g. due to retries)
are ignored by the sync scheduler. If this request fails and gets rescheduled then the
retries will still honor the backoff.
"
      end

      attribute 432898 "SYNC_EXTRAS_DO_NOT_RETRY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"do_not_retry\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If this extra is set to true then the request will not be retried if it fails.
"
      end

      attribute 433026 "SYNC_EXTRAS_MANUAL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"force\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Setting this extra is the equivalent of setting both {@link #SYNC_EXTRAS_IGNORE_SETTINGS}
and {@link #SYNC_EXTRAS_IGNORE_BACKOFF}
"
      end

      attribute 433154 "SYNC_EXTRAS_UPLOAD"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"upload\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that this sync is intended to only upload local changes to the server.
For example, this will be set to true if the sync is initiated by a call to
{@link ContentResolver#notifyChange(android.net.Uri, android.database.ContentObserver, boolean)}
"
      end

      attribute 433282 "SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"deletions_override\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the sync adapter should proceed with the delete operations,
even if it determines that there are too many.
See {@link SyncResult#tooManyDeletions}
"
      end

      attribute 433410 "SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"discard_deletions\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Indicates that the sync adapter should not proceed with the delete operations,
if it determines that there are too many.
See {@link SyncResult#tooManyDeletions}
"
      end

      attribute 433538 "SYNC_EXTRAS_EXPECTED_UPLOAD"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"expected_upload\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Extensions to API. TODO: Not clear if we will keep these as public flags. 
 {@hide} User-specified flag for expected upload size. "
      end

      attribute 433666 "SYNC_EXTRAS_EXPECTED_DOWNLOAD"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"expected_download\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} User-specified flag for expected download size. "
      end

      attribute 433794 "SYNC_EXTRAS_PRIORITY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"sync_priority\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} Priority of this sync with respect to other syncs scheduled for this application. "
      end

      attribute 433922 "SYNC_EXTRAS_DISALLOW_METERED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"disallow_metered\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " {@hide} Flag to allow sync to occur on metered network. "
      end

      attribute 434050 "SYNC_EXTRAS_INITIALIZE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"initialize\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set by the SyncManager to request that the SyncAdapter initialize itself for
the given account/authority pair. One required initialization step is to
ensure that {@link #setIsSyncable(android.accounts.Account, String, int)} has been
called with a >= 0 value. When this flag is set the SyncAdapter does not need to
do a full sync, though it is allowed to do so.
"
      end

      classrelation 210050 // ACTION_SYNC_CONN_STATUS_CHANGED (<unidirectional association>)
	relation 210050 --->
	  a role_name "ACTION_SYNC_CONN_STATUS_CHANGED" init_value "
            new Intent(\"com.android.sync.SYNC_CONN_STATUS_CHANGED\")" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 210050 // ACTION_SYNC_CONN_STATUS_CHANGED (<unidirectional association>)
	  b parent class_ref 195458 // Intent
      end

      attribute 434178 "SCHEME_CONTENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"content\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 434306 "SCHEME_ANDROID_RESOURCE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.resource\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 434434 "SCHEME_FILE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"file\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 434562 "CURSOR_ITEM_BASE_TYPE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"vnd.android.cursor.item\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This is the Android platform's base MIME type for a content: URI
containing a Cursor of a single item.  Applications should use this
as the base type along with their own sub-type of their content: URIs
that represent a particular item.  For example, hypothetical IMAP email
client may have a URI
<code>content://com.company.provider.imap/inbox/1</code> for a particular
message in the inbox, whose MIME type would be reported as
<code>CURSOR_ITEM_BASE_TYPE + \"/vnd.company.imap-msg\"</code>

<p>Compare with {@link #CURSOR_DIR_BASE_TYPE}.
"
      end

      attribute 434690 "CURSOR_DIR_BASE_TYPE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"vnd.android.cursor.dir\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This is the Android platform's base MIME type for a content: URI
containing a Cursor of zero or more items.  Applications should use this
as the base type along with their own sub-type of their content: URIs
that represent a directory of items.  For example, hypothetical IMAP email
client may have a URI
<code>content://com.company.provider.imap/inbox</code> for all of the
messages in its inbox, whose MIME type would be reported as
<code>CURSOR_DIR_BASE_TYPE + \"/vnd.company.imap-msg\"</code>

<p>Note how the base MIME type varies between this and
{@link #CURSOR_ITEM_BASE_TYPE} depending on whether there is
one single item or multiple items in the data set, while the sub-type
remains the same because in either case the data structure contained
in the cursor is the same.
"
      end

      attribute 434818 "SYNC_ERROR_SYNC_ALREADY_IN_PROGRESS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 434946 "SYNC_ERROR_AUTHENTICATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 435074 "SYNC_ERROR_IO"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 435202 "SYNC_ERROR_PARSE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 435330 "SYNC_ERROR_CONFLICT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 435458 "SYNC_ERROR_TOO_MANY_DELETIONS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 435586 "SYNC_ERROR_TOO_MANY_RETRIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 435714 "SYNC_ERROR_INTERNAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 8"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 435842 "SYNC_ERROR_NAMES"
	class_attribute const_attribute private explicit_type "String"
	multiplicity "[]"
	init_value " new String[] {
          \"already-in-progress\",
          \"authentication-error\",
          \"io-error\",
          \"parse-error\",
          \"conflict\",
          \"too-many-deletions\",
          \"too-many-retries\",
          \"internal-error\",
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 674050 "syncErrorToString"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "error" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 674178 "syncErrorStringToInt"
	class_operation public explicit_return_type "int"
	nparams 1
	  param in name "error" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      attribute 435970 "SYNC_OBSERVER_TYPE_SETTINGS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 436098 "SYNC_OBSERVER_TYPE_PENDING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 436226 "SYNC_OBSERVER_TYPE_ACTIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 436354 "SYNC_OBSERVER_TYPE_STATUS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 436482 "SYNC_OBSERVER_TYPE_ALL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x7fffffff"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 436610 "ENABLE_CONTENT_SAMPLE"
	class_attribute const_attribute private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Always log queries which take 500ms+; shorter queries are
 sampled accordingly."
      end

      attribute 436738 "SLOW_THRESHOLD_MILLIS"
	class_attribute const_attribute private explicit_type "int"
	init_value " 500"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 436866 "mRandom"
	const_attribute private explicit_type "Random"
	init_value " new Random()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " guarded by itself"
      end

      operation 674306 "ContentResolver"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 192770 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 674434 "acquireProvider"
	abstract protected return_type class_ref 197506 // IContentProvider
	nparams 2
	  param inout name "c" type class_ref 192770 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 674562 "acquireExistingProvider"
	protected return_type class_ref 197506 // IContentProvider
	nparams 2
	  param inout name "c" type class_ref 192770 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Providing a default implementation of this, to avoid having to change a
lot of other things, but implementations of ContentResolver should
implement it.

@hide"
      end

      operation 674690 "releaseProvider"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "icp" type class_ref 197506 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 674818 "acquireUnstableProvider"
	abstract protected return_type class_ref 197506 // IContentProvider
	nparams 2
	  param inout name "c" type class_ref 192770 // Context
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 674946 "releaseUnstableProvider"
	abstract public explicit_return_type "boolean"
	nparams 1
	  param inout name "icp" type class_ref 197506 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 675074 "unstableProviderDied"
	abstract public explicit_return_type "void"
	nparams 1
	  param inout name "icp" type class_ref 197506 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 675202 "appNotRespondingViaProvider"
	public explicit_return_type "void"
	nparams 1
	  param inout name "icp" type class_ref 197506 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 675330 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the MIME type of the given content URL.

@param url A Uri identifying content (either a list or specific type),
using the content:// scheme.
@return A MIME type for the content, or null if the URL is invalid or the type is unknown"
      end

      operation 675458 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mimeTypeFilter" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Query for the possible MIME types for the representations the given
content URL can be returned when opened as as stream with
{@link #openTypedAssetFileDescriptor}.  Note that the types here are
not necessarily a superset of the type returned by {@link #getType} --
many content providers cannot return a raw stream for the structured
data that they contain.

@param url A Uri identifying content (either a list or specific type),
using the content:// scheme.
@param mimeTypeFilter The desired MIME type.  This may be a pattern,
such as *\\/*, to query for all available MIME types that match the
pattern.
@return Returns an array of MIME type strings for all available
data streams that match the given mimeTypeFilter.  If there are none,
null is returned."
      end

      operation 675586 "query"
	public explicit_return_type "Cursor"
	nparams 5
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Query the given URI, returning a {@link Cursor} over the result set.
</p>
<p>
For best performance, the caller should follow these guidelines:
<ul>
<li>Provide an explicit projection, to prevent
reading data from storage that aren't going to be used.</li>
<li>Use question mark parameter markers such as 'phone=?' instead of
explicit values in the {@code selection} parameter, so that queries
that differ only by those values will be recognized as the same
for caching purposes.</li>
</ul>
</p>

@param uri The URI, using the content:// scheme, for the content to
        retrieve.
@param projection A list of which columns to return. Passing null will
        return all columns, which is inefficient.
@param selection A filter declaring which rows to return, formatted as an
        SQL WHERE clause (excluding the WHERE itself). Passing null will
        return all rows for the given URI.
@param selectionArgs You may include ?s in selection, which will be
        replaced by the values from selectionArgs, in the order that they
        appear in the selection. The values will be bound as Strings.
@param sortOrder How to order the rows, formatted as an SQL ORDER BY
        clause (excluding the ORDER BY itself). Passing null will use the
        default sort order, which may be unordered.
@return A Cursor object, which is positioned before the first entry, or null
@see Cursor"
      end

      operation 675714 "query"
	public explicit_return_type "Cursor"
	nparams 6
	  param in name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 174338 // CancellationSignal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}final ${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "<p>
Query the given URI, returning a {@link Cursor} over the result set.
</p>
<p>
For best performance, the caller should follow these guidelines:
<ul>
<li>Provide an explicit projection, to prevent
reading data from storage that aren't going to be used.</li>
<li>Use question mark parameter markers such as 'phone=?' instead of
explicit values in the {@code selection} parameter, so that queries
that differ only by those values will be recognized as the same
for caching purposes.</li>
</ul>
</p>

@param uri The URI, using the content:// scheme, for the content to
        retrieve.
@param projection A list of which columns to return. Passing null will
        return all columns, which is inefficient.
@param selection A filter declaring which rows to return, formatted as an
        SQL WHERE clause (excluding the WHERE itself). Passing null will
        return all rows for the given URI.
@param selectionArgs You may include ?s in selection, which will be
        replaced by the values from selectionArgs, in the order that they
        appear in the selection. The values will be bound as Strings.
@param sortOrder How to order the rows, formatted as an SQL ORDER BY
        clause (excluding the ORDER BY itself). Passing null will use the
        default sort order, which may be unordered.
@param cancellationSignal A signal to cancel the operation in progress, or null if none.
If the operation is canceled, then {@link OperationCanceledException} will be thrown
when the query is executed.
@return A Cursor object, which is positioned before the first entry, or null
@see Cursor"
      end

      operation 675842 "canonicalize"
	public return_type class_ref 145410 // Uri
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Transform the given <var>url</var> to a canonical representation of
its referenced resource, which can be used across devices, persisted,
backed up and restored, etc.  The returned Uri is still a fully capable
Uri for use with its content provider, allowing you to do all of the
same content provider operations as with the original Uri --
{@link #query}, {@link #openInputStream(android.net.Uri)}, etc.  The
only difference in behavior between the original and new Uris is that
the content provider may need to do some additional work at each call
using it to resolve it to the correct resource, especially if the
canonical Uri has been moved to a different environment.

<p>If you are moving a canonical Uri between environments, you should
perform another call to {@link #canonicalize} with that original Uri to
re-canonicalize it for the current environment.  Alternatively, you may
want to use {@link #uncanonicalize} to transform it to a non-canonical
Uri that works only in the current environment but potentially more
efficiently than the canonical representation.</p>

@param url The {@link Uri} that is to be transformed to a canonical
representation.  Like all resolver calls, the input can be either
a non-canonical or canonical Uri.

@return Returns the official canonical representation of <var>url</var>,
or null if the content provider does not support a canonical representation
of the given Uri.  Many providers may not support canonicalization of some
or all of their Uris.

@see #uncanonicalize"
      end

      operation 675970 "uncanonicalize"
	public return_type class_ref 145410 // Uri
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given a canonical Uri previously generated by {@link #canonicalize}, convert
it to its local non-canonical form.  This can be useful in some cases where
you know that you will only be using the Uri in the current environment and
want to avoid any possible overhead when using it with the content
provider or want to verify that the referenced data exists at all in the
new environment.

@param url The canonical {@link Uri} that is to be convered back to its
non-canonical form.

@return Returns the non-canonical representation of <var>url</var>.  This will
return null if data identified by the canonical Uri can not be found in
the current environment; callers must always check for null and deal with
that by appropriately falling back to an alternative.

@see #canonicalize"
      end

      operation 676098 "openInputStream"
	public explicit_return_type "InputStream"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a stream on to the content associated with a content URI.  If there
is no data associated with the URI, FileNotFoundException is thrown.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>android.resource ({@link #SCHEME_ANDROID_RESOURCE})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>

<p>See {@link #openAssetFileDescriptor(Uri, String)} for more information
on these schemes.

@param uri The desired URI.
@return InputStream
@throws FileNotFoundException if the provided URI could not be opened.
@see #openAssetFileDescriptor(Uri, String)"
      end

      operation 676226 "openOutputStream"
	public explicit_return_type "OutputStream"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Synonym for {@link #openOutputStream(Uri, String)
openOutputStream(uri, \"w\")}.
@throws FileNotFoundException if the provided URI could not be opened."
      end

      operation 676354 "openOutputStream"
	public explicit_return_type "OutputStream"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a stream on to the content associated with a content URI.  If there
is no data associated with the URI, FileNotFoundException is thrown.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>

<p>See {@link #openAssetFileDescriptor(Uri, String)} for more information
on these schemes.

@param uri The desired URI.
@param mode May be \"w\", \"wa\", \"rw\", or \"rwt\".
@return OutputStream
@throws FileNotFoundException if the provided URI could not be opened.
@see #openAssetFileDescriptor(Uri, String)"
      end

      operation 676482 "openFileDescriptor"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a raw file descriptor to access data under a URI.  This
is like {@link #openAssetFileDescriptor(Uri, String)}, but uses the
underlying {@link ContentProvider#openFile}
ContentProvider.openFile()} method, so will <em>not</em> work with
providers that return sub-sections of files.  If at all possible,
you should use {@link #openAssetFileDescriptor(Uri, String)}.  You
will receive a FileNotFoundException exception if the provider returns a
sub-section of a file.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>

<p>See {@link #openAssetFileDescriptor(Uri, String)} for more information
on these schemes.
<p>
If opening with the exclusive \"r\" or \"w\" modes, the returned
ParcelFileDescriptor could be a pipe or socket pair to enable streaming
of data. Opening with the \"rw\" mode implies a file on disk that supports
seeking. If possible, always use an exclusive mode to give the underlying
{@link ContentProvider} the most flexibility.
<p>
If you are writing a file, and need to communicate an error to the
provider, use {@link ParcelFileDescriptor#closeWithError(String)}.

@param uri The desired URI to open.
@param mode The file mode to use, as per {@link ContentProvider#openFile
ContentProvider.openFile}.
@return Returns a new ParcelFileDescriptor pointing to the file.  You
own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException if no
file exists under the URI or the mode is invalid.
@see #openAssetFileDescriptor(Uri, String)"
      end

      operation 676610 "openFileDescriptor"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 174338 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a raw file descriptor to access data under a URI.  This
is like {@link #openAssetFileDescriptor(Uri, String)}, but uses the
underlying {@link ContentProvider#openFile}
ContentProvider.openFile()} method, so will <em>not</em> work with
providers that return sub-sections of files.  If at all possible,
you should use {@link #openAssetFileDescriptor(Uri, String)}.  You
will receive a FileNotFoundException exception if the provider returns a
sub-section of a file.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>

<p>See {@link #openAssetFileDescriptor(Uri, String)} for more information
on these schemes.
<p>
If opening with the exclusive \"r\" or \"w\" modes, the returned
ParcelFileDescriptor could be a pipe or socket pair to enable streaming
of data. Opening with the \"rw\" mode implies a file on disk that supports
seeking. If possible, always use an exclusive mode to give the underlying
{@link ContentProvider} the most flexibility.
<p>
If you are writing a file, and need to communicate an error to the
provider, use {@link ParcelFileDescriptor#closeWithError(String)}.

@param uri The desired URI to open.
@param mode The file mode to use, as per {@link ContentProvider#openFile
ContentProvider.openFile}.
@param cancellationSignal A signal to cancel the operation in progress,
        or null if none. If the operation is canceled, then
        {@link OperationCanceledException} will be thrown.
@return Returns a new ParcelFileDescriptor pointing to the file.  You
own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException if no
file exists under the URI or the mode is invalid.
@see #openAssetFileDescriptor(Uri, String)"
      end

      operation 676738 "openAssetFileDescriptor"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a raw file descriptor to access data under a URI.  This
interacts with the underlying {@link ContentProvider#openAssetFile}
method of the provider associated with the given URI, to retrieve any file stored there.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>android.resource ({@link #SCHEME_ANDROID_RESOURCE})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>
<h5>The android.resource ({@link #SCHEME_ANDROID_RESOURCE}) Scheme</h5>
<p>
A Uri object can be used to reference a resource in an APK file.  The
Uri should be one of the following formats:
<ul>
<li><code>android.resource://package_name/id_number</code><br/>
<code>package_name</code> is your package name as listed in your AndroidManifest.xml.
For example <code>com.example.myapp</code><br/>
<code>id_number</code> is the int form of the ID.<br/>
The easiest way to construct this form is
<pre>Uri uri = Uri.parse(\"android.resource://com.example.myapp/\" + R.raw.my_resource\");</pre>
</li>
<li><code>android.resource://package_name/type/name</code><br/>
<code>package_name</code> is your package name as listed in your AndroidManifest.xml.
For example <code>com.example.myapp</code><br/>
<code>type</code> is the string form of the resource type.  For example, <code>raw</code>
or <code>drawable</code>.
<code>name</code> is the string form of the resource name.  That is, whatever the file
name was in your res directory, without the type extension.
The easiest way to construct this form is
<pre>Uri uri = Uri.parse(\"android.resource://com.example.myapp/raw/my_resource\");</pre>
</li>
</ul>

<p>Note that if this function is called for read-only input (mode is \"r\")
on a content: URI, it will instead call {@link #openTypedAssetFileDescriptor}
for you with a MIME type of \"*\\/*\".  This allows such callers to benefit
from any built-in data conversion that a provider implements.

@param uri The desired URI to open.
@param mode The file mode to use, as per {@link ContentProvider#openAssetFile
ContentProvider.openAssetFile}.
@return Returns a new ParcelFileDescriptor pointing to the file.  You
own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException of no
file exists under the URI or the mode is invalid."
      end

      operation 676866 "openAssetFileDescriptor"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 174338 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a raw file descriptor to access data under a URI.  This
interacts with the underlying {@link ContentProvider#openAssetFile}
method of the provider associated with the given URI, to retrieve any file stored there.

<h5>Accepts the following URI schemes:</h5>
<ul>
<li>content ({@link #SCHEME_CONTENT})</li>
<li>android.resource ({@link #SCHEME_ANDROID_RESOURCE})</li>
<li>file ({@link #SCHEME_FILE})</li>
</ul>
<h5>The android.resource ({@link #SCHEME_ANDROID_RESOURCE}) Scheme</h5>
<p>
A Uri object can be used to reference a resource in an APK file.  The
Uri should be one of the following formats:
<ul>
<li><code>android.resource://package_name/id_number</code><br/>
<code>package_name</code> is your package name as listed in your AndroidManifest.xml.
For example <code>com.example.myapp</code><br/>
<code>id_number</code> is the int form of the ID.<br/>
The easiest way to construct this form is
<pre>Uri uri = Uri.parse(\"android.resource://com.example.myapp/\" + R.raw.my_resource\");</pre>
</li>
<li><code>android.resource://package_name/type/name</code><br/>
<code>package_name</code> is your package name as listed in your AndroidManifest.xml.
For example <code>com.example.myapp</code><br/>
<code>type</code> is the string form of the resource type.  For example, <code>raw</code>
or <code>drawable</code>.
<code>name</code> is the string form of the resource name.  That is, whatever the file
name was in your res directory, without the type extension.
The easiest way to construct this form is
<pre>Uri uri = Uri.parse(\"android.resource://com.example.myapp/raw/my_resource\");</pre>
</li>
</ul>

<p>Note that if this function is called for read-only input (mode is \"r\")
on a content: URI, it will instead call {@link #openTypedAssetFileDescriptor}
for you with a MIME type of \"*\\/*\".  This allows such callers to benefit
from any built-in data conversion that a provider implements.

@param uri The desired URI to open.
@param mode The file mode to use, as per {@link ContentProvider#openAssetFile
ContentProvider.openAssetFile}.
@param cancellationSignal A signal to cancel the operation in progress, or null if
           none. If the operation is canceled, then
           {@link OperationCanceledException} will be thrown.
@return Returns a new ParcelFileDescriptor pointing to the file.  You
own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException of no
file exists under the URI or the mode is invalid."
      end

      operation 676994 "openTypedAssetFileDescriptor"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 174082 // Bundle
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a raw file descriptor to access (potentially type transformed)
data from a \"content:\" URI.  This interacts with the underlying
{@link ContentProvider#openTypedAssetFile} method of the provider
associated with the given URI, to retrieve retrieve any appropriate
data stream for the data stored there.

<p>Unlike {@link #openAssetFileDescriptor}, this function only works
with \"content:\" URIs, because content providers are the only facility
with an associated MIME type to ensure that the returned data stream
is of the desired type.

<p>All text/* streams are encoded in UTF-8.

@param uri The desired URI to open.
@param mimeType The desired MIME type of the returned data.  This can
be a pattern such as *\\/*, which will allow the content provider to
select a type, though there is no way for you to determine what type
it is returning.
@param opts Additional provider-dependent options.
@return Returns a new ParcelFileDescriptor from which you can read the
data stream from the provider.  Note that this may be a pipe, meaning
you can't seek in it.  The only seek you should do is if the
AssetFileDescriptor contains an offset, to move to that offset before
reading.  You own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException of no
data of the desired type exists under the URI."
      end

      operation 677122 "openTypedAssetFileDescriptor"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 174082 // Bundle
	  param inout name "cancellationSignal" type class_ref 174338 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Open a raw file descriptor to access (potentially type transformed)
data from a \"content:\" URI.  This interacts with the underlying
{@link ContentProvider#openTypedAssetFile} method of the provider
associated with the given URI, to retrieve retrieve any appropriate
data stream for the data stored there.

<p>Unlike {@link #openAssetFileDescriptor}, this function only works
with \"content:\" URIs, because content providers are the only facility
with an associated MIME type to ensure that the returned data stream
is of the desired type.

<p>All text/* streams are encoded in UTF-8.

@param uri The desired URI to open.
@param mimeType The desired MIME type of the returned data.  This can
be a pattern such as *\\/*, which will allow the content provider to
select a type, though there is no way for you to determine what type
it is returning.
@param opts Additional provider-dependent options.
@param cancellationSignal A signal to cancel the operation in progress,
        or null if none. If the operation is canceled, then
        {@link OperationCanceledException} will be thrown.
@return Returns a new ParcelFileDescriptor from which you can read the
data stream from the provider.  Note that this may be a pipe, meaning
you can't seek in it.  The only seek you should do is if the
AssetFileDescriptor contains an offset, to move to that offset before
reading.  You own this descriptor and are responsible for closing it when done.
@throws FileNotFoundException Throws FileNotFoundException of no
data of the desired type exists under the URI."
      end

      class 199170 "OpenResourceIdResult"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 210178 // r (<unidirectional association>)
	  relation 210178 --->
	    a role_name "r" public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 210178 // r (<unidirectional association>)
	    b parent class_ref 199298 // Resources
	end

	attribute 436994 "id"
	  public explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 677250 "getResourceId"
	public return_type class_ref 199170 // OpenResourceIdResult
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolves an android.resource URI to a {@link Resources} and a resource id.

@hide"
      end

      operation 677378 "insert"
	public return_type class_ref 145410 // Uri
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts a row into a table at the given URL.

If the content provider supports transactions the insertion will be atomic.

@param url The URL of the table to insert into.
@param values The initial values for the newly inserted row. The key is the column name for
              the field. Passing an empty ContentValues will create an empty row.
@return the URL of the newly created row."
      end

      operation 677506 "applyBatch"
	public return_type class_ref 197890 // ContentProviderResult
	nparams 2
	  param in name "authority" explicit_type "String"
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  exception class_ref 198018 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies each of the {@link ContentProviderOperation} objects and returns an array
of their results. Passes through OperationApplicationException, which may be thrown
by the call to {@link ContentProviderOperation#apply}.
If all the applications succeed then a {@link ContentProviderResult} array with the
same number of elements as the operations will be returned. It is implementation-specific
how many, if any, operations will have been successfully applied if a call to
apply results in a {@link OperationApplicationException}.
@param authority the authority of the ContentProvider to which this batch should be applied
@param operations the operations to apply
@return the results of the applications
@throws OperationApplicationException thrown if an application fails.
See {@link ContentProviderOperation#apply} for more information.
@throws RemoteException thrown if a RemoteException is encountered while attempting
  to communicate with a remote provider."
      end

      operation 677634 "bulkInsert"
	public explicit_return_type "int"
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Inserts multiple rows into a table at the given URL.

This function make no guarantees about the atomicity of the insertions.

@param url The URL of the table to insert into.
@param values The initial values for the newly inserted rows. The key is the column name for
              the field. Passing null will create an empty row.
@return the number of newly created rows."
      end

      operation 677762 "delete"
	public explicit_return_type "int"
	nparams 3
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "where" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Deletes row(s) specified by a content URI.

If the content provider supports transactions, the deletion will be atomic.

@param url The URL of the row to delete.
@param where A filter to apply to rows before deleting, formatted as an SQL WHERE clause
(excluding the WHERE itself).
@return The number of rows deleted."
      end

      operation 677890 "update"
	public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	  param in name "where" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Update row(s) in a content URI.

If the content provider supports transactions the update will be atomic.

@param uri The URI to modify.
@param values The new field values. The key is the column name for the field.
A null value will remove an existing field value.
@param where A filter to apply to rows before updating, formatted as an SQL WHERE clause
(excluding the WHERE itself).
@return the number of rows updated.
@throws NullPointerException if uri or values are null"
      end

      operation 678018 "call"
	public return_type class_ref 174082 // Bundle
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "method" explicit_type "String"
	  param in name "arg" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call a provider-defined method.  This can be used to implement
read or write interfaces which are cheaper than using a Cursor and/or
do not fit into the traditional table model.

@param method provider-defined method name to call.  Opaque to
  framework, but must be non-null.
@param arg provider-defined String argument.  May be null.
@param extras provider-defined Bundle argument.  May be null.
@return a result Bundle, possibly null.  Will be null if the ContentProvider
  does not implement call.
@throws NullPointerException if uri or method is null
@throws IllegalArgumentException if uri is not known"
      end

      operation 678146 "acquireProvider"
	public return_type class_ref 197506 // IContentProvider
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content provider for the given content URI.

@param uri The URI to a content provider
@return The ContentProvider for the given URI, or null if no content provider is found.
@hide"
      end

      operation 678274 "acquireExistingProvider"
	public return_type class_ref 197506 // IContentProvider
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content provider for the given content URI if the process
already has a reference on it.

@param uri The URI to a content provider
@return The ContentProvider for the given URI, or null if no content provider is found.
@hide"
      end

      operation 678402 "acquireProvider"
	public return_type class_ref 197506 // IContentProvider
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 678530 "acquireUnstableProvider"
	public return_type class_ref 197506 // IContentProvider
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the content provider for the given content URI.

@param uri The URI to a content provider
@return The ContentProvider for the given URI, or null if no content provider is found.
@hide"
      end

      operation 678658 "acquireUnstableProvider"
	public return_type class_ref 197506 // IContentProvider
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide"
      end

      operation 678786 "acquireContentProviderClient"
	public return_type class_ref 193410 // ContentProviderClient
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link ContentProviderClient} that is associated with the {@link ContentProvider}
that services the content at uri, starting the provider if necessary. Returns
null if there is no provider associated wih the uri. The caller must indicate that they are
done with the provider by calling {@link ContentProviderClient#release} which will allow
the system to release the provider it it determines that there is no other reason for
keeping it active.
@param uri specifies which provider should be acquired
@return a {@link ContentProviderClient} that is associated with the {@link ContentProvider}
that services the content at uri or null if there isn't one."
      end

      operation 678914 "acquireContentProviderClient"
	public return_type class_ref 193410 // ContentProviderClient
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a {@link ContentProviderClient} that is associated with the {@link ContentProvider}
with the authority of name, starting the provider if necessary. Returns
null if there is no provider associated wih the uri. The caller must indicate that they are
done with the provider by calling {@link ContentProviderClient#release} which will allow
the system to release the provider it it determines that there is no other reason for
keeping it active.
@param name specifies which provider should be acquired
@return a {@link ContentProviderClient} that is associated with the {@link ContentProvider}
with the authority of name or null if there isn't one."
      end

      operation 679042 "acquireUnstableContentProviderClient"
	public return_type class_ref 193410 // ContentProviderClient
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #acquireContentProviderClient(Uri)}, but for use when you do
not trust the stability of the target content provider.  This turns off
the mechanism in the platform clean up processes that are dependent on
a content provider if that content provider's process goes away.  Normally
you can safely assume that once you have acquired a provider, you can freely
use it as needed and it won't disappear, even if your process is in the
background.  If using this method, you need to take care to deal with any
failures when communicating with the provider, and be sure to close it
so that it can be re-opened later.  In particular, catching a
{@link android.os.DeadObjectException} from the calls there will let you
know that the content provider has gone away; at that point the current
ContentProviderClient object is invalid, and you should release it.  You
can acquire a new one if you would like to try to restart the provider
and perform new operations on it."
      end

      operation 679170 "acquireUnstableContentProviderClient"
	public return_type class_ref 193410 // ContentProviderClient
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #acquireContentProviderClient(String)}, but for use when you do
not trust the stability of the target content provider.  This turns off
the mechanism in the platform clean up processes that are dependent on
a content provider if that content provider's process goes away.  Normally
you can safely assume that once you have acquired a provider, you can freely
use it as needed and it won't disappear, even if your process is in the
background.  If using this method, you need to take care to deal with any
failures when communicating with the provider, and be sure to close it
so that it can be re-opened later.  In particular, catching a
{@link android.os.DeadObjectException} from the calls there will let you
know that the content provider has gone away; at that point the current
ContentProviderClient object is invalid, and you should release it.  You
can acquire a new one if you would like to try to restart the provider
and perform new operations on it."
      end

      operation 679298 "registerContentObserver"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "notifyForDescendents" explicit_type "boolean"
	  param inout name "observer" explicit_type "ContentObserver"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register an observer class that gets callbacks when data identified by a
given content URI changes.

@param uri The URI to watch for changes. This can be a specific row URI, or a base URI
for a whole class of content.
@param notifyForDescendents If <code>true</code> changes to URIs beginning with <code>uri</code>
will also cause notifications to be sent. If <code>false</code> only changes to the exact URI
specified by <em>uri</em> will cause notifications to be sent. If true, than any URI values
at or below the specified URI will also trigger a match.
@param observer The object that receives callbacks when changes occur.
@see #unregisterContentObserver"
      end

      operation 679426 "registerContentObserver"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "notifyForDescendents" explicit_type "boolean"
	  param inout name "observer" explicit_type "ContentObserver"
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide - designated user version "
      end

      operation 679554 "unregisterContentObserver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "observer" explicit_type "ContentObserver"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a change observer.

@param observer The previously registered observer that is no longer needed.
@see #registerContentObserver"
      end

      operation 679682 "notifyChange"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "observer" explicit_type "ContentObserver"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify registered observers that a row was updated and attempt to sync changes
to the network.
To register, call {@link #registerContentObserver(android.net.Uri , boolean, android.database.ContentObserver) registerContentObserver()}.
By default, CursorAdapter objects will get this notification.

@param uri The uri of the content that was changed.
@param observer The observer that originated the change, may be <code>null</null>.
The observer that originated the change will only receive the notification if it
has requested to receive self-change notifications by implementing
{@link ContentObserver#deliverSelfNotifications()} to return true."
      end

      operation 679810 "notifyChange"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "observer" explicit_type "ContentObserver"
	  param inout name "syncToNetwork" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify registered observers that a row was updated.
To register, call {@link #registerContentObserver(android.net.Uri , boolean, android.database.ContentObserver) registerContentObserver()}.
By default, CursorAdapter objects will get this notification.
If syncToNetwork is true, this will attempt to schedule a local sync using the sync
adapter that's registered for the authority of the provided uri. No account will be
passed to the sync adapter, so all matching accounts will be synchronized.

@param uri The uri of the content that was changed.
@param observer The observer that originated the change, may be <code>null</null>.
The observer that originated the change will only receive the notification if it
has requested to receive self-change notifications by implementing
{@link ContentObserver#deliverSelfNotifications()} to return true.
@param syncToNetwork If true, attempt to sync the change to the network.
@see #requestSync(android.accounts.Account, String, android.os.Bundle)"
      end

      operation 679938 "notifyChange"
	public explicit_return_type "void"
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "observer" explicit_type "ContentObserver"
	  param inout name "syncToNetwork" explicit_type "boolean"
	  param in name "userHandle" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Notify registered observers within the designated user(s) that a row was updated.

@hide"
      end

      operation 680066 "takePersistableUriPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take a persistable URI permission grant that has been offered. Once
taken, the permission grant will be remembered across device reboots.
Only URI permissions granted with
{@link Intent#FLAG_GRANT_PERSISTABLE_URI_PERMISSION} can be persisted. If
the grant has already been persisted, taking it again will touch
{@link UriPermission#getPersistedTime()}.

@see #getPersistedUriPermissions()"
      end

      operation 680194 "releasePersistableUriPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Relinquish a persisted URI permission grant. The URI must have been
previously made persistent with
{@link #takePersistableUriPermission(Uri, int)}. Any non-persistent
grants to the calling package will remain intact.

@see #getPersistedUriPermissions()"
      end

      operation 680322 "getPersistedUriPermissions"
	public return_type class_ref 199426 // UriPermission
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return list of all URI permission grants that have been persisted by the
calling app. That is, the returned permissions have been granted
<em>to</em> the calling app. Only persistable grants taken with
{@link #takePersistableUriPermission(Uri, int)} are returned.

@see #takePersistableUriPermission(Uri, int)
@see #releasePersistableUriPermission(Uri, int)"
      end

      operation 680450 "getOutgoingPersistedUriPermissions"
	public return_type class_ref 199426 // UriPermission
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return list of all persisted URI permission grants that are hosted by the
calling app. That is, the returned permissions have been granted
<em>from</em> the calling app. Only grants taken with
{@link #takePersistableUriPermission(Uri, int)} are returned."
      end

      operation 680578 "startSync"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Start an asynchronous sync operation. If you want to monitor the progress
of the sync you may register a SyncObserver. Only values of the following
types may be used in the extras bundle:
<ul>
<li>Integer</li>
<li>Long</li>
<li>Boolean</li>
<li>Float</li>
<li>Double</li>
<li>String</li>
<li>Account</li>
<li>null</li>
</ul>

@param uri the uri of the provider to sync or null to sync all providers.
@param extras any extras to pass to the SyncAdapter.
@deprecated instead use
{@link #requestSync(android.accounts.Account, String, android.os.Bundle)}"
      end

      operation 680706 "requestSync"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start an asynchronous sync operation. If you want to monitor the progress
of the sync you may register a SyncObserver. Only values of the following
types may be used in the extras bundle:
<ul>
<li>Integer</li>
<li>Long</li>
<li>Boolean</li>
<li>Float</li>
<li>Double</li>
<li>String</li>
<li>Account</li>
<li>null</li>
</ul>

@param account which account should be synced
@param authority which authority should be synced
@param extras any extras to pass to the SyncAdapter."
      end

      operation 680834 "requestSync"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "request" type class_ref 199554 // SyncRequest
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Register a sync with the SyncManager. These requests are built using the
{@link SyncRequest.Builder}.

@param request The immutable SyncRequest object containing the sync parameters. Use
{@link SyncRequest.Builder} to construct these."
      end

      operation 680962 "validateSyncExtrasBundle"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check that only values of the following types are in the Bundle:
<ul>
<li>Integer</li>
<li>Long</li>
<li>Boolean</li>
<li>Float</li>
<li>Double</li>
<li>String</li>
<li>Account</li>
<li>null</li>
</ul>
@param extras the Bundle to check"
      end

      operation 681090 "cancelSync"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Cancel any active or pending syncs that match the Uri. If the uri is null then
all syncs will be canceled.

@param uri the uri of the provider to sync or null to sync all providers.
@deprecated instead use {@link #cancelSync(android.accounts.Account, String)}"
      end

      operation 681218 "cancelSync"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cancel any active or pending syncs that match account and authority. The account and
authority can each independently be set to null, which means that syncs with any account
or authority, respectively, will match.

@param account filters the syncs that match by this account
@param authority filters the syncs that match by this authority"
      end

      operation 681346 "getSyncAdapterTypes"
	class_operation public return_type class_ref 199682 // SyncAdapterType
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get information about the SyncAdapters that are known to the system.
@return an array of SyncAdapters that have registered with the system"
      end

      operation 681474 "getSyncAutomatically"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if the provider should be synced when a network tickle is received
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_SETTINGS}.

@param account the account whose setting we are querying
@param authority the provider whose setting we are querying
@return true if the provider should be synced when a network tickle is received"
      end

      operation 681602 "setSyncAutomatically"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	  param inout name "sync" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether or not the provider is synced when it receives a network tickle.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.

@param account the account whose setting we are querying
@param authority the provider whose behavior is being controlled
@param sync true if the provider should be synced when tickles are received for it"
      end

      operation 681730 "addPeriodicSync"
	class_operation public explicit_return_type "void"
	nparams 4
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	  param in name "pollFrequency" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Specifies that a sync should be requested with the specified the account, authority,
and extras at the given frequency. If there is already another periodic sync scheduled
with the account, authority and extras then a new periodic sync won't be added, instead
the frequency of the previous one will be updated.
<p>
These periodic syncs honor the \"syncAutomatically\" and \"masterSyncAutomatically\" settings.
Although these sync are scheduled at the specified frequency, it may take longer for it to
actually be started if other syncs are ahead of it in the sync operation queue. This means
that the actual start time may drift.
<p>
Periodic syncs are not allowed to have any of {@link #SYNC_EXTRAS_DO_NOT_RETRY},
{@link #SYNC_EXTRAS_IGNORE_BACKOFF}, {@link #SYNC_EXTRAS_IGNORE_SETTINGS},
{@link #SYNC_EXTRAS_INITIALIZE}, {@link #SYNC_EXTRAS_FORCE},
{@link #SYNC_EXTRAS_EXPEDITED}, {@link #SYNC_EXTRAS_MANUAL} set to true.
If any are supplied then an {@link IllegalArgumentException} will be thrown.
<p>As of API level 19 this function introduces a default flexibility of ~4% (up to a maximum
of one hour in the day) into the requested period. Use
{@link SyncRequest.Builder#syncPeriodic(long, long)} to set this flexibility manually.

<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.

@param account the account to specify in the sync
@param authority the provider to specify in the sync request
@param extras extra parameters to go along with the sync request
@param pollFrequency how frequently the sync should be performed, in seconds.
@throws IllegalArgumentException if an illegal extra was set or if any of the parameters
are null."
      end

      operation 681858 "removePeriodicSync"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a periodic sync. Has no affect if account, authority and extras don't match
an existing periodic sync.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.

@param account the account of the periodic sync to remove
@param authority the provider of the periodic sync to remove
@param extras the extras of the periodic sync to remove"
      end

      operation 681986 "getPeriodicSyncs"
	class_operation public return_type class_ref 199810 // PeriodicSync
	nparams 2
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the list of information about the periodic syncs for the given account and authority.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_SETTINGS}.

@param account the account whose periodic syncs we are querying
@param authority the provider whose periodic syncs we are querying
@return a list of PeriodicSync objects. This list may be empty but will never be null."
      end

      operation 682114 "getIsSyncable"
	class_operation public explicit_return_type "int"
	nparams 2
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if this account/provider is syncable.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_SETTINGS}.
@return >0 if it is syncable, 0 if not, and <0 if the state isn't known yet."
      end

      operation 682242 "setIsSyncable"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	  param in name "syncable" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set whether this account/provider is syncable.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.
@param syncable >0 denotes syncable, 0 means not syncable, <0 means unknown"
      end

      operation 682370 "getMasterSyncAutomatically"
	class_operation public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the master auto-sync setting that applies to all the providers and accounts.
If this is false then the per-provider auto-sync setting is ignored.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_SETTINGS}.

@return the master auto-sync setting that applies to all the providers and accounts"
      end

      operation 682498 "setMasterSyncAutomatically"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "sync" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the master auto-sync setting that applies to all the providers and accounts.
If this is false then the per-provider auto-sync setting is ignored.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#WRITE_SYNC_SETTINGS}.

@param sync the master auto-sync setting that applies to all the providers and accounts"
      end

      operation 682626 "isSyncActive"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is currently a sync operation for the given
account or authority in the pending list, or actively being processed.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_STATS}.
@param account the account whose setting we are querying
@param authority the provider whose behavior is being queried
@return true if a sync is active for the given account or authority."
      end

      operation 682754 "getCurrentSync"
	class_operation public return_type class_ref 199938 // SyncInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "If a sync is active returns the information about it, otherwise returns null.
<p>
This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_STATS}.
<p>
@return the SyncInfo for the currently active sync or null if one is not active.
@deprecated
Since multiple concurrent syncs are now supported you should use
{@link #getCurrentSyncs()} to get the accurate list of current syncs.
This method returns the first item from the list of current syncs
or null if there are none."
      end

      operation 682882 "getCurrentSyncs"
	class_operation public return_type class_ref 199938 // SyncInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}List<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a list with information about all the active syncs. This list will be empty
if there are no active syncs.
<p>
This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_STATS}.
<p>
@return a List of SyncInfo objects for the currently active syncs."
      end

      operation 683010 "getSyncStatus"
	class_operation public return_type class_ref 200066 // SyncStatusInfo
	nparams 2
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the status that matches the authority.
@param account the account whose setting we are querying
@param authority the provider whose behavior is being queried
@return the SyncStatusInfo for the authority, or null if none exists
@hide"
      end

      operation 683138 "isSyncPending"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if the pending status is true of any matching authorities.
<p>This method requires the caller to hold the permission
{@link android.Manifest.permission#READ_SYNC_STATS}.
@param account the account whose setting we are querying
@param authority the provider whose behavior is being queried
@return true if there is a pending sync with the matching account and authority"
      end

      operation 683266 "addStatusChangeListener"
	class_operation public explicit_return_type "Object"
	nparams 2
	  param in name "mask" explicit_type "int"
	  param in name "callback" type class_ref 200194 // SyncStatusObserver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, final ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Request notifications when the different aspects of the SyncManager change. The
different items that can be requested are:
<ul>
<li> {@link #SYNC_OBSERVER_TYPE_PENDING}
<li> {@link #SYNC_OBSERVER_TYPE_ACTIVE}
<li> {@link #SYNC_OBSERVER_TYPE_SETTINGS}
</ul>
The caller can set one or more of the status types in the mask for any
given listener registration.
@param mask the status change types that will cause the callback to be invoked
@param callback observer to be invoked when the status changes
@return a handle that can be used to remove the listener at a later time"
      end

      operation 683394 "removeStatusChangeListener"
	class_operation public explicit_return_type "void"
	nparams 1
	  param inout name "handle" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a previously registered status change listener.
@param handle the handle that was returned by {@link #addStatusChangeListener}"
      end

      operation 683522 "samplePercentForDuration"
	private explicit_return_type "int"
	nparams 1
	  param in name "durationMillis" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns sampling percentage for a given duration.

Always returns at least 1%."
      end

      operation 683650 "maybeLogQueryToEventLog"
	private explicit_return_type "void"
	nparams 5
	  param in name "durationMillis" explicit_type "long"
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 683778 "maybeLogUpdateToEventLog"
	private explicit_return_type "void"
	nparams 4
	  param in name "durationMillis" explicit_type "long"
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "operation" explicit_type "String"
	  param in name "selection" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 200322 "CursorWrapperInner"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 210306 // <generalisation>
	  relation 210306 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 210306 // <generalisation>
	    b parent class_ref 200450 // CrossProcessCursorWrapper
	end

	classrelation 210434 // mContentProvider (<unidirectional association>)
	  relation 210434 --->
	    a role_name "mContentProvider" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 210434 // mContentProvider (<unidirectional association>)
	    b parent class_ref 197506 // IContentProvider
	end

	attribute 437122 "TAG"
	  class_attribute const_attribute public explicit_type "String"
	  init_value "\"CursorWrapperInner\""
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 437250 "mCloseGuard"
	  const_attribute private explicit_type "CloseGuard"
	  init_value " CloseGuard.get()"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 437378 "mProviderReleased"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 683906 "CursorWrapperInner"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "cursor" explicit_type "Cursor"
	    param inout name "icp" type class_ref 197506 // IContentProvider
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 684034 "close"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 684162 "finalize"
	  protected explicit_return_type "void"
	  nparams 0
	  nexceptions 1
	    explicit_exception "Throwable"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      class 200578 "ParcelFileDescriptorInner"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 210562 // <generalisation>
	  relation 210562 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 210562 // <generalisation>
	    b parent class_ref 176898 // ParcelFileDescriptor
	end

	classrelation 210690 // mContentProvider (<unidirectional association>)
	  relation 210690 --->
	    a role_name "mContentProvider" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 210690 // mContentProvider (<unidirectional association>)
	    b parent class_ref 197506 // IContentProvider
	end

	attribute 437506 "mProviderReleased"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 684290 "ParcelFileDescriptorInner"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "pfd" type class_ref 176898 // ParcelFileDescriptor
	    param inout name "icp" type class_ref 197506 // IContentProvider
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 684418 "releaseResources"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      attribute 437634 "CONTENT_SERVICE_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"content\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      operation 684546 "getContentService"
	class_operation public explicit_return_type "IContentService"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 684674 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      attribute 437762 "sContentService"
	class_attribute private explicit_type "IContentService"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 210818 // mContext (<unidirectional association>)
	relation 210818 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 210818 // mContext (<unidirectional association>)
	  b parent class_ref 192770 // Context
      end

      attribute 437890 "mPackageName"
	const_attribute package explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 438018 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ContentResolver\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 194178 "ContentValues"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This class is used to store a set of values that the {@link ContentResolver}
can process."
      classrelation 210946 // <realization>
	relation 210946 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 210946 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 438146 "TAG"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"ContentValues\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 438274 "mValues"
	private explicit_type "String, Object"
	stereotype "HashMap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Holds the actual values "
      end

      operation 685186 "ContentValues"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty set of values using the default initial size"
      end

      operation 685314 "ContentValues"
	public explicit_return_type ""
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty set of values using the given initial size

@param size the initial size of the set of values"
      end

      operation 685442 "ContentValues"
	public explicit_return_type ""
	nparams 1
	  param inout name "from" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a set of values copied from the given set

@param from the values to copy"
      end

      operation 685570 "ContentValues"
	private explicit_return_type ""
	nparams 1
	  param inout name "values" explicit_type "HashMap<String, Object>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a set of values copied from the given HashMap. This is used
by the Parcel unmarshalling code.

@param values the values to start with
{@hide}"
      end

      operation 685698 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "object" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 685826 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 685954 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "value" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 686082 "putAll"
	public explicit_return_type "void"
	nparams 1
	  param inout name "other" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds all values from the passed in ContentValues.

@param other the ContentValues from which to copy"
      end

      operation 686210 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "Byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 686338 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "Short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 686466 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "Integer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 686594 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "Long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 686722 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "Float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 686850 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "Double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 686978 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "Boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 687106 "put"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a value to the set.

@param key the name of the value to put
@param value the data for the value to put"
      end

      operation 687234 "putNull"
	public explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Adds a null value to the set.

@param key the name of the value to make null"
      end

      operation 687362 "size"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the number of values.

@return the number of values"
      end

      operation 687490 "remove"
	public explicit_return_type "void"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a single value.

@param key the name of the value to remove"
      end

      operation 687618 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Removes all values."
      end

      operation 687746 "containsKey"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this object has the named value.

@param key the value to check for
@return {@code true} if the value is present, {@code false} otherwise"
      end

      operation 687874 "get"
	public explicit_return_type "Object"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value. Valid value types are {@link String}, {@link Boolean}, and
{@link Number} implementations.

@param key the value to get
@return the data for the value"
      end

      operation 688002 "getAsString"
	public explicit_return_type "String"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a String.

@param key the value to get
@return the String for the value"
      end

      operation 688130 "getAsLong"
	public explicit_return_type "Long"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Long.

@param key the value to get
@return the Long value, or null if the value is missing or cannot be converted"
      end

      operation 688258 "getAsInteger"
	public explicit_return_type "Integer"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to an Integer.

@param key the value to get
@return the Integer value, or null if the value is missing or cannot be converted"
      end

      operation 688386 "getAsShort"
	public explicit_return_type "Short"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Short.

@param key the value to get
@return the Short value, or null if the value is missing or cannot be converted"
      end

      operation 688514 "getAsByte"
	public explicit_return_type "Byte"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Byte.

@param key the value to get
@return the Byte value, or null if the value is missing or cannot be converted"
      end

      operation 688642 "getAsDouble"
	public explicit_return_type "Double"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Double.

@param key the value to get
@return the Double value, or null if the value is missing or cannot be converted"
      end

      operation 688770 "getAsFloat"
	public explicit_return_type "Float"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Float.

@param key the value to get
@return the Float value, or null if the value is missing or cannot be converted"
      end

      operation 688898 "getAsBoolean"
	public explicit_return_type "Boolean"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value and converts it to a Boolean.

@param key the value to get
@return the Boolean value, or null if the value is missing or cannot be converted"
      end

      operation 689026 "getAsByteArray"
	public explicit_return_type "byte"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets a value that is a byte array. Note that this method will not convert
any other types to byte arrays.

@param key the value to get
@return the byte[] value, or null is the value is missing or not a byte[]"
      end

      operation 689154 "valueSet"
	public explicit_return_type "Set<Map.Entry<String, Object>>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of all of the keys and values

@return a set of all of the keys and values"
      end

      operation 689282 "keySet"
	public explicit_return_type "Set<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a set of all of the keys

@return a set of all of the keys"
      end

      classrelation 211074 // CREATOR (<unidirectional association>)
	relation 211074 --->
	  a role_name "CREATOR" init_value "
            new Parcelable.Creator<ContentValues>() {
        @SuppressWarnings({\"deprecation\", \"unchecked\"})
        public ContentValues createFromParcel(Parcel in) {
            // TODO - what ClassLoader should be passed to readHashMap?
            HashMap<String, Object> values = in.readHashMap(null);
            return new ContentValues(values);
        }

        public ContentValues[] newArray(int size) {
            return new ContentValues[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ContentValues> ${name}${value};
"
	    classrelation_ref 211074 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 689410 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 689538 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"deprecation\")
"
	
	
	
      end

      operation 689666 "putStringArrayList"
	public explicit_return_type "void"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Unsupported, here until we get proper bulk insert APIs.
{@hide}"
      end

      operation 689794 "getStringArrayList"
	public explicit_return_type "ArrayList<String>"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@SuppressWarnings(\"unchecked\")
    @Deprecated
"
	
	
	
	comment "Unsupported, here until we get proper bulk insert APIs.
{@hide}"
      end

      operation 689922 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Returns a string containing a concise, human-readable description of this object.
@return a printable representation of this object."
      end
    end

    class 194434 "AsyncTaskLoader"
      abstract visibility public 
      nformals 1
      formal name "D" type "" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 194562 // Loader
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract Loader that provides an {@link AsyncTask} to do the work.  See
{@link Loader} and {@link android.app.LoaderManager} for more details.

<p>Here is an example implementation of an AsyncTaskLoader subclass that
loads the currently installed applications from the package manager.  This
implementation takes care of retrieving the application labels and sorting
its result set from them, monitoring for changes to the installed
applications, and rebuilding the list when a change in configuration requires
this (such as a locale change).

{@sample development/samples/ApiDemos/src/com/example/android/apis/app/LoaderCustom.java
     loader}

<p>An example implementation of a fragment that uses the above loader to show
the currently installed applications in a list is below.

{@sample development/samples/ApiDemos/src/com/example/android/apis/app/LoaderCustom.java
     fragment}

@param <D> the data type to be loaded."
      classrelation 202882 // <realization>
	relation 202882 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 202882 // <realization>
	  b parent class_ref 194562 // Loader
      end

      attribute 419330 "TAG"
	class_attribute const_attribute package explicit_type "String"
	init_value " \"AsyncTaskLoader\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 419458 "DEBUG"
	class_attribute const_attribute package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 195074 "LoadTask"
	visibility package 
	nactuals 6
	actual class class_ref 167810 // AsyncTask
	  rank 0 explicit_value ""
	actual class class_ref 167810 // AsyncTask
	  rank 1 explicit_value ""
	actual class class_ref 167810 // AsyncTask
	  rank 2 explicit_value ""
	actual class class_ref 167810 // AsyncTask
	  rank 3 explicit_value ""
	actual class class_ref 167810 // AsyncTask
	  rank 4 explicit_value ""
	actual class class_ref 167810 // AsyncTask
	  rank 5 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 203010 // <realization>
	  relation 203010 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 203010 // <realization>
	    b parent class_ref 167810 // AsyncTask
	end

	classrelation 203138 // <realization>
	  relation 203138 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 203138 // <realization>
	    b parent class_ref 167426 // Runnable
	end

	attribute 419586 "mDone"
	  const_attribute private explicit_type "CountDownLatch"
	  init_value " new CountDownLatch(1)"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 419714 "waiting"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Set to true to indicate that the task has been posted to a handler for
 execution at a later time.  Used to throttle updates."
	end

	operation 631554 "doInBackground"
	  protected explicit_return_type "D"
	  nparams 1
	    param inout name "" explicit_type "Void...params"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Runs on a worker thread "
	end

	operation 631682 "onPostExecute"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "data" explicit_type "D"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Runs on the UI thread "
	end

	operation 631810 "onCancelled"
	  protected explicit_return_type "void"
	  nparams 1
	    param inout name "data" explicit_type "D"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Runs on the UI thread "
	end

	operation 631938 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	  comment " Runs on the UI thread, when the waiting task is posted to a handler.
This method is only executed when task execution was deferred (waiting was true). "
	end

	operation 632066 "waitForLoader"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Used for testing purposes to wait for the task to complete. "
	end
      end

      attribute 419842 "mExecutor"
	const_attribute private explicit_type "Executor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 203266 // mTask (<unidirectional association>)
	relation 203266 --->
	  a role_name "mTask" volatile package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 203266 // mTask (<unidirectional association>)
	  b parent class_ref 195074 // LoadTask
      end

      classrelation 203394 // mCancellingTask (<unidirectional association>)
	relation 203394 --->
	  a role_name "mCancellingTask" volatile package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 203394 // mCancellingTask (<unidirectional association>)
	  b parent class_ref 195074 // LoadTask
      end

      attribute 419970 "mUpdateThrottle"
	package explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 420098 "mLastLoadCompleteTime"
	package explicit_type "long"
	init_value " -10000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 203522 // mHandler (<unidirectional association>)
	relation 203522 --->
	  a role_name "mHandler" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 203522 // mHandler (<unidirectional association>)
	  b parent class_ref 168578 // Handler
      end

      operation 632194 "AsyncTaskLoader"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 192770 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 632322 "AsyncTaskLoader"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "executor" explicit_type "Executor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 632450 "setUpdateThrottle"
	public explicit_return_type "void"
	nparams 1
	  param in name "delayMS" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set amount to throttle updates by.  This is the minimum time from
when the last {@link #loadInBackground()} call has completed until
a new load is scheduled.

@param delayMS Amount of delay, in milliseconds."
      end

      operation 632578 "onForceLoad"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 632706 "onCancelLoad"
	protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 632834 "onCanceled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called if the task was canceled before it was completed.  Gives the class a chance
to clean up post-cancellation and to properly dispose of the result.

@param data The value that was returned by {@link #loadInBackground}, or null
if the task threw {@link OperationCanceledException}."
      end

      operation 632962 "executePendingTask"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 633090 "dispatchOnCancelled"
	package explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 195074 // LoadTask
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 633218 "dispatchOnLoadComplete"
	package explicit_return_type "void"
	nparams 2
	  param inout name "task" type class_ref 195074 // LoadTask
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 633346 "loadInBackground"
	abstract public explicit_return_type "D"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called on a worker thread to perform the actual load and to return
the result of the load operation.

Implementations should not deliver the result directly, but should return them
from this method, which will eventually end up calling {@link #deliverResult} on
the UI thread.  If implementations need to process the results on the UI thread
they may override {@link #deliverResult} and do so there.

To support cancellation, this method should periodically check the value of
{@link #isLoadInBackgroundCanceled} and terminate when it returns true.
Subclasses may also override {@link #cancelLoadInBackground} to interrupt the load
directly instead of polling {@link #isLoadInBackgroundCanceled}.

When the load is canceled, this method may either return normally or throw
{@link OperationCanceledException}.  In either case, the {@link Loader} will
call {@link #onCanceled} to perform post-cancellation cleanup and to dispose of the
result object, if any.

@return The result of the load operation.

@throws OperationCanceledException if the load is canceled during execution.

@see #isLoadInBackgroundCanceled
@see #cancelLoadInBackground
@see #onCanceled"
      end

      operation 633474 "onLoadInBackground"
	protected explicit_return_type "D"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Calls {@link #loadInBackground()}.

This method is reserved for use by the loader framework.
Subclasses should override {@link #loadInBackground} instead of this method.

@return The result of the load operation.

@throws OperationCanceledException if the load is canceled during execution.

@see #loadInBackground"
      end

      operation 633602 "cancelLoadInBackground"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called on the main thread to abort a load in progress.

Override this method to abort the current invocation of {@link #loadInBackground}
that is running in the background on a worker thread.

This method should do nothing if {@link #loadInBackground} has not started
running or if it has already finished.

@see #loadInBackground"
      end

      operation 633730 "isLoadInBackgroundCanceled"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the current invocation of {@link #loadInBackground} is being canceled.

@return True if the current invocation of {@link #loadInBackground} is being canceled.

@see #loadInBackground"
      end

      operation 633858 "waitForLoader"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Locks the current thread until the loader completes the current load
operation. Returns immediately if there is no load operation running.
Should not be called from the UI thread: calling it from the UI
thread would cause a deadlock.
<p>
Use for testing only.  <b>Never</b> call this from a UI thread.

@hide"
      end

      operation 633986 "dump"
	public explicit_return_type "void"
	nparams 4
	  param in name "prefix" explicit_type "String"
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 194562 "Loader"
      visibility public 
      nformals 1
      formal name "D" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An abstract class that performs asynchronous loading of data. While Loaders are active
they should monitor the source of their data and deliver new results when the contents
change.  See {@link android.app.LoaderManager} for more detail.

<p><b>Note on threading:</b> Clients of loaders should as a rule perform
any calls on to a Loader from the main thread of their process (that is,
the thread the Activity callbacks and other things occur on).  Subclasses
of Loader (such as {@link AsyncTaskLoader}) will often perform their work
in a separate thread, but when delivering their results this too should
be done on the main thread.</p>

<p>Subclasses generally must implement at least {@link #onStartLoading()},
{@link #onStopLoading()}, {@link #onForceLoad()}, and {@link #onReset()}.</p>

<p>Most implementations should not derive directly from this class, but
instead inherit from {@link AsyncTaskLoader}.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using loaders, read the
<a href=\"{@docRoot}guide/topics/fundamentals/loaders.html\">Loaders</a> developer guide.</p>
</div>

@param <D> The result returned when the load is complete"
      attribute 418562 "mId"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 194690 "OnLoadCompleteListener"
	visibility public stereotype "interface"
	nformals 1
	formal name "D" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 627330 "onLoadComplete"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "loader" type class_ref 194562 // Loader
	    param inout name "data" explicit_type "D"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the thread that created the Loader when the load is complete.

@param loader the loader that completed the load
@param data the result of the load"
	end
      end

      classrelation 202370 // mListener (<unidirectional association>)
	relation 202370 --->
	  a role_name "mListener" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<D> ${name}${value};
"
	    classrelation_ref 202370 // mListener (<unidirectional association>)
	  b parent class_ref 194690 // OnLoadCompleteListener
      end

      class 194818 "OnLoadCanceledListener"
	visibility public stereotype "interface"
	nformals 1
	formal name "D" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 627458 "onLoadCanceled"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "loader" type class_ref 194562 // Loader
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called on the thread that created the Loader when the load is canceled.

@param loader the loader that canceled the load"
	end
      end

      classrelation 202498 // mOnLoadCanceledListener (<unidirectional association>)
	relation 202498 --->
	  a role_name "mOnLoadCanceledListener" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<D> ${name}${value};
"
	    classrelation_ref 202498 // mOnLoadCanceledListener (<unidirectional association>)
	  b parent class_ref 194818 // OnLoadCanceledListener
      end

      classrelation 202626 // mContext (<unidirectional association>)
	relation 202626 --->
	  a role_name "mContext" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 202626 // mContext (<unidirectional association>)
	  b parent class_ref 192770 // Context
      end

      attribute 418690 "mStarted"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 418818 "mAbandoned"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 418946 "mReset"
	package explicit_type "boolean"
	init_value " true"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 419074 "mContentChanged"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 419202 "mProcessingChange"
	package explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 194946 "ForceLoadContentObserver"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 202754 // <generalisation>
	  relation 202754 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 202754 // <generalisation>
	    b parent class_ref 138626 // ContentObserver
	end

	operation 626946 "ForceLoadContentObserver"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 627074 "deliverSelfNotifications"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 627202 "onChange"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "selfChange" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 627586 "Loader"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 192770 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Stores away the application context associated with context.
Since Loaders can be used across multiple activities it's dangerous to
store the context directly; always use {@link #getContext()} to retrieve
the Loader's Context, don't use the constructor argument directly.
The Context returned by {@link #getContext} is safe to use across
Activity instances.

@param context used to retrieve the application context."
      end

      operation 627714 "deliverResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sends the result of the load to the registered listener. Should only be called by subclasses.

Must be called from the process's main thread.

@param data the result of the load"
      end

      operation 627842 "deliverCancellation"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Informs the registered {@link OnLoadCanceledListener} that the load has been canceled.
Should only be called by subclasses.

Must be called from the process's main thread."
      end

      operation 627970 "getContext"
	public return_type class_ref 192770 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return an application context retrieved from the Context passed to the constructor."
      end

      operation 628098 "getId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the ID of this loader"
      end

      operation 628226 "registerListener"
	public explicit_return_type "void"
	nparams 2
	  param in name "id" explicit_type "int"
	  param inout name "listener" type class_ref 194690 // OnLoadCompleteListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}<D> ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a class that will receive callbacks when a load is complete.
The callback will be called on the process's main thread so it's safe to
pass the results to widgets.

<p>Must be called from the process's main thread."
      end

      operation 628354 "unregisterListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 194690 // OnLoadCompleteListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a listener that was previously added with {@link #registerListener}.

Must be called from the process's main thread."
      end

      operation 628482 "registerOnLoadCanceledListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 194818 // OnLoadCanceledListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a listener that will receive callbacks when a load is canceled.
The callback will be called on the process's main thread so it's safe to
pass the results to widgets.

Must be called from the process's main thread.

@param listener The listener to register."
      end

      operation 628610 "unregisterOnLoadCanceledListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 194818 // OnLoadCanceledListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<D> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a listener that was previously added with
{@link #registerOnLoadCanceledListener}.

Must be called from the process's main thread.

@param listener The listener to unregister."
      end

      operation 628738 "isStarted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this load has been started.  That is, its {@link #startLoading()}
has been called and no calls to {@link #stopLoading()} or
{@link #reset()} have yet been made."
      end

      operation 628866 "isAbandoned"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this loader has been abandoned.  In this state, the
loader <em>must not</em> report any new data, and <em>must</em> keep
its last reported data valid until it is finally reset."
      end

      operation 628994 "isReset"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return whether this load has been reset.  That is, either the loader
has not yet been started for the first time, or its {@link #reset()}
has been called."
      end

      operation 629122 "startLoading"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function will normally be called for you automatically by
{@link android.app.LoaderManager} when the associated fragment/activity
is being started.  When using a Loader with {@link android.app.LoaderManager},
you <em>must not</em> call this method yourself, or you will conflict
with its management of the Loader.

Starts an asynchronous load of the Loader's data. When the result
is ready the callbacks will be called on the process's main thread.
If a previous load has been completed and is still valid
the result may be passed to the callbacks immediately.
The loader will monitor the source of
the data set and may deliver future callbacks if the source changes.
Calling {@link #stopLoading} will stop the delivery of callbacks.

<p>This updates the Loader's internal state so that
{@link #isStarted()} and {@link #isReset()} will return the correct
values, and then calls the implementation's {@link #onStartLoading()}.

<p>Must be called from the process's main thread."
      end

      operation 629250 "onStartLoading"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of loading their data,
as per {@link #startLoading()}.  This is not called by clients directly,
but as a result of a call to {@link #startLoading()}."
      end

      operation 629378 "cancelLoad"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to cancel the current load task.
Must be called on the main thread of the process.

<p>Cancellation is not an immediate operation, since the load is performed
in a background thread.  If there is currently a load in progress, this
method requests that the load be canceled, and notes this is the case;
once the background thread has completed its work its remaining state
will be cleared.  If another load request comes in during this time,
it will be held until the canceled load is complete.

@return Returns <tt>false</tt> if the task could not be canceled,
typically because it has already completed normally, or
because {@link #startLoading()} hasn't been called; returns
<tt>true</tt> otherwise.  When <tt>true</tt> is returned, the task
is still running and the {@link OnLoadCanceledListener} will be called
when the task completes."
      end

      operation 629506 "onCancelLoad"
	protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of requests to {@link #cancelLoad()}.
This will always be called from the process's main thread.

@return Returns <tt>false</tt> if the task could not be canceled,
typically because it has already completed normally, or
because {@link #startLoading()} hasn't been called; returns
<tt>true</tt> otherwise.  When <tt>true</tt> is returned, the task
is still running and the {@link OnLoadCanceledListener} will be called
when the task completes."
      end

      operation 629634 "forceLoad"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Force an asynchronous load. Unlike {@link #startLoading()} this will ignore a previously
loaded data set and load a new one.  This simply calls through to the
implementation's {@link #onForceLoad()}.  You generally should only call this
when the loader is started -- that is, {@link #isStarted()} returns true.

<p>Must be called from the process's main thread."
      end

      operation 629762 "onForceLoad"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of requests to {@link #forceLoad()}.
This will always be called from the process's main thread."
      end

      operation 629890 "stopLoading"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function will normally be called for you automatically by
{@link android.app.LoaderManager} when the associated fragment/activity
is being stopped.  When using a Loader with {@link android.app.LoaderManager},
you <em>must not</em> call this method yourself, or you will conflict
with its management of the Loader.

<p>Stops delivery of updates until the next time {@link #startLoading()} is called.
Implementations should <em>not</em> invalidate their data at this point --
clients are still free to use the last data the loader reported.  They will,
however, typically stop reporting new data if the data changes; they can
still monitor for changes, but must not report them to the client until and
if {@link #startLoading()} is later called.

<p>This updates the Loader's internal state so that
{@link #isStarted()} will return the correct
value, and then calls the implementation's {@link #onStopLoading()}.

<p>Must be called from the process's main thread."
      end

      operation 630018 "onStopLoading"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of stopping their loader,
as per {@link #stopLoading()}.  This is not called by clients directly,
but as a result of a call to {@link #stopLoading()}.
This will always be called from the process's main thread."
      end

      operation 630146 "abandon"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function will normally be called for you automatically by
{@link android.app.LoaderManager} when restarting a Loader.  When using
a Loader with {@link android.app.LoaderManager},
you <em>must not</em> call this method yourself, or you will conflict
with its management of the Loader.

Tell the Loader that it is being abandoned.  This is called prior
to {@link #reset} to have it retain its current data but not report
any new data."
      end

      operation 630274 "onAbandon"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses implement this to take care of being abandoned.  This is
an optional intermediate state prior to {@link #onReset()} -- it means that
the client is no longer interested in any new data from the loader,
so the loader must not report any further updates.  However, the
loader <em>must</em> keep its last reported data valid until the final
{@link #onReset()} happens.  You can retrieve the current abandoned
state with {@link #isAbandoned}."
      end

      operation 630402 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This function will normally be called for you automatically by
{@link android.app.LoaderManager} when destroying a Loader.  When using
a Loader with {@link android.app.LoaderManager},
you <em>must not</em> call this method yourself, or you will conflict
with its management of the Loader.

Resets the state of the Loader.  The Loader should at this point free
all of its resources, since it may never be called again; however, its
{@link #startLoading()} may later be called at which point it must be
able to start running again.

<p>This updates the Loader's internal state so that
{@link #isStarted()} and {@link #isReset()} will return the correct
values, and then calls the implementation's {@link #onReset()}.

<p>Must be called from the process's main thread."
      end

      operation 630530 "onReset"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Subclasses must implement this to take care of resetting their loader,
as per {@link #reset()}.  This is not called by clients directly,
but as a result of a call to {@link #reset()}.
This will always be called from the process's main thread."
      end

      operation 630658 "takeContentChanged"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Take the current flag indicating whether the loader's content had
changed while it was stopped.  If it had, true is returned and the
flag is cleared."
      end

      operation 630786 "commitContentChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Commit that you have actually fully processed a content change that
was returned by {@link #takeContentChanged}.  This is for use with
{@link #rollbackContentChanged()} to handle situations where a load
is cancelled.  Call this when you have completely processed a load
without it being cancelled."
      end

      operation 630914 "rollbackContentChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Report that you have abandoned the processing of a content change that
was returned by {@link #takeContentChanged()} and would like to rollback
to the state where there is again a pending content change.  This is
to handle the case where a data load due to a content change has been
canceled before its data was delivered back to the loader."
      end

      operation 631042 "onContentChanged"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when {@link ForceLoadContentObserver} detects a change.  The
default implementation checks to see if the loader is currently started;
if so, it simply calls {@link #forceLoad()}; otherwise, it sets a flag
so that {@link #takeContentChanged()} returns true.

<p>Must be called from the process's main thread."
      end

      operation 631170 "dataToString"
	public explicit_return_type "String"
	nparams 1
	  param inout name "data" explicit_type "D"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For debugging, converts an instance of the Loader's data class to
a string that can be printed.  Must handle a null data."
      end

      operation 631298 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 631426 "dump"
	public explicit_return_type "void"
	nparams 4
	  param in name "prefix" explicit_type "String"
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the Loader's state into the given stream.

@param prefix Text to print at the front of each line.
@param fd The raw file descriptor that the dump is being sent to.
@param writer A PrintWriter to which the dump is to be set.
@param args Additional arguments to the dump request."
      end
    end

    class 195202 "BroadcastReceiver"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Base class for code that will receive intents sent by sendBroadcast().

<p>If you don't need to send broadcasts across applications, consider using
this class with {@link android.support.v4.content.LocalBroadcastManager} instead
of the more general facilities described below.  This will give you a much
more efficient implementation (no cross-process communication needed) and allow
you to avoid thinking about any security issues related to other applications
being able to receive or send your broadcasts.

<p>You can either dynamically register an instance of this class with
{@link Context#registerReceiver Context.registerReceiver()}
or statically publish an implementation through the
{@link android.R.styleable#AndroidManifestReceiver &lt;receiver&gt;}
tag in your <code>AndroidManifest.xml</code>.

<p><em><strong>Note:</strong></em>
&nbsp;&nbsp;&nbsp;If registering a receiver in your
{@link android.app.Activity#onResume() Activity.onResume()}
implementation, you should unregister it in 
{@link android.app.Activity#onPause() Activity.onPause()}.
(You won't receive intents when paused, 
and this will cut down on unnecessary system overhead). Do not unregister in 
{@link android.app.Activity#onSaveInstanceState(android.os.Bundle) Activity.onSaveInstanceState()},
because this won't be called if the user moves back in the history
stack.

<p>There are two major classes of broadcasts that can be received:</p>
<ul>
<li> <b>Normal broadcasts</b> (sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}) are completely asynchronous.  All receivers of the
broadcast are run in an undefined order, often at the same time.  This is
more efficient, but means that receivers cannot use the result or abort
APIs included here.
<li> <b>Ordered broadcasts</b> (sent with {@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}) are delivered to one receiver at a time.
As each receiver executes in turn, it can propagate a result to the next
receiver, or it can completely abort the broadcast so that it won't be passed
to other receivers.  The order receivers run in can be controlled with the
{@link android.R.styleable#AndroidManifestIntentFilter_priority
android:priority} attribute of the matching intent-filter; receivers with
the same priority will be run in an arbitrary order.
</ul>

<p>Even in the case of normal broadcasts, the system may in some
situations revert to delivering the broadcast one receiver at a time.  In
particular, for receivers that may require the creation of a process, only
one will be run at a time to avoid overloading the system with new processes.
In this situation, however, the non-ordered semantics hold: these receivers still
cannot return results or abort their broadcast.</p>

<p>Note that, although the Intent class is used for sending and receiving
these broadcasts, the Intent broadcast mechanism here is completely separate
from Intents that are used to start Activities with
{@link Context#startActivity Context.startActivity()}.
There is no way for a BroadcastReceiver
to see or capture Intents used with startActivity(); likewise, when
you broadcast an Intent, you will never find or start an Activity.
These two operations are semantically very different: starting an
Activity with an Intent is a foreground operation that modifies what the
user is currently interacting with; broadcasting an Intent is a background
operation that the user is not normally aware of.

<p>The BroadcastReceiver class (when launched as a component through
a manifest's {@link android.R.styleable#AndroidManifestReceiver &lt;receiver&gt;}
tag) is an important part of an
<a href=\"{@docRoot}guide/topics/fundamentals.html#lcycles\">application's overall lifecycle</a>.</p>

<p>Topics covered here:
<ol>
<li><a href=\"#Security\">Security</a>
<li><a href=\"#ReceiverLifecycle\">Receiver Lifecycle</a>
<li><a href=\"#ProcessLifecycle\">Process Lifecycle</a>
</ol>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For information about how to use this class to receive and resolve intents, read the
<a href=\"{@docRoot}guide/topics/intents/intents-filters.html\">Intents and Intent Filters</a>
developer guide.</p>
</div>

<a name=\"Security\"></a>
<h3>Security</h3>

<p>Receivers used with the {@link Context} APIs are by their nature a
cross-application facility, so you must consider how other applications
may be able to abuse your use of them.  Some things to consider are:

<ul>
<li><p>The Intent namespace is global.  Make sure that Intent action names and
other strings are written in a namespace you own, or else you may inadvertently
conflict with other applications.
<li><p>When you use {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)},
<em>any</em> application may send broadcasts to that registered receiver.  You can
control who can send broadcasts to it through permissions described below.
<li><p>When you publish a receiver in your application's manifest and specify
intent-filters for it, any other application can send broadcasts to it regardless
of the filters you specify.  To prevent others from sending to it, make it
unavailable to them with <code>android:exported=\"false\"</code>.
<li><p>When you use {@link Context#sendBroadcast(Intent)} or related methods,
normally any other application can receive these broadcasts.  You can control who
can receive such broadcasts through permissions described below.  Alternatively,
starting with {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}, you
can also safely restrict the broadcast to a single application with
{@link Intent#setPackage(String) Intent.setPackage}
</ul>

<p>None of these issues exist when using
{@link android.support.v4.content.LocalBroadcastManager}, since intents
broadcast it never go outside of the current process.

<p>Access permissions can be enforced by either the sender or receiver
of a broadcast.

<p>To enforce a permission when sending, you supply a non-null
<var>permission</var> argument to
{@link Context#sendBroadcast(Intent, String)} or
{@link Context#sendOrderedBroadcast(Intent, String, BroadcastReceiver, android.os.Handler, int, String, Bundle)}.
Only receivers who have been granted this permission
(by requesting it with the
{@link android.R.styleable#AndroidManifestUsesPermission &lt;uses-permission&gt;}
tag in their <code>AndroidManifest.xml</code>) will be able to receive
the broadcast.

<p>To enforce a permission when receiving, you supply a non-null
<var>permission</var> when registering your receiver -- either when calling
{@link Context#registerReceiver(BroadcastReceiver, IntentFilter, String, android.os.Handler)}
or in the static
{@link android.R.styleable#AndroidManifestReceiver &lt;receiver&gt;}
tag in your <code>AndroidManifest.xml</code>.  Only broadcasters who have
been granted this permission (by requesting it with the
{@link android.R.styleable#AndroidManifestUsesPermission &lt;uses-permission&gt;}
tag in their <code>AndroidManifest.xml</code>) will be able to send an
Intent to the receiver.

<p>See the <a href=\"{@docRoot}guide/topics/security/security.html\">Security and Permissions</a>
document for more information on permissions and security in general.

<a name=\"ReceiverLifecycle\"></a>
<h3>Receiver Lifecycle</h3>

<p>A BroadcastReceiver object is only valid for the duration of the call
to {@link #onReceive}.  Once your code returns from this function,
the system considers the object to be finished and no longer active.

<p>This has important repercussions to what you can do in an
{@link #onReceive} implementation: anything that requires asynchronous
operation is not available, because you will need to return from the
function to handle the asynchronous operation, but at that point the
BroadcastReceiver is no longer active and thus the system is free to kill
its process before the asynchronous operation completes.

<p>In particular, you may <i>not</i> show a dialog or bind to a service from
within a BroadcastReceiver.  For the former, you should instead use the
{@link android.app.NotificationManager} API.  For the latter, you can
use {@link android.content.Context#startService Context.startService()} to
send a command to the service.

<a name=\"ProcessLifecycle\"></a>
<h3>Process Lifecycle</h3>

<p>A process that is currently executing a BroadcastReceiver (that is,
currently running the code in its {@link #onReceive} method) is
considered to be a foreground process and will be kept running by the
system except under cases of extreme memory pressure.

<p>Once you return from onReceive(), the BroadcastReceiver is no longer
active, and its hosting process is only as important as any other application
components that are running in it.  This is especially important because if
that process was only hosting the BroadcastReceiver (a common case for
applications that the user has never or not recently interacted with), then
upon returning from onReceive() the system will consider its process
to be empty and aggressively kill it so that resources are available for other
more important processes.

<p>This means that for longer-running operations you will often use
a {@link android.app.Service} in conjunction with a BroadcastReceiver to keep
the containing process active for the entire time of your operation."
      class 195330 "PendingResult"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 420354 "TYPE_COMPONENT"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 420482 "TYPE_REGISTERED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 420610 "TYPE_UNREGISTERED"
	  class_attribute const_attribute public explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " @hide "
	end

	attribute 420738 "mType"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 420866 "mOrderedHint"
	  const_attribute package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 420994 "mInitialStickyHint"
	  const_attribute package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 203778 // mToken (<unidirectional association>)
	  relation 203778 --->
	    a role_name "mToken" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 203778 // mToken (<unidirectional association>)
	    b parent class_ref 172674 // IBinder
	end

	attribute 421122 "mSendingUser"
	  const_attribute package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 421250 "mResultCode"
	  package explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 421378 "mResultData"
	  package explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 203906 // mResultExtras (<unidirectional association>)
	  relation 203906 --->
	    a role_name "mResultExtras" package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 203906 // mResultExtras (<unidirectional association>)
	    b parent class_ref 174082 // Bundle
	end

	attribute 421506 "mAbortBroadcast"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 421634 "mFinished"
	  package explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 634114 "PendingResult"
	  public explicit_return_type ""
	  nparams 8
	    param in name "resultCode" explicit_type "int"
	    param in name "resultData" explicit_type "String"
	    param inout name "resultExtras" type class_ref 174082 // Bundle
	    param in name "type" explicit_type "int"
	    param inout name "ordered" explicit_type "boolean"
	    param inout name "sticky" explicit_type "boolean"
	    param inout name "token" type class_ref 172674 // IBinder
	    param in name "userId" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 634242 "setResultCode"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "code" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#setResultCode(int)
BroadcastReceiver.setResultCode(int)} for
asynchronous broadcast handling."
	end

	operation 634370 "getResultCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#getResultCode()
BroadcastReceiver.getResultCode()} for
asynchronous broadcast handling."
	end

	operation 634498 "setResultData"
	  public explicit_return_type "void"
	  nparams 1
	    param in name "data" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#setResultData(String)
BroadcastReceiver.setResultData(String)} for
asynchronous broadcast handling."
	end

	operation 634626 "getResultData"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#getResultData()
BroadcastReceiver.getResultData()} for
asynchronous broadcast handling."
	end

	operation 634754 "setResultExtras"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "extras" type class_ref 174082 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#setResultExtras(Bundle)
BroadcastReceiver.setResultExtras(Bundle)} for
asynchronous broadcast handling."
	end

	operation 634882 "getResultExtras"
	  public return_type class_ref 174082 // Bundle
	  nparams 1
	    param inout name "makeMap" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#getResultExtras(boolean)
BroadcastReceiver.getResultExtras(boolean)} for
asynchronous broadcast handling."
	end

	operation 635010 "setResult"
	  public explicit_return_type "void"
	  nparams 3
	    param in name "code" explicit_type "int"
	    param in name "data" explicit_type "String"
	    param inout name "extras" type class_ref 174082 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#setResult(int, String, Bundle)
BroadcastReceiver.setResult(int, String, Bundle)} for
asynchronous broadcast handling."
	end

	operation 635138 "getAbortBroadcast"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#getAbortBroadcast()
BroadcastReceiver.getAbortBroadcast()} for
asynchronous broadcast handling."
	end

	operation 635266 "abortBroadcast"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#abortBroadcast()
BroadcastReceiver.abortBroadcast()} for
asynchronous broadcast handling."
	end

	operation 635394 "clearAbortBroadcast"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Version of {@link BroadcastReceiver#clearAbortBroadcast()
BroadcastReceiver.clearAbortBroadcast()} for
asynchronous broadcast handling."
	end

	operation 635522 "finish"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Finish the broadcast.  The current result will be sent and the
next broadcast will proceed."
	end

	operation 635650 "setExtrasClassLoader"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "cl" explicit_type "ClassLoader"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 635778 "sendFinished"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "am" explicit_type "IActivityManager"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 635906 "getSendingUserId"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end

	operation 636034 "checkSynchronousHint"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 203650 // mPendingResult (<unidirectional association>)
	relation 203650 --->
	  a role_name "mPendingResult" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 203650 // mPendingResult (<unidirectional association>)
	  b parent class_ref 195330 // PendingResult
      end

      attribute 420226 "mDebugUnregister"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 636162 "BroadcastReceiver"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 636290 "onReceive"
	abstract public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This method is called when the BroadcastReceiver is receiving an Intent
broadcast.  During this time you can use the other methods on
BroadcastReceiver to view/modify the current result values.  This method
is always called within the main thread of its process, unless you
explicitly asked for it to be scheduled on a different thread using
{@link android.content.Context#registerReceiver(BroadcastReceiver,
IntentFilter, String, android.os.Handler)}. When it runs on the main
thread you should
never perform long-running operations in it (there is a timeout of
10 seconds that the system allows before considering the receiver to
be blocked and a candidate to be killed). You cannot launch a popup dialog
in your implementation of onReceive().

<p><b>If this BroadcastReceiver was launched through a &lt;receiver&gt; tag,
then the object is no longer alive after returning from this
function.</b>  This means you should not perform any operations that
return a result to you asynchronously -- in particular, for interacting
with services, you should use
{@link Context#startService(Intent)} instead of
{@link Context#bindService(Intent, ServiceConnection, int)}.  If you wish
to interact with a service that is already running, you can use
{@link #peekService}.

<p>The Intent filters used in {@link android.content.Context#registerReceiver}
and in application manifests are <em>not</em> guaranteed to be exclusive. They
are hints to the operating system about how to find suitable recipients. It is
possible for senders to force delivery to specific recipients, bypassing filter
resolution.  For this reason, {@link #onReceive(Context, Intent) onReceive()}
implementations should respond only to known actions, ignoring any unexpected
Intents that they may receive.

@param context The Context in which the receiver is running.
@param intent The Intent being received."
      end

      operation 636418 "goAsync"
	public return_type class_ref 195330 // PendingResult
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This can be called by an application in {@link #onReceive} to allow
it to keep the broadcast active after returning from that function.
This does <em>not</em> change the expectation of being relatively
responsive to the broadcast (finishing it within 10s), but does allow
the implementation to move work related to it over to another thread
to avoid glitching the main UI thread due to disk IO.

@return Returns a {@link PendingResult} representing the result of
the active broadcast.  The BroadcastRecord itself is no longer active;
all data and other interaction must go through {@link PendingResult}
APIs.  The {@link PendingResult#finish PendingResult.finish()} method
must be called once processing of the broadcast is done."
      end

      operation 636546 "peekService"
	public return_type class_ref 172674 // IBinder
	nparams 2
	  param inout name "myContext" type class_ref 192770 // Context
	  param inout name "service" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Provide a binder to an already-running service.  This method is synchronous
and will not start the target service if it is not present, so it is safe
to call from {@link #onReceive}.

@param myContext The Context that had been passed to {@link #onReceive(Context, Intent)}
@param service The Intent indicating the service you wish to use.  See {@link
Context#startService(Intent)} for more information."
      end

      operation 636674 "setResultCode"
	public explicit_return_type "void"
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the current result code of this broadcast; only works with
broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  Often uses the
Activity {@link android.app.Activity#RESULT_CANCELED} and
{@link android.app.Activity#RESULT_OK} constants, though the
actual meaning of this value is ultimately up to the broadcaster.

<p class=\"note\">This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</p>

@param code The new result code.

@see #setResult(int, String, Bundle)"
      end

      operation 636802 "getResultCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the current result code, as set by the previous receiver.

@return int The current result code."
      end

      operation 636930 "setResultData"
	public explicit_return_type "void"
	nparams 1
	  param in name "data" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the current result data of this broadcast; only works with
broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  This is an arbitrary
string whose interpretation is up to the broadcaster.

<p><strong>This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</strong></p>

@param data The new result data; may be null.

@see #setResult(int, String, Bundle)"
      end

      operation 637058 "getResultData"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the current result data, as set by the previous receiver.
Often this is null.

@return String The current result data; may be null."
      end

      operation 637186 "setResultExtras"
	public explicit_return_type "void"
	nparams 1
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the current result extras of this broadcast; only works with
broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  This is a Bundle
holding arbitrary data, whose interpretation is up to the
broadcaster.  Can be set to null.  Calling this method completely
replaces the current map (if any).

<p><strong>This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</strong></p>

@param extras The new extra data map; may be null.

@see #setResult(int, String, Bundle)"
      end

      operation 637314 "getResultExtras"
	public return_type class_ref 174082 // Bundle
	nparams 1
	  param inout name "makeMap" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the current result extra data, as set by the previous receiver.
Any changes you make to the returned Map will be propagated to the next
receiver.

@param makeMap If true then a new empty Map will be made for you if the
               current Map is null; if false you should be prepared to
               receive a null Map.

@return Map The current extras map."
      end

      operation 637442 "setResult"
	public explicit_return_type "void"
	nparams 3
	  param in name "code" explicit_type "int"
	  param in name "data" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change all of the result data returned from this broadcasts; only works
with broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  All current result data is replaced
by the value given to this method.

<p><strong>This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</strong></p>

@param code The new result code.  Often uses the
Activity {@link android.app.Activity#RESULT_CANCELED} and
{@link android.app.Activity#RESULT_OK} constants, though the
actual meaning of this value is ultimately up to the broadcaster.
@param data The new result data.  This is an arbitrary
string whose interpretation is up to the broadcaster; may be null.
@param extras The new extra data map.  This is a Bundle
holding arbitrary data, whose interpretation is up to the
broadcaster.  Can be set to null.  This completely
replaces the current map (if any)."
      end

      operation 637570 "getAbortBroadcast"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the flag indicating whether or not this receiver should
abort the current broadcast.

@return True if the broadcast should be aborted."
      end

      operation 637698 "abortBroadcast"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the flag indicating that this receiver should abort the
current broadcast; only works with broadcasts sent through
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast}.  This will prevent
any other broadcast receivers from receiving the broadcast. It will still
call {@link #onReceive} of the BroadcastReceiver that the caller of 
{@link Context#sendOrderedBroadcast(Intent, String)
Context.sendOrderedBroadcast} passed in.

<p><strong>This method does not work with non-ordered broadcasts such
as those sent with {@link Context#sendBroadcast(Intent)
Context.sendBroadcast}</strong></p>"
      end

      operation 637826 "clearAbortBroadcast"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Clears the flag indicating that this receiver should abort the current
broadcast."
      end

      operation 637954 "isOrderedBroadcast"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the receiver is currently processing an ordered
broadcast."
      end

      operation 638082 "isInitialStickyBroadcast"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the receiver is currently processing the initial
value of a sticky broadcast -- that is, the value that was last
broadcast and is currently held in the sticky cache, so this is
not directly the result of a broadcast right now."
      end

      operation 638210 "setOrderedHint"
	public explicit_return_type "void"
	nparams 1
	  param inout name "isOrdered" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For internal use, sets the hint about whether this BroadcastReceiver is
running in ordered mode."
      end

      operation 638338 "setPendingResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "result" type class_ref 195330 // PendingResult
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For internal use to set the result data that is active. @hide"
      end

      operation 638466 "getPendingResult"
	public return_type class_ref 195330 // PendingResult
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For internal use to set the result data that is active. @hide"
      end

      operation 638594 "getSendingUserId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 638722 "setDebugUnregister"
	public explicit_return_type "void"
	nparams 1
	  param inout name "debug" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Control inclusion of debugging help for mismatched
calls to {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
Context.registerReceiver()}.
If called with true, before given to registerReceiver(), then the
callstack of the following {@link Context#unregisterReceiver(BroadcastReceiver)
Context.unregisterReceiver()} call is retained, to be printed if a later
incorrect unregister call is made.  Note that doing this requires retaining
information about the BroadcastReceiver for the lifetime of the app,
resulting in a leak -- this should only be used for debugging."
      end

      operation 638850 "getDebugUnregister"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the last value given to {@link #setDebugUnregister}."
      end

      operation 638978 "checkSynchronousHint"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 195458 "Intent"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "An intent is an abstract description of an operation to be performed.  It
can be used with {@link Context#startActivity(Intent) startActivity} to
launch an {@link android.app.Activity},
{@link android.content.Context#sendBroadcast(Intent) broadcastIntent} to
send it to any interested {@link BroadcastReceiver BroadcastReceiver} components,
and {@link android.content.Context#startService} or
{@link android.content.Context#bindService} to communicate with a
background {@link android.app.Service}.

<p>An Intent provides a facility for performing late runtime binding between the code in
different applications. Its most significant use is in the launching of activities, where it
can be thought of as the glue between activities. It is basically a passive data structure
holding an abstract description of an action to be performed.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For information about how to create and resolve intents, read the
<a href=\"{@docRoot}guide/topics/intents/intents-filters.html\">Intents and Intent Filters</a>
developer guide.</p>
</div>

<a name=\"IntentStructure\"></a>
<h3>Intent Structure</h3>
<p>The primary pieces of information in an intent are:</p>

<ul>
  <li> <p><b>action</b> -- The general action to be performed, such as
    {@link #ACTION_VIEW}, {@link #ACTION_EDIT}, {@link #ACTION_MAIN},
    etc.</p>
  </li>
  <li> <p><b>data</b> -- The data to operate on, such as a person record
    in the contacts database, expressed as a {@link android.net.Uri}.</p>
  </li>
</ul>


<p>Some examples of action/data pairs are:</p>

<ul>
  <li> <p><b>{@link #ACTION_VIEW} <i>content://contacts/people/1</i></b> -- Display
    information about the person whose identifier is \"1\".</p>
  </li>
  <li> <p><b>{@link #ACTION_DIAL} <i>content://contacts/people/1</i></b> -- Display
    the phone dialer with the person filled in.</p>
  </li>
  <li> <p><b>{@link #ACTION_VIEW} <i>tel:123</i></b> -- Display
    the phone dialer with the given number filled in.  Note how the
    VIEW action does what what is considered the most reasonable thing for
    a particular URI.</p>
  </li>
  <li> <p><b>{@link #ACTION_DIAL} <i>tel:123</i></b> -- Display
    the phone dialer with the given number filled in.</p>
  </li>
  <li> <p><b>{@link #ACTION_EDIT} <i>content://contacts/people/1</i></b> -- Edit
    information about the person whose identifier is \"1\".</p>
  </li>
  <li> <p><b>{@link #ACTION_VIEW} <i>content://contacts/people/</i></b> -- Display
    a list of people, which the user can browse through.  This example is a
    typical top-level entry into the Contacts application, showing you the
    list of people. Selecting a particular person to view would result in a
    new intent { <b>{@link #ACTION_VIEW} <i>content://contacts/N</i></b> }
    being used to start an activity to display that person.</p>
  </li>
</ul>

<p>In addition to these primary attributes, there are a number of secondary
attributes that you can also include with an intent:</p>

<ul>
    <li> <p><b>category</b> -- Gives additional information about the action
        to execute.  For example, {@link #CATEGORY_LAUNCHER} means it should
        appear in the Launcher as a top-level application, while
        {@link #CATEGORY_ALTERNATIVE} means it should be included in a list
        of alternative actions the user can perform on a piece of data.</p>
    <li> <p><b>type</b> -- Specifies an explicit type (a MIME type) of the
        intent data.  Normally the type is inferred from the data itself.
        By setting this attribute, you disable that evaluation and force
        an explicit type.</p>
    <li> <p><b>component</b> -- Specifies an explicit name of a component
        class to use for the intent.  Normally this is determined by looking
        at the other information in the intent (the action, data/type, and
        categories) and matching that with a component that can handle it.
        If this attribute is set then none of the evaluation is performed,
        and this component is used exactly as is.  By specifying this attribute,
        all of the other Intent attributes become optional.</p>
    <li> <p><b>extras</b> -- This is a {@link Bundle} of any additional information.
        This can be used to provide extended information to the component.
        For example, if we have a action to send an e-mail message, we could
        also include extra pieces of data here to supply a subject, body,
        etc.</p>
</ul>

<p>Here are some examples of other operations you can specify as intents
using these additional parameters:</p>

<ul>
  <li> <p><b>{@link #ACTION_MAIN} with category {@link #CATEGORY_HOME}</b> --
    Launch the home screen.</p>
  </li>
  <li> <p><b>{@link #ACTION_GET_CONTENT} with MIME type
    <i>{@link android.provider.Contacts.Phones#CONTENT_URI
    vnd.android.cursor.item/phone}</i></b>
    -- Display the list of people's phone numbers, allowing the user to
    browse through them and pick one and return it to the parent activity.</p>
  </li>
  <li> <p><b>{@link #ACTION_GET_CONTENT} with MIME type
    <i>*{@literal /}*</i> and category {@link #CATEGORY_OPENABLE}</b>
    -- Display all pickers for data that can be opened with
    {@link ContentResolver#openInputStream(Uri) ContentResolver.openInputStream()},
    allowing the user to pick one of them and then some data inside of it
    and returning the resulting URI to the caller.  This can be used,
    for example, in an e-mail application to allow the user to pick some
    data to include as an attachment.</p>
  </li>
</ul>

<p>There are a variety of standard Intent action and category constants
defined in the Intent class, but applications can also define their own.
These strings use java style scoping, to ensure they are unique -- for
example, the standard {@link #ACTION_VIEW} is called
\"android.intent.action.VIEW\".</p>

<p>Put together, the set of actions, data types, categories, and extra data
defines a language for the system allowing for the expression of phrases
such as \"call john smith's cell\".  As applications are added to the system,
they can extend this language by adding new actions, types, and categories, or
they can modify the behavior of existing phrases by supplying their own
activities that handle them.</p>

<a name=\"IntentResolution\"></a>
<h3>Intent Resolution</h3>

<p>There are two primary forms of intents you will use.

<ul>
    <li> <p><b>Explicit Intents</b> have specified a component (via
    {@link #setComponent} or {@link #setClass}), which provides the exact
    class to be run.  Often these will not include any other information,
    simply being a way for an application to launch various internal
    activities it has as the user interacts with the application.

    <li> <p><b>Implicit Intents</b> have not specified a component;
    instead, they must include enough information for the system to
    determine which of the available components is best to run for that
    intent.
</ul>

<p>When using implicit intents, given such an arbitrary intent we need to
know what to do with it. This is handled by the process of <em>Intent
resolution</em>, which maps an Intent to an {@link android.app.Activity},
{@link BroadcastReceiver}, or {@link android.app.Service} (or sometimes two or
more activities/receivers) that can handle it.</p>

<p>The intent resolution mechanism basically revolves around matching an
Intent against all of the &lt;intent-filter&gt; descriptions in the
installed application packages.  (Plus, in the case of broadcasts, any {@link BroadcastReceiver}
objects explicitly registered with {@link Context#registerReceiver}.)  More
details on this can be found in the documentation on the {@link
IntentFilter} class.</p>

<p>There are three pieces of information in the Intent that are used for
resolution: the action, type, and category.  Using this information, a query
is done on the {@link PackageManager} for a component that can handle the
intent. The appropriate component is determined based on the intent
information supplied in the <code>AndroidManifest.xml</code> file as
follows:</p>

<ul>
    <li> <p>The <b>action</b>, if given, must be listed by the component as
        one it handles.</p>
    <li> <p>The <b>type</b> is retrieved from the Intent's data, if not
        already supplied in the Intent.  Like the action, if a type is
        included in the intent (either explicitly or implicitly in its
        data), then this must be listed by the component as one it handles.</p>
    <li> For data that is not a <code>content:</code> URI and where no explicit
        type is included in the Intent, instead the <b>scheme</b> of the
        intent data (such as <code>http:</code> or <code>mailto:</code>) is
        considered. Again like the action, if we are matching a scheme it
        must be listed by the component as one it can handle.
    <li> <p>The <b>categories</b>, if supplied, must <em>all</em> be listed
        by the activity as categories it handles.  That is, if you include
        the categories {@link #CATEGORY_LAUNCHER} and
        {@link #CATEGORY_ALTERNATIVE}, then you will only resolve to components
        with an intent that lists <em>both</em> of those categories.
        Activities will very often need to support the
        {@link #CATEGORY_DEFAULT} so that they can be found by
        {@link Context#startActivity Context.startActivity()}.</p>
</ul>

<p>For example, consider the Note Pad sample application that
allows user to browse through a list of notes data and view details about
individual items.  Text in italics indicate places were you would replace a
name with one specific to your own package.</p>

<pre> &lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"
      package=\"<i>com.android.notepad</i>\"&gt;
    &lt;application android:icon=\"@drawable/app_notes\"
            android:label=\"@string/app_name\"&gt;

        &lt;provider class=\".NotePadProvider\"
                android:authorities=\"<i>com.google.provider.NotePad</i>\" /&gt;

        &lt;activity class=\".NotesList\" android:label=\"@string/title_notes_list\"&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=\"android.intent.action.MAIN\" /&gt;
                &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;
            &lt;/intent-filter&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=\"android.intent.action.VIEW\" /&gt;
                &lt;action android:name=\"android.intent.action.EDIT\" /&gt;
                &lt;action android:name=\"android.intent.action.PICK\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.dir/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=\"android.intent.action.GET_CONTENT\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;

        &lt;activity class=\".NoteEditor\" android:label=\"@string/title_note\"&gt;
            &lt;intent-filter android:label=\"@string/resolve_edit\"&gt;
                &lt;action android:name=\"android.intent.action.VIEW\" /&gt;
                &lt;action android:name=\"android.intent.action.EDIT\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;

            &lt;intent-filter&gt;
                &lt;action android:name=\"android.intent.action.INSERT\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.dir/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;

        &lt;/activity&gt;

        &lt;activity class=\".TitleEditor\" android:label=\"@string/title_edit_title\"
                android:theme=\"@android:style/Theme.Dialog\"&gt;
            &lt;intent-filter android:label=\"@string/resolve_title\"&gt;
                &lt;action android:name=\"<i>com.android.notepad.action.EDIT_TITLE</i>\" /&gt;
                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;
                &lt;category android:name=\"android.intent.category.ALTERNATIVE\" /&gt;
                &lt;category android:name=\"android.intent.category.SELECTED_ALTERNATIVE\" /&gt;
                &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;

    &lt;/application&gt;
&lt;/manifest&gt;</pre>

<p>The first activity,
<code>com.android.notepad.NotesList</code>, serves as our main
entry into the app.  It can do three things as described by its three intent
templates:
<ol>
<li><pre>
&lt;intent-filter&gt;
    &lt;action android:name=\"{@link #ACTION_MAIN android.intent.action.MAIN}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_LAUNCHER android.intent.category.LAUNCHER}\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>This provides a top-level entry into the NotePad application: the standard
MAIN action is a main entry point (not requiring any other information in
the Intent), and the LAUNCHER category says that this entry point should be
listed in the application launcher.</p>
<li><pre>
&lt;intent-filter&gt;
    &lt;action android:name=\"{@link #ACTION_VIEW android.intent.action.VIEW}\" /&gt;
    &lt;action android:name=\"{@link #ACTION_EDIT android.intent.action.EDIT}\" /&gt;
    &lt;action android:name=\"{@link #ACTION_PICK android.intent.action.PICK}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;data mimeType:name=\"vnd.android.cursor.dir/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>This declares the things that the activity can do on a directory of
notes.  The type being supported is given with the &lt;type&gt; tag, where
<code>vnd.android.cursor.dir/vnd.google.note</code> is a URI from which
a Cursor of zero or more items (<code>vnd.android.cursor.dir</code>) can
be retrieved which holds our note pad data (<code>vnd.google.note</code>).
The activity allows the user to view or edit the directory of data (via
the VIEW and EDIT actions), or to pick a particular note and return it
to the caller (via the PICK action).  Note also the DEFAULT category
supplied here: this is <em>required</em> for the
{@link Context#startActivity Context.startActivity} method to resolve your
activity when its component name is not explicitly specified.</p>
<li><pre>
&lt;intent-filter&gt;
    &lt;action android:name=\"{@link #ACTION_GET_CONTENT android.intent.action.GET_CONTENT}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>This filter describes the ability return to the caller a note selected by
the user without needing to know where it came from.  The data type
<code>vnd.android.cursor.item/vnd.google.note</code> is a URI from which
a Cursor of exactly one (<code>vnd.android.cursor.item</code>) item can
be retrieved which contains our note pad data (<code>vnd.google.note</code>).
The GET_CONTENT action is similar to the PICK action, where the activity
will return to its caller a piece of data selected by the user.  Here,
however, the caller specifies the type of data they desire instead of
the type of data the user will be picking from.</p>
</ol>

<p>Given these capabilities, the following intents will resolve to the
NotesList activity:</p>

<ul>
    <li> <p><b>{ action=android.app.action.MAIN }</b> matches all of the
        activities that can be used as top-level entry points into an
        application.</p>
    <li> <p><b>{ action=android.app.action.MAIN,
        category=android.app.category.LAUNCHER }</b> is the actual intent
        used by the Launcher to populate its top-level list.</p>
    <li> <p><b>{ action=android.intent.action.VIEW
         data=content://com.google.provider.NotePad/notes }</b>
        displays a list of all the notes under
        \"content://com.google.provider.NotePad/notes\", which
        the user can browse through and see the details on.</p>
    <li> <p><b>{ action=android.app.action.PICK
         data=content://com.google.provider.NotePad/notes }</b>
        provides a list of the notes under
        \"content://com.google.provider.NotePad/notes\", from which
        the user can pick a note whose data URL is returned back to the caller.</p>
    <li> <p><b>{ action=android.app.action.GET_CONTENT
         type=vnd.android.cursor.item/vnd.google.note }</b>
        is similar to the pick action, but allows the caller to specify the
        kind of data they want back so that the system can find the appropriate
        activity to pick something of that data type.</p>
</ul>

<p>The second activity,
<code>com.android.notepad.NoteEditor</code>, shows the user a single
note entry and allows them to edit it.  It can do two things as described
by its two intent templates:
<ol>
<li><pre>
&lt;intent-filter android:label=\"@string/resolve_edit\"&gt;
    &lt;action android:name=\"{@link #ACTION_VIEW android.intent.action.VIEW}\" /&gt;
    &lt;action android:name=\"{@link #ACTION_EDIT android.intent.action.EDIT}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>The first, primary, purpose of this activity is to let the user interact
with a single note, as decribed by the MIME type
<code>vnd.android.cursor.item/vnd.google.note</code>.  The activity can
either VIEW a note or allow the user to EDIT it.  Again we support the
DEFAULT category to allow the activity to be launched without explicitly
specifying its component.</p>
<li><pre>
&lt;intent-filter&gt;
    &lt;action android:name=\"{@link #ACTION_INSERT android.intent.action.INSERT}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.dir/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>
<p>The secondary use of this activity is to insert a new note entry into
an existing directory of notes.  This is used when the user creates a new
note: the INSERT action is executed on the directory of notes, causing
this activity to run and have the user create the new note data which
it then adds to the content provider.</p>
</ol>

<p>Given these capabilities, the following intents will resolve to the
NoteEditor activity:</p>

<ul>
    <li> <p><b>{ action=android.intent.action.VIEW
         data=content://com.google.provider.NotePad/notes/<var>{ID}</var> }</b>
        shows the user the content of note <var>{ID}</var>.</p>
    <li> <p><b>{ action=android.app.action.EDIT
         data=content://com.google.provider.NotePad/notes/<var>{ID}</var> }</b>
        allows the user to edit the content of note <var>{ID}</var>.</p>
    <li> <p><b>{ action=android.app.action.INSERT
         data=content://com.google.provider.NotePad/notes }</b>
        creates a new, empty note in the notes list at
        \"content://com.google.provider.NotePad/notes\"
        and allows the user to edit it.  If they keep their changes, the URI
        of the newly created note is returned to the caller.</p>
</ul>

<p>The last activity,
<code>com.android.notepad.TitleEditor</code>, allows the user to
edit the title of a note.  This could be implemented as a class that the
application directly invokes (by explicitly setting its component in
the Intent), but here we show a way you can publish alternative
operations on existing data:</p>

<pre>
&lt;intent-filter android:label=\"@string/resolve_title\"&gt;
    &lt;action android:name=\"<i>com.android.notepad.action.EDIT_TITLE</i>\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_DEFAULT android.intent.category.DEFAULT}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_ALTERNATIVE android.intent.category.ALTERNATIVE}\" /&gt;
    &lt;category android:name=\"{@link #CATEGORY_SELECTED_ALTERNATIVE android.intent.category.SELECTED_ALTERNATIVE}\" /&gt;
    &lt;data android:mimeType=\"vnd.android.cursor.item/<i>vnd.google.note</i>\" /&gt;
&lt;/intent-filter&gt;</pre>

<p>In the single intent template here, we
have created our own private action called
<code>com.android.notepad.action.EDIT_TITLE</code> which means to
edit the title of a note.  It must be invoked on a specific note
(data type <code>vnd.android.cursor.item/vnd.google.note</code>) like the previous
view and edit actions, but here displays and edits the title contained
in the note data.

<p>In addition to supporting the default category as usual, our title editor
also supports two other standard categories: ALTERNATIVE and
SELECTED_ALTERNATIVE.  Implementing
these categories allows others to find the special action it provides
without directly knowing about it, through the
{@link android.content.pm.PackageManager#queryIntentActivityOptions} method, or
more often to build dynamic menu items with
{@link android.view.Menu#addIntentOptions}.  Note that in the intent
template here was also supply an explicit name for the template
(via <code>android:label=\"@string/resolve_title\"</code>) to better control
what the user sees when presented with this activity as an alternative
action to the data they are viewing.

<p>Given these capabilities, the following intent will resolve to the
TitleEditor activity:</p>

<ul>
    <li> <p><b>{ action=com.android.notepad.action.EDIT_TITLE
         data=content://com.google.provider.NotePad/notes/<var>{ID}</var> }</b>
        displays and allows the user to edit the title associated
        with note <var>{ID}</var>.</p>
</ul>

<h3>Standard Activity Actions</h3>

<p>These are the current standard actions that Intent defines for launching
activities (usually through {@link Context#startActivity}.  The most
important, and by far most frequently used, are {@link #ACTION_MAIN} and
{@link #ACTION_EDIT}.

<ul>
    <li> {@link #ACTION_MAIN}
    <li> {@link #ACTION_VIEW}
    <li> {@link #ACTION_ATTACH_DATA}
    <li> {@link #ACTION_EDIT}
    <li> {@link #ACTION_PICK}
    <li> {@link #ACTION_CHOOSER}
    <li> {@link #ACTION_GET_CONTENT}
    <li> {@link #ACTION_DIAL}
    <li> {@link #ACTION_CALL}
    <li> {@link #ACTION_SEND}
    <li> {@link #ACTION_SENDTO}
    <li> {@link #ACTION_ANSWER}
    <li> {@link #ACTION_INSERT}
    <li> {@link #ACTION_DELETE}
    <li> {@link #ACTION_RUN}
    <li> {@link #ACTION_SYNC}
    <li> {@link #ACTION_PICK_ACTIVITY}
    <li> {@link #ACTION_SEARCH}
    <li> {@link #ACTION_WEB_SEARCH}
    <li> {@link #ACTION_FACTORY_TEST}
</ul>

<h3>Standard Broadcast Actions</h3>

<p>These are the current standard actions that Intent defines for receiving
broadcasts (usually through {@link Context#registerReceiver} or a
&lt;receiver&gt; tag in a manifest).

<ul>
    <li> {@link #ACTION_TIME_TICK}
    <li> {@link #ACTION_TIME_CHANGED}
    <li> {@link #ACTION_TIMEZONE_CHANGED}
    <li> {@link #ACTION_BOOT_COMPLETED}
    <li> {@link #ACTION_PACKAGE_ADDED}
    <li> {@link #ACTION_PACKAGE_CHANGED}
    <li> {@link #ACTION_PACKAGE_REMOVED}
    <li> {@link #ACTION_PACKAGE_RESTARTED}
    <li> {@link #ACTION_PACKAGE_DATA_CLEARED}
    <li> {@link #ACTION_UID_REMOVED}
    <li> {@link #ACTION_BATTERY_CHANGED}
    <li> {@link #ACTION_POWER_CONNECTED}
    <li> {@link #ACTION_POWER_DISCONNECTED}
    <li> {@link #ACTION_SHUTDOWN}
</ul>

<h3>Standard Categories</h3>

<p>These are the current standard categories that can be used to further
clarify an Intent via {@link #addCategory}.

<ul>
    <li> {@link #CATEGORY_DEFAULT}
    <li> {@link #CATEGORY_BROWSABLE}
    <li> {@link #CATEGORY_TAB}
    <li> {@link #CATEGORY_ALTERNATIVE}
    <li> {@link #CATEGORY_SELECTED_ALTERNATIVE}
    <li> {@link #CATEGORY_LAUNCHER}
    <li> {@link #CATEGORY_INFO}
    <li> {@link #CATEGORY_HOME}
    <li> {@link #CATEGORY_PREFERENCE}
    <li> {@link #CATEGORY_TEST}
    <li> {@link #CATEGORY_CAR_DOCK}
    <li> {@link #CATEGORY_DESK_DOCK}
    <li> {@link #CATEGORY_LE_DESK_DOCK}
    <li> {@link #CATEGORY_HE_DESK_DOCK}
    <li> {@link #CATEGORY_CAR_MODE}
    <li> {@link #CATEGORY_APP_MARKET}
</ul>

<h3>Standard Extra Data</h3>

<p>These are the current standard fields that can be used as extra data via
{@link #putExtra}.

<ul>
    <li> {@link #EXTRA_ALARM_COUNT}
    <li> {@link #EXTRA_BCC}
    <li> {@link #EXTRA_CC}
    <li> {@link #EXTRA_CHANGED_COMPONENT_NAME}
    <li> {@link #EXTRA_DATA_REMOVED}
    <li> {@link #EXTRA_DOCK_STATE}
    <li> {@link #EXTRA_DOCK_STATE_HE_DESK}
    <li> {@link #EXTRA_DOCK_STATE_LE_DESK}
    <li> {@link #EXTRA_DOCK_STATE_CAR}
    <li> {@link #EXTRA_DOCK_STATE_DESK}
    <li> {@link #EXTRA_DOCK_STATE_UNDOCKED}
    <li> {@link #EXTRA_DONT_KILL_APP}
    <li> {@link #EXTRA_EMAIL}
    <li> {@link #EXTRA_INITIAL_INTENTS}
    <li> {@link #EXTRA_INTENT}
    <li> {@link #EXTRA_KEY_EVENT}
    <li> {@link #EXTRA_ORIGINATING_URI}
    <li> {@link #EXTRA_PHONE_NUMBER}
    <li> {@link #EXTRA_REFERRER}
    <li> {@link #EXTRA_REMOTE_INTENT_TOKEN}
    <li> {@link #EXTRA_REPLACING}
    <li> {@link #EXTRA_SHORTCUT_ICON}
    <li> {@link #EXTRA_SHORTCUT_ICON_RESOURCE}
    <li> {@link #EXTRA_SHORTCUT_INTENT}
    <li> {@link #EXTRA_STREAM}
    <li> {@link #EXTRA_SHORTCUT_NAME}
    <li> {@link #EXTRA_SUBJECT}
    <li> {@link #EXTRA_TEMPLATE}
    <li> {@link #EXTRA_TEXT}
    <li> {@link #EXTRA_TITLE}
    <li> {@link #EXTRA_UID}
</ul>

<h3>Flags</h3>

<p>These are the possible flags that can be used in the Intent via
{@link #setFlags} and {@link #addFlags}.  See {@link #setFlags} for a list
of all possible flags."
      classrelation 213250 // <realization>
	relation 213250 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 213250 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      classrelation 213378 // <realization>
	relation 213378 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 213378 // <realization>
	  b parent class_ref 174210 // Cloneable
      end

      attribute 450690 "ACTION_MAIN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MAIN\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------------------------------------
 ---------------------------------------------------------------------
 Standard intent activity actions (see action variable).

 Activity Action: Start as a main entry point, does not expect to
 receive data.
 <p>Input: nothing
 <p>Output: nothing
"
      end

      attribute 450818 "ACTION_VIEW"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.VIEW\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Display the data to the user.  This is the most common
action performed on data -- it is the generic action you can use on
a piece of data to get the most reasonable thing to occur.  For example,
when used on a contacts entry it will view the entry; when used on a
mailto: URI it will bring up a compose window filled with the information
supplied by the URI; when used with a tel: URI it will invoke the
dialer.
<p>Input: {@link #getData} is URI from which to retrieve data.
<p>Output: nothing.
"
      end

      attribute 450946 "ACTION_DEFAULT"
	class_attribute const_attribute public explicit_type "String"
	init_value " ACTION_VIEW"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A synonym for {@link #ACTION_VIEW}, the \"standard\" action that is
performed on a piece of data.
"
      end

      attribute 451074 "ACTION_ATTACH_DATA"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ATTACH_DATA\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to indicate that some piece of data should be attached to some other
place.  For example, image data could be attached to a contact.  It is up
to the recipient to decide where the data should be attached; the intent
does not specify the ultimate destination.
<p>Input: {@link #getData} is URI of data to be attached.
<p>Output: nothing.
"
      end

      attribute 451202 "ACTION_EDIT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.EDIT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Provide explicit editable access to the given data.
<p>Input: {@link #getData} is URI of data to be edited.
<p>Output: nothing.
"
      end

      attribute 451330 "ACTION_INSERT_OR_EDIT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.INSERT_OR_EDIT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Pick an existing item, or insert a new item, and then edit it.
<p>Input: {@link #getType} is the desired MIME type of the item to create or edit.
The extras can contain type specific data to pass through to the editing/creating
activity.
<p>Output: The URI of the item that was picked.  This must be a content:
URI so that any receiver can access it.
"
      end

      attribute 451458 "ACTION_PICK"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PICK\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Pick an item from the data, returning what was selected.
<p>Input: {@link #getData} is URI containing a directory of data
(vnd.android.cursor.dir/*) from which to pick an item.
<p>Output: The URI of the item that was picked.
"
      end

      attribute 451586 "ACTION_CREATE_SHORTCUT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CREATE_SHORTCUT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Creates a shortcut.
<p>Input: Nothing.</p>
<p>Output: An Intent representing the shortcut. The intent must contain three
extras: SHORTCUT_INTENT (value: Intent), SHORTCUT_NAME (value: String),
and SHORTCUT_ICON (value: Bitmap) or SHORTCUT_ICON_RESOURCE
(value: ShortcutIconResource).</p>

@see #EXTRA_SHORTCUT_INTENT
@see #EXTRA_SHORTCUT_NAME
@see #EXTRA_SHORTCUT_ICON
@see #EXTRA_SHORTCUT_ICON_RESOURCE
@see android.content.Intent.ShortcutIconResource
"
      end

      attribute 451714 "EXTRA_SHORTCUT_INTENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.shortcut.INTENT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the extra used to define the Intent of a shortcut.

@see #ACTION_CREATE_SHORTCUT
"
      end

      attribute 451842 "EXTRA_SHORTCUT_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.shortcut.NAME\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the extra used to define the name of a shortcut.

@see #ACTION_CREATE_SHORTCUT
"
      end

      attribute 451970 "EXTRA_SHORTCUT_ICON"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.shortcut.ICON\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the extra used to define the icon, as a Bitmap, of a shortcut.

@see #ACTION_CREATE_SHORTCUT
"
      end

      attribute 452098 "EXTRA_SHORTCUT_ICON_RESOURCE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.shortcut.ICON_RESOURCE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The name of the extra used to define the icon, as a ShortcutIconResource, of a shortcut.

@see #ACTION_CREATE_SHORTCUT
@see android.content.Intent.ShortcutIconResource
"
      end

      class 204290 "ShortcutIconResource"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 213506 // <realization>
	  relation 213506 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 213506 // <realization>
	    b parent class_ref 170114 // Parcelable
	end

	attribute 452226 "packageName"
	  public explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The package name of the application containing the icon.
"
	end

	attribute 452354 "resourceName"
	  public explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The resource name of the icon, including package, name and type.
"
	end

	operation 725634 "fromContext"
	  class_operation public return_type class_ref 204290 // ShortcutIconResource
	  nparams 2
	    param inout name "context" type class_ref 192770 // Context
	    param in name "resourceId" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Creates a new ShortcutIconResource for the specified context and resource
identifier.

@param context The context of the application.
@param resourceId The resource idenfitier for the icon.
@return A new ShortcutIconResource with the specified's context package name
        and icon resource idenfitier."
	end

	classrelation 213634 // CREATOR (<unidirectional association>)
	  relation 213634 --->
	    a role_name "CREATOR" init_value "
            new Parcelable.Creator<ShortcutIconResource>() {

                public ShortcutIconResource createFromParcel(Parcel source) {
                    ShortcutIconResource icon = new ShortcutIconResource();
                    icon.packageName = source.readString();
                    icon.resourceName = source.readString();
                    return icon;
                }

                public ShortcutIconResource[] newArray(int size) {
                    return new ShortcutIconResource[size];
                }
            }" class_relation const_relation public
	      comment "
Used to read a ShortcutIconResource from a Parcel.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ShortcutIconResource> ${name}${value};
"
	      classrelation_ref 213634 // CREATOR (<unidirectional association>)
	    b parent class_ref 170370 // Creator
	end

	operation 725762 "describeContents"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "No special parcel contents."
	end

	operation 725890 "writeToParcel"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dest" type class_ref 170242 // Parcel
	    param in name "flags" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 726018 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      attribute 452482 "ACTION_CHOOSER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CHOOSER\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Display an activity chooser, allowing the user to pick
what they want to before proceeding.  This can be used as an alternative
to the standard activity picker that is displayed by the system when
you try to start an activity with multiple possible matches, with these
differences in behavior:
<ul>
<li>You can specify the title that will appear in the activity chooser.
<li>The user does not have the option to make one of the matching
activities a preferred activity, and all possible activities will
always be shown even if one of them is currently marked as the
preferred activity.
</ul>
<p>
This action should be used when the user will naturally expect to
select an activity in order to proceed.  An example if when not to use
it is when the user clicks on a \"mailto:\" link.  They would naturally
expect to go directly to their mail app, so startActivity() should be
called directly: it will
either launch the current preferred app, or put up a dialog allowing the
user to pick an app to use and optionally marking that as preferred.
<p>
In contrast, if the user is selecting a menu item to send a picture
they are viewing to someone else, there are many different things they
may want to do at this point: send it through e-mail, upload it to a
web service, etc.  In this case the CHOOSER action should be used, to
always present to the user a list of the things they can do, with a
nice title given by the caller such as \"Send this photo with:\".
<p>
If you need to grant URI permissions through a chooser, you must specify
the permissions to be granted on the ACTION_CHOOSER Intent
<em>in addition</em> to the EXTRA_INTENT inside.  This means using
{@link #setClipData} to specify the URIs to be granted as well as
{@link #FLAG_GRANT_READ_URI_PERMISSION} and/or
{@link #FLAG_GRANT_WRITE_URI_PERMISSION} as appropriate.
<p>
As a convenience, an Intent of this form can be created with the
{@link #createChooser} function.
<p>
Input: No data should be specified.  get*Extra must have
a {@link #EXTRA_INTENT} field containing the Intent being executed,
and can optionally have a {@link #EXTRA_TITLE} field containing the
title text to display in the chooser.
<p>
Output: Depends on the protocol of {@link #EXTRA_INTENT}.
"
      end

      operation 726146 "createChooser"
	class_operation public return_type class_ref 195458 // Intent
	nparams 2
	  param inout name "target" type class_ref 195458 // Intent
	  param inout name "title" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for creating a {@link #ACTION_CHOOSER} Intent.

<p>Builds a new {@link #ACTION_CHOOSER} Intent that wraps the given
target intent, also optionally supplying a title.  If the target
intent has specified {@link #FLAG_GRANT_READ_URI_PERMISSION} or
{@link #FLAG_GRANT_WRITE_URI_PERMISSION}, then these flags will also be
set in the returned chooser intent, with its ClipData set appropriately:
either a direct reflection of {@link #getClipData()} if that is non-null,
or a new ClipData build from {@link #getData()}.

@param target The Intent that the user will be selecting an activity
to perform.
@param title Optional title that will be displayed in the chooser.
@return Return a new Intent object that you can hand to
{@link Context#startActivity(Intent) Context.startActivity()} and
related methods."
      end

      attribute 452610 "ACTION_GET_CONTENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.GET_CONTENT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Allow the user to select a particular kind of data and
return it.  This is different than {@link #ACTION_PICK} in that here we
just say what kind of data is desired, not a URI of existing data from
which the user can pick.  An ACTION_GET_CONTENT could allow the user to
create the data as it runs (for example taking a picture or recording a
sound), let them browse over the web and download the desired data,
etc.
<p>
There are two main ways to use this action: if you want a specific kind
of data, such as a person contact, you set the MIME type to the kind of
data you want and launch it with {@link Context#startActivity(Intent)}.
The system will then launch the best application to select that kind
of data for you.
<p>
You may also be interested in any of a set of types of content the user
can pick.  For example, an e-mail application that wants to allow the
user to add an attachment to an e-mail message can use this action to
bring up a list of all of the types of content the user can attach.
<p>
In this case, you should wrap the GET_CONTENT intent with a chooser
(through {@link #createChooser}), which will give the proper interface
for the user to pick how to send your data and allow you to specify
a prompt indicating what they are doing.  You will usually specify a
broad MIME type (such as image/* or {@literal *}/*), resulting in a
broad range of content types the user can select from.
<p>
When using such a broad GET_CONTENT action, it is often desirable to
only pick from data that can be represented as a stream.  This is
accomplished by requiring the {@link #CATEGORY_OPENABLE} in the Intent.
<p>
Callers can optionally specify {@link #EXTRA_LOCAL_ONLY} to request that
the launched content chooser only returns results representing data that
is locally available on the device.  For example, if this extra is set
to true then an image picker should not show any pictures that are available
from a remote server but not already on the local device (thus requiring
they be downloaded when opened).
<p>
If the caller can handle multiple returned items (the user performing
multiple selection), then it can specify {@link #EXTRA_ALLOW_MULTIPLE}
to indicate this.
<p>
Input: {@link #getType} is the desired MIME type to retrieve.  Note
that no URI is supplied in the intent, as there are no constraints on
where the returned data originally comes from.  You may also include the
{@link #CATEGORY_OPENABLE} if you can only accept data that can be
opened as a stream.  You may use {@link #EXTRA_LOCAL_ONLY} to limit content
selection to local data.  You may use {@link #EXTRA_ALLOW_MULTIPLE} to
allow the user to select multiple items.
<p>
Output: The URI of the item that was picked.  This must be a content:
URI so that any receiver can access it.
"
      end

      attribute 452738 "ACTION_DIAL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DIAL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Dial a number as specified by the data.  This shows a
UI with the number being dialed, allowing the user to explicitly
initiate the call.
<p>Input: If nothing, an empty dialer is started; else {@link #getData}
is URI of a phone number to be dialed or a tel: URI of an explicit phone
number.
<p>Output: nothing.
"
      end

      attribute 452866 "ACTION_CALL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CALL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Perform a call to someone specified by the data.
<p>Input: If nothing, an empty dialer is started; else {@link #getData}
is URI of a phone number to be dialed or a tel: URI of an explicit phone
number.
<p>Output: nothing.

<p>Note: there will be restrictions on which applications can initiate a
call; most applications should use the {@link #ACTION_DIAL}.
<p>Note: this Intent <strong>cannot</strong> be used to call emergency
numbers.  Applications can <strong>dial</strong> emergency numbers using
{@link #ACTION_DIAL}, however.
"
      end

      attribute 452994 "ACTION_CALL_EMERGENCY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CALL_EMERGENCY\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Perform a call to an emergency number specified by the
data.
<p>Input: {@link #getData} is URI of a phone number to be dialed or a
tel: URI of an explicit phone number.
<p>Output: nothing.
@hide
"
      end

      attribute 453122 "ACTION_CALL_PRIVILEGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CALL_PRIVILEGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity action: Perform a call to any number (emergency or not)
specified by the data.
<p>Input: {@link #getData} is URI of a phone number to be dialed or a
tel: URI of an explicit phone number.
<p>Output: nothing.
@hide
"
      end

      attribute 453250 "ACTION_SENDTO"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SENDTO\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Send a message to someone specified by the data.
<p>Input: {@link #getData} is URI describing the target.
<p>Output: nothing.
"
      end

      attribute 453378 "ACTION_SEND"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SEND\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Deliver some data to someone else.  Who the data is
being delivered to is not specified; it is up to the receiver of this
action to ask the user where the data should be sent.
<p>
When launching a SEND intent, you should usually wrap it in a chooser
(through {@link #createChooser}), which will give the proper interface
for the user to pick how to send your data and allow you to specify
a prompt indicating what they are doing.
<p>
Input: {@link #getType} is the MIME type of the data being sent.
get*Extra can have either a {@link #EXTRA_TEXT}
or {@link #EXTRA_STREAM} field, containing the data to be sent.  If
using EXTRA_TEXT, the MIME type should be \"text/plain\"; otherwise it
should be the MIME type of the data in EXTRA_STREAM.  Use {@literal *}/*
if the MIME type is unknown (this will only allow senders that can
handle generic data streams).  If using {@link #EXTRA_TEXT}, you can
also optionally supply {@link #EXTRA_HTML_TEXT} for clients to retrieve
your text with HTML formatting.
<p>
As of {@link android.os.Build.VERSION_CODES#JELLY_BEAN}, the data
being sent can be supplied through {@link #setClipData(ClipData)}.  This
allows you to use {@link #FLAG_GRANT_READ_URI_PERMISSION} when sharing
content: URIs and other advanced features of {@link ClipData}.  If
using this approach, you still must supply the same data through the
{@link #EXTRA_TEXT} or {@link #EXTRA_STREAM} fields described below
for compatibility with old applications.  If you don't set a ClipData,
it will be copied there for you when calling {@link Context#startActivity(Intent)}.
<p>
Optional standard extras, which may be interpreted by some recipients as
appropriate, are: {@link #EXTRA_EMAIL}, {@link #EXTRA_CC},
{@link #EXTRA_BCC}, {@link #EXTRA_SUBJECT}.
<p>
Output: nothing.
"
      end

      attribute 453506 "ACTION_SEND_MULTIPLE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SEND_MULTIPLE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Deliver multiple data to someone else.
<p>
Like {@link #ACTION_SEND}, except the data is multiple.
<p>
Input: {@link #getType} is the MIME type of the data being sent.
get*ArrayListExtra can have either a {@link #EXTRA_TEXT} or {@link
#EXTRA_STREAM} field, containing the data to be sent.  If using
{@link #EXTRA_TEXT}, you can also optionally supply {@link #EXTRA_HTML_TEXT}
for clients to retrieve your text with HTML formatting.
<p>
Multiple types are supported, and receivers should handle mixed types
whenever possible. The right way for the receiver to check them is to
use the content resolver on each URI. The intent sender should try to
put the most concrete mime type in the intent type, but it can fall
back to {@literal <type>/*} or {@literal *}/* as needed.
<p>
e.g. if you are sending image/jpg and image/jpg, the intent's type can
be image/jpg, but if you are sending image/jpg and image/png, then the
intent's type should be image/*.
<p>
As of {@link android.os.Build.VERSION_CODES#JELLY_BEAN}, the data
being sent can be supplied through {@link #setClipData(ClipData)}.  This
allows you to use {@link #FLAG_GRANT_READ_URI_PERMISSION} when sharing
content: URIs and other advanced features of {@link ClipData}.  If
using this approach, you still must supply the same data through the
{@link #EXTRA_TEXT} or {@link #EXTRA_STREAM} fields described below
for compatibility with old applications.  If you don't set a ClipData,
it will be copied there for you when calling {@link Context#startActivity(Intent)}.
<p>
Optional standard extras, which may be interpreted by some recipients as
appropriate, are: {@link #EXTRA_EMAIL}, {@link #EXTRA_CC},
{@link #EXTRA_BCC}, {@link #EXTRA_SUBJECT}.
<p>
Output: nothing.
"
      end

      attribute 453634 "ACTION_ANSWER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ANSWER\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Handle an incoming phone call.
<p>Input: nothing.
<p>Output: nothing.
"
      end

      attribute 453762 "ACTION_INSERT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.INSERT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Insert an empty item into the given container.
<p>Input: {@link #getData} is URI of the directory (vnd.android.cursor.dir/*)
in which to place the data.
<p>Output: URI of the new data that was created.
"
      end

      attribute 453890 "ACTION_PASTE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PASTE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Create a new item in the given container, initializing it
from the current contents of the clipboard.
<p>Input: {@link #getData} is URI of the directory (vnd.android.cursor.dir/*)
in which to place the data.
<p>Output: URI of the new data that was created.
"
      end

      attribute 454018 "ACTION_DELETE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DELETE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Delete the given data from its container.
<p>Input: {@link #getData} is URI of data to be deleted.
<p>Output: nothing.
"
      end

      attribute 454146 "ACTION_RUN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.RUN\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Run the data, whatever that means.
<p>Input: ?  (Note: this is currently specific to the test harness.)
<p>Output: nothing.
"
      end

      attribute 454274 "ACTION_SYNC"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SYNC\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Perform a data synchronization.
<p>Input: ?
<p>Output: ?
"
      end

      attribute 454402 "ACTION_PICK_ACTIVITY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PICK_ACTIVITY\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Pick an activity given an intent, returning the class
selected.
<p>Input: get*Extra field {@link #EXTRA_INTENT} is an Intent
used with {@link PackageManager#queryIntentActivities} to determine the
set of activities from which to pick.
<p>Output: Class name of the activity that was selected.
"
      end

      attribute 454530 "ACTION_SEARCH"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SEARCH\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Perform a search.
<p>Input: {@link android.app.SearchManager#QUERY getStringExtra(SearchManager.QUERY)}
is the text to search for.  If empty, simply
enter your search results Activity with the search UI activated.
<p>Output: nothing.
"
      end

      attribute 454658 "ACTION_SYSTEM_TUTORIAL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SYSTEM_TUTORIAL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Start the platform-defined tutorial
<p>Input: {@link android.app.SearchManager#QUERY getStringExtra(SearchManager.QUERY)}
is the text to search for.  If empty, simply
enter your search results Activity with the search UI activated.
<p>Output: nothing.
"
      end

      attribute 454786 "ACTION_WEB_SEARCH"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.WEB_SEARCH\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Perform a web search.
<p>
Input: {@link android.app.SearchManager#QUERY
getStringExtra(SearchManager.QUERY)} is the text to search for. If it is
a url starts with http or https, the site will be opened. If it is plain
text, Google search will be applied.
<p>
Output: nothing.
"
      end

      attribute 454914 "ACTION_ASSIST"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ASSIST\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Perform assist action.
<p>
Input: {@link #EXTRA_ASSIST_PACKAGE}, {@link #EXTRA_ASSIST_CONTEXT}, can provide
additional optional contextual information about where the user was when they
requested the assist.
Output: nothing.
"
      end

      attribute 455042 "ACTION_VOICE_ASSIST"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.VOICE_ASSIST\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Perform voice assist action.
<p>
Input: {@link #EXTRA_ASSIST_PACKAGE}, {@link #EXTRA_ASSIST_CONTEXT}, can provide
additional optional contextual information about where the user was when they
requested the voice assist.
Output: nothing.
@hide
"
      end

      attribute 455170 "EXTRA_ASSIST_PACKAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.ASSIST_PACKAGE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An optional field on {@link #ACTION_ASSIST} containing the name of the current foreground
application package at the time the assist was invoked.
"
      end

      attribute 455298 "EXTRA_ASSIST_CONTEXT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.ASSIST_CONTEXT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An optional field on {@link #ACTION_ASSIST} and containing additional contextual
information supplied by the current foreground app at the time of the assist request.
This is a {@link Bundle} of additional data.
"
      end

      attribute 455426 "ACTION_ALL_APPS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ALL_APPS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: List all available applications
<p>Input: Nothing.
<p>Output: nothing.
"
      end

      attribute 455554 "ACTION_SET_WALLPAPER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SET_WALLPAPER\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Show settings for choosing wallpaper
<p>Input: Nothing.
<p>Output: Nothing.
"
      end

      attribute 455682 "ACTION_BUG_REPORT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.BUG_REPORT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Show activity for reporting a bug.
<p>Input: Nothing.
<p>Output: Nothing.
"
      end

      attribute 455810 "ACTION_FACTORY_TEST"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.FACTORY_TEST\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Activity Action: Main entry point for factory tests.  Only used when
 the device is booting in factory test node.  The implementing package
 must be installed in the system image.
 <p>Input: nothing
 <p>Output: nothing
"
      end

      attribute 455938 "ACTION_CALL_BUTTON"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CALL_BUTTON\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: The user pressed the \"call\" button to go to the dialer
or other appropriate UI for placing a call.
<p>Input: Nothing.
<p>Output: Nothing.
"
      end

      attribute 456066 "ACTION_VOICE_COMMAND"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.VOICE_COMMAND\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Start Voice Command.
<p>Input: Nothing.
<p>Output: Nothing.
"
      end

      attribute 456194 "ACTION_SEARCH_LONG_PRESS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SEARCH_LONG_PRESS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Start action associated with long pressing on the
search key.
<p>Input: Nothing.
<p>Output: Nothing.
"
      end

      attribute 456322 "ACTION_APP_ERROR"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.APP_ERROR\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: The user pressed the \"Report\" button in the crash/ANR dialog.
This intent is delivered to the package which installed the application, usually
Google Play.
<p>Input: No data is specified. The bug report is passed in using
an {@link #EXTRA_BUG_REPORT} field.
<p>Output: Nothing.

@see #EXTRA_BUG_REPORT
"
      end

      attribute 456450 "ACTION_POWER_USAGE_SUMMARY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.POWER_USAGE_SUMMARY\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Show power usage information to the user.
<p>Input: Nothing.
<p>Output: Nothing.
"
      end

      attribute 456578 "ACTION_UPGRADE_SETUP"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.UPGRADE_SETUP\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Setup wizard to launch after a platform update.  This
activity should have a string meta-data field associated with it,
{@link #METADATA_SETUP_VERSION}, which defines the current version of
the platform for setup.  The activity will be launched only if
{@link android.provider.Settings.Secure#LAST_SETUP_SHOWN} is not the
same value.
<p>Input: Nothing.
<p>Output: Nothing.
@hide
"
      end

      attribute 456706 "ACTION_MANAGE_NETWORK_USAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.MANAGE_NETWORK_USAGE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Show settings for managing network data usage of a
specific application. Applications should define an activity that offers
options to control data usage.
"
      end

      attribute 456834 "ACTION_INSTALL_PACKAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.INSTALL_PACKAGE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Launch application installer.
<p>
Input: The data must be a content: or file: URI at which the application
can be retrieved.  As of {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR1},
you can also use \"package:<package-name>\" to install an application for the
current user that is already installed for another user. You can optionally supply
{@link #EXTRA_INSTALLER_PACKAGE_NAME}, {@link #EXTRA_NOT_UNKNOWN_SOURCE},
{@link #EXTRA_ALLOW_REPLACE}, and {@link #EXTRA_RETURN_RESULT}.
<p>
Output: If {@link #EXTRA_RETURN_RESULT}, returns whether the install
succeeded.

@see #EXTRA_INSTALLER_PACKAGE_NAME
@see #EXTRA_NOT_UNKNOWN_SOURCE
@see #EXTRA_RETURN_RESULT
"
      end

      attribute 456962 "EXTRA_INSTALLER_PACKAGE_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.INSTALLER_PACKAGE_NAME\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a string extra field with {@link #ACTION_INSTALL_PACKAGE} to install a
package.  Specifies the installer package name; this package will receive the
{@link #ACTION_APP_ERROR} intent.
"
      end

      attribute 457090 "EXTRA_NOT_UNKNOWN_SOURCE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.NOT_UNKNOWN_SOURCE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a boolean extra field with {@link #ACTION_INSTALL_PACKAGE} to install a
package.  Specifies that the application being installed should not be
treated as coming from an unknown source, but as coming from the app
invoking the Intent.  For this to work you must start the installer with
startActivityForResult().
"
      end

      attribute 457218 "EXTRA_ORIGINATING_URI"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.ORIGINATING_URI\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a URI extra field with {@link #ACTION_INSTALL_PACKAGE} and
{@link #ACTION_VIEW} to indicate the URI from which the local APK in the Intent
data field originated from.
"
      end

      attribute 457346 "EXTRA_REFERRER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.REFERRER\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a URI extra field with {@link #ACTION_INSTALL_PACKAGE} and
{@link #ACTION_VIEW} to indicate the HTTP referrer URI associated with the Intent
data field or {@link #EXTRA_ORIGINATING_URI}.
"
      end

      attribute 457474 "EXTRA_ORIGINATING_UID"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.ORIGINATING_UID\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int extra field with {@link #ACTION_INSTALL_PACKAGE} and
{@link} #ACTION_VIEW} to indicate the uid of the package that initiated the install
@hide
"
      end

      attribute 457602 "EXTRA_ALLOW_REPLACE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.ALLOW_REPLACE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a boolean extra field with {@link #ACTION_INSTALL_PACKAGE} to install a
package.  Tells the installer UI to skip the confirmation with the user
if the .apk is replacing an existing one.
@deprecated As of {@link android.os.Build.VERSION_CODES#JELLY_BEAN}, Android
will no longer show an interstitial message about updating existing
applications so this is no longer needed.
"
      end

      attribute 457730 "EXTRA_RETURN_RESULT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.RETURN_RESULT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a boolean extra field with {@link #ACTION_INSTALL_PACKAGE} or
{@link #ACTION_UNINSTALL_PACKAGE}.  Specifies that the installer UI should
return to the application the result code of the install/uninstall.  The returned result
code will be {@link android.app.Activity#RESULT_OK} on success or
{@link android.app.Activity#RESULT_FIRST_USER} on failure.
"
      end

      attribute 457858 "EXTRA_INSTALL_RESULT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.INSTALL_RESULT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Package manager install result code.  @hide because result codes are not
yet ready to be exposed.
"
      end

      attribute 457986 "ACTION_UNINSTALL_PACKAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.UNINSTALL_PACKAGE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Launch application uninstaller.
<p>
Input: The data must be a package: URI whose scheme specific part is
the package name of the current installed package to be uninstalled.
You can optionally supply {@link #EXTRA_RETURN_RESULT}.
<p>
Output: If {@link #EXTRA_RETURN_RESULT}, returns whether the install
succeeded.
"
      end

      attribute 458114 "EXTRA_UNINSTALL_ALL_USERS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.UNINSTALL_ALL_USERS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specify whether the package should be uninstalled for all users.
@hide because these should not be part of normal application flow.
"
      end

      attribute 458242 "METADATA_SETUP_VERSION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.SETUP_VERSION\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A string associated with a {@link #ACTION_UPGRADE_SETUP} activity
describing the last run version of the platform that was setup.
@hide
"
      end

      attribute 458370 "ACTION_SCREEN_OFF"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SCREEN_OFF\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------------------------------------
 ---------------------------------------------------------------------
 Standard intent broadcast actions (see action variable).

Broadcast Action: Sent after the screen turns off.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 458498 "ACTION_SCREEN_ON"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SCREEN_ON\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Sent after the screen turns on.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 458626 "ACTION_DREAMING_STOPPED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DREAMING_STOPPED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Sent after the system stops dreaming.

<p class=\"note\">This is a protected intent that can only be sent by the system.
It is only sent to registered receivers.</p>
"
      end

      attribute 458754 "ACTION_DREAMING_STARTED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DREAMING_STARTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Sent after the system starts dreaming.

<p class=\"note\">This is a protected intent that can only be sent by the system.
It is only sent to registered receivers.</p>
"
      end

      attribute 458882 "ACTION_USER_PRESENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.USER_PRESENT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Sent when the user is present after device wakes up (e.g when the
keyguard is gone).

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 459010 "ACTION_TIME_TICK"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.TIME_TICK\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: The current time has changed.  Sent every
minute.  You can <em>not</em> receive this through components declared
in manifests, only by explicitly registering for it with
{@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
Context.registerReceiver()}.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 459138 "ACTION_TIME_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.TIME_SET\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: The time was set.
"
      end

      attribute 459266 "ACTION_DATE_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DATE_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: The date has changed.
"
      end

      attribute 459394 "ACTION_TIMEZONE_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.TIMEZONE_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: The timezone has changed. The intent will have the following extra values:</p>
<ul>
  <li><em>time-zone</em> - The java.util.TimeZone.getID() value identifying the new time zone.</li>
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 459522 "ACTION_CLEAR_DNS_CACHE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CLEAR_DNS_CACHE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Clear DNS Cache Action: This is broadcast when networks have changed and old
DNS entries should be tossed.
@hide
"
      end

      attribute 459650 "ACTION_ALARM_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ALARM_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Alarm Changed Action: This is broadcast when the AlarmClock
application's alarm is set or unset.  It is used by the
AlarmClock application and the StatusBar service.
@hide
"
      end

      attribute 459778 "ACTION_SYNC_STATE_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.SYNC_STATE_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sync State Changed Action: This is broadcast when the sync starts or stops or when one has
been failing for a long time.  It is used by the SyncManager and the StatusBar service.
@hide
"
      end

      attribute 459906 "ACTION_BOOT_COMPLETED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.BOOT_COMPLETED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: This is broadcast once, after the system has finished
booting.  It can be used to perform application-specific initialization,
such as installing alarms.  You must hold the
{@link android.Manifest.permission#RECEIVE_BOOT_COMPLETED} permission
in order to receive this broadcast.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 460034 "ACTION_CLOSE_SYSTEM_DIALOGS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CLOSE_SYSTEM_DIALOGS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: This is broadcast when a user action should request a
temporary system dialog to dismiss.  Some examples of temporary system
dialogs are the notification window-shade and the recent tasks dialog.
"
      end

      attribute 460162 "ACTION_PACKAGE_INSTALL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_INSTALL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
    @SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Trigger the download and eventual installation
of a package.
<p>Input: {@link #getData} is the URI of the package file to download.

<p class=\"note\">This is a protected intent that can only be sent
by the system.

@deprecated This constant has never been used.
"
      end

      attribute 460290 "ACTION_PACKAGE_ADDED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_ADDED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A new application package has been installed on the
device. The data contains the name of the package.  Note that the
newly installed package does <em>not</em> receive this broadcast.
<p>May include the following extras:
<ul>
<li> {@link #EXTRA_UID} containing the integer uid assigned to the new package.
<li> {@link #EXTRA_REPLACING} is set to true if this is following
an {@link #ACTION_PACKAGE_REMOVED} broadcast for the same package.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 460418 "ACTION_PACKAGE_REPLACED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_REPLACED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A new version of an application package has been
installed, replacing an existing version that was previously installed.
The data contains the name of the package.
<p>May include the following extras:
<ul>
<li> {@link #EXTRA_UID} containing the integer uid assigned to the new package.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 460546 "ACTION_MY_PACKAGE_REPLACED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MY_PACKAGE_REPLACED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A new version of your application has been installed
over an existing one.  This is only sent to the application that was
replaced.  It does not contain any additional data; to receive it, just
use an intent filter for this action.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 460674 "ACTION_PACKAGE_REMOVED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_REMOVED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: An existing application package has been removed from
the device.  The data contains the name of the package.  The package
that is being installed does <em>not</em> receive this Intent.
<ul>
<li> {@link #EXTRA_UID} containing the integer uid previously assigned
to the package.
<li> {@link #EXTRA_DATA_REMOVED} is set to true if the entire
application -- data and code -- is being removed.
<li> {@link #EXTRA_REPLACING} is set to true if this will be followed
by an {@link #ACTION_PACKAGE_ADDED} broadcast for the same package.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 460802 "ACTION_PACKAGE_FULLY_REMOVED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_FULLY_REMOVED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: An existing application package has been completely
removed from the device.  The data contains the name of the package.
This is like {@link #ACTION_PACKAGE_REMOVED}, but only set when
{@link #EXTRA_DATA_REMOVED} is true and
{@link #EXTRA_REPLACING} is false of that broadcast.

<ul>
<li> {@link #EXTRA_UID} containing the integer uid previously assigned
to the package.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 460930 "ACTION_PACKAGE_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: An existing application package has been changed (e.g.
a component has been enabled or disabled).  The data contains the name of
the package.
<ul>
<li> {@link #EXTRA_UID} containing the integer uid assigned to the package.
<li> {@link #EXTRA_CHANGED_COMPONENT_NAME_LIST} containing the class name
of the changed components (or the package name itself).
<li> {@link #EXTRA_DONT_KILL_APP} containing boolean field to override the
default action of restarting the application.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 461058 "ACTION_QUERY_PACKAGE_RESTART"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.QUERY_PACKAGE_RESTART\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Broadcast Action: Ask system services if there is any reason to
restart the given package.  The data contains the name of the
package.
<ul>
<li> {@link #EXTRA_UID} containing the integer uid assigned to the package.
<li> {@link #EXTRA_PACKAGES} String array of all packages to check.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 461186 "ACTION_PACKAGE_RESTARTED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_RESTARTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: The user has restarted a package, and all of its
processes have been killed.  All runtime state
associated with it (processes, alarms, notifications, etc) should
be removed.  Note that the restarted package does <em>not</em>
receive this broadcast.
The data contains the name of the package.
<ul>
<li> {@link #EXTRA_UID} containing the integer uid assigned to the package.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 461314 "ACTION_PACKAGE_DATA_CLEARED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_DATA_CLEARED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: The user has cleared the data of a package.  This should
be preceded by {@link #ACTION_PACKAGE_RESTARTED}, after which all of
its persistent data is erased and this broadcast sent.
Note that the cleared package does <em>not</em>
receive this broadcast. The data contains the name of the package.
<ul>
<li> {@link #EXTRA_UID} containing the integer uid assigned to the package.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 461442 "ACTION_UID_REMOVED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.UID_REMOVED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A user ID has been removed from the system.  The user
ID number is stored in the extra data under {@link #EXTRA_UID}.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 461570 "ACTION_PACKAGE_FIRST_LAUNCH"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_FIRST_LAUNCH\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Sent to the installer package of an application
when that application is first launched (that is the first time it
is moved out of the stopped state).  The data contains the name of the package.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 461698 "ACTION_PACKAGE_NEEDS_VERIFICATION"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_NEEDS_VERIFICATION\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Sent to the system package verifier when a package
needs to be verified. The data contains the package URI.
<p class=\"note\">
This is a protected intent that can only be sent by the system.
</p>
"
      end

      attribute 461826 "ACTION_PACKAGE_VERIFIED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.PACKAGE_VERIFIED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Sent to the system package verifier when a package is
verified. The data contains the package URI.
<p class=\"note\">
This is a protected intent that can only be sent by the system.
"
      end

      attribute 461954 "ACTION_EXTERNAL_APPLICATIONS_AVAILABLE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
        \"android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Resources for a set of packages (which were
previously unavailable) are currently
available since the media on which they exist is available.
The extra data {@link #EXTRA_CHANGED_PACKAGE_LIST} contains a
list of packages whose availability changed.
The extra data {@link #EXTRA_CHANGED_UID_LIST} contains a
list of uids of packages whose availability changed.
Note that the
packages in this list do <em>not</em> receive this broadcast.
The specified set of packages are now available on the system.
<p>Includes the following extras:
<ul>
<li> {@link #EXTRA_CHANGED_PACKAGE_LIST} is the set of packages
whose resources(were previously unavailable) are currently available.
{@link #EXTRA_CHANGED_UID_LIST} is the set of uids of the
packages whose resources(were previously unavailable)
are  currently available.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 462082 "ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
        \"android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Resources for a set of packages are currently
unavailable since the media on which they exist is unavailable.
The extra data {@link #EXTRA_CHANGED_PACKAGE_LIST} contains a
list of packages whose availability changed.
The extra data {@link #EXTRA_CHANGED_UID_LIST} contains a
list of uids of packages whose availability changed.
The specified set of packages can no longer be
launched and are practically unavailable on the system.
<p>Inclues the following extras:
<ul>
<li> {@link #EXTRA_CHANGED_PACKAGE_LIST} is the set of packages
whose resources are no longer available.
{@link #EXTRA_CHANGED_UID_LIST} is the set of packages
whose resources are no longer available.
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 462210 "ACTION_WALLPAPER_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.WALLPAPER_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated @SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  The current system wallpaper has changed.  See
{@link android.app.WallpaperManager} for retrieving the new wallpaper.
This should <em>only</em> be used to determine when the wallpaper
has changed to show the new wallpaper to the user.  You should certainly
never, in response to this, change the wallpaper or other attributes of
it such as the suggested size.  That would be crazy, right?  You'd cause
all kinds of loops, especially if other apps are doing similar things,
right?  Of course.  So please don't do this.

@deprecated Modern applications should use
{@link android.view.WindowManager.LayoutParams#FLAG_SHOW_WALLPAPER
WindowManager.LayoutParams.FLAG_SHOW_WALLPAPER} to have the wallpaper
shown behind their UI, rather than watching for this broadcast and
rendering the wallpaper on their own.
"
      end

      attribute 462338 "ACTION_CONFIGURATION_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CONFIGURATION_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: The current device {@link android.content.res.Configuration}
(orientation, locale, etc) has changed.  When such a change happens, the
UIs (view hierarchy) will need to be rebuilt based on this new
information; for the most part, applications don't need to worry about
this, because the system will take care of stopping and restarting the
application to make sure it sees the new changes.  Some system code that
can not be restarted will need to watch for this action and handle it
appropriately.

<p class=\"note\">
You can <em>not</em> receive this through components declared
in manifests, only by explicitly registering for it with
{@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
Context.registerReceiver()}.

<p class=\"note\">This is a protected intent that can only be sent
by the system.

@see android.content.res.Configuration
"
      end

      attribute 462466 "ACTION_LOCALE_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.LOCALE_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: The current device's locale has changed.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 462594 "ACTION_BATTERY_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.BATTERY_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  This is a <em>sticky broadcast</em> containing the
charging state, level, and other information about the battery.
See {@link android.os.BatteryManager} for documentation on the
contents of the Intent.

<p class=\"note\">
You can <em>not</em> receive this through components declared
in manifests, only by explicitly registering for it with
{@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
Context.registerReceiver()}.  See {@link #ACTION_BATTERY_LOW},
{@link #ACTION_BATTERY_OKAY}, {@link #ACTION_POWER_CONNECTED},
and {@link #ACTION_POWER_DISCONNECTED} for distinct battery-related
broadcasts that are sent and can be received through manifest
receivers.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 462722 "ACTION_BATTERY_LOW"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.BATTERY_LOW\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  Indicates low battery condition on the device.
This broadcast corresponds to the \"Low battery warning\" system dialog.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 462850 "ACTION_BATTERY_OKAY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.BATTERY_OKAY\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  Indicates the battery is now okay after being low.
This will be sent after {@link #ACTION_BATTERY_LOW} once the battery has
gone back up to an okay state.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 462978 "ACTION_POWER_CONNECTED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ACTION_POWER_CONNECTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External power has been connected to the device.
This is intended for applications that wish to register specifically to this notification.
Unlike ACTION_BATTERY_CHANGED, applications will be woken for this and so do not have to
stay active to receive this notification.  This action can be used to implement actions
that wait until power is available to trigger.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 463106 "ACTION_POWER_DISCONNECTED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.ACTION_POWER_DISCONNECTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External power has been removed from the device.
This is intended for applications that wish to register specifically to this notification.
Unlike ACTION_BATTERY_CHANGED, applications will be woken for this and so do not have to
stay active to receive this notification.  This action can be used to implement actions
that wait until power is available to trigger.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 463234 "ACTION_SHUTDOWN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ACTION_SHUTDOWN\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  Device is shutting down.
This is broadcast when the device is being shut down (completely turned
off, not sleeping).  Once the broadcast is complete, the final shutdown
will proceed and all unsaved data lost.  Apps will not normally need
to handle this, since the foreground activity will be paused as well.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
<p>May include the following extras:
<ul>
<li> {@link #EXTRA_SHUTDOWN_USERSPACE_ONLY} a boolean that is set to true if this
shutdown is only for userspace processes.  If not set, assumed to be false.
</ul>
"
      end

      attribute 463362 "ACTION_REQUEST_SHUTDOWN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ACTION_REQUEST_SHUTDOWN\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action:  Start this activity to request system shutdown.
The optional boolean extra field {@link #EXTRA_KEY_CONFIRM} can be set to true
to request confirmation from the user before shutting down.

<p class=\"note\">This is a protected intent that can only be sent
by the system.

{@hide}
"
      end

      attribute 463490 "ACTION_DEVICE_STORAGE_LOW"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DEVICE_STORAGE_LOW\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  A sticky broadcast that indicates low memory
condition on the device

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 463618 "ACTION_DEVICE_STORAGE_OK"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DEVICE_STORAGE_OK\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  Indicates low memory condition on the device no longer exists

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 463746 "ACTION_DEVICE_STORAGE_FULL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DEVICE_STORAGE_FULL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  A sticky broadcast that indicates a memory full
condition on the device. This is intended for activities that want
to be able to fill the data partition completely, leaving only
enough free space to prevent system-wide SQLite failures.

<p class=\"note\">This is a protected intent that can only be sent
by the system.

{@hide}
"
      end

      attribute 463874 "ACTION_DEVICE_STORAGE_NOT_FULL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.DEVICE_STORAGE_NOT_FULL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  Indicates memory full condition on the device
no longer exists.

<p class=\"note\">This is a protected intent that can only be sent
by the system.

{@hide}
"
      end

      attribute 464002 "ACTION_MANAGE_PACKAGE_STORAGE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MANAGE_PACKAGE_STORAGE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  Indicates low memory condition notification acknowledged by user
and package management should be started.
This is triggered by the user from the ACTION_DEVICE_STORAGE_LOW
notification.
"
      end

      attribute 464130 "ACTION_UMS_CONNECTED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.UMS_CONNECTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  The device has entered USB Mass Storage mode.
This is used mainly for the USB Settings panel.
Apps should listen for ACTION_MEDIA_MOUNTED and ACTION_MEDIA_UNMOUNTED broadcasts to be notified
when the SD card file system is mounted or unmounted
@deprecated replaced by android.os.storage.StorageEventListener
"
      end

      attribute 464258 "ACTION_UMS_DISCONNECTED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.UMS_DISCONNECTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  The device has exited USB Mass Storage mode.
This is used mainly for the USB Settings panel.
Apps should listen for ACTION_MEDIA_MOUNTED and ACTION_MEDIA_UNMOUNTED broadcasts to be notified
when the SD card file system is mounted or unmounted
@deprecated replaced by android.os.storage.StorageEventListener
"
      end

      attribute 464386 "ACTION_MEDIA_REMOVED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_REMOVED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media has been removed.
The path to the mount point for the removed media is contained in the Intent.mData field.
"
      end

      attribute 464514 "ACTION_MEDIA_UNMOUNTED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_UNMOUNTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media is present, but not mounted at its mount point.
The path to the mount point for the unmounted media is contained in the Intent.mData field.
"
      end

      attribute 464642 "ACTION_MEDIA_CHECKING"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_CHECKING\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media is present, and being disk-checked
The path to the mount point for the checking media is contained in the Intent.mData field.
"
      end

      attribute 464770 "ACTION_MEDIA_NOFS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_NOFS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media is present, but is using an incompatible fs (or is blank)
The path to the mount point for the checking media is contained in the Intent.mData field.
"
      end

      attribute 464898 "ACTION_MEDIA_MOUNTED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_MOUNTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media is present and mounted at its mount point.
The path to the mount point for the mounted media is contained in the Intent.mData field.
The Intent contains an extra with name \"read-only\" and Boolean value to indicate if the
media was mounted read only.
"
      end

      attribute 465026 "ACTION_MEDIA_SHARED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_SHARED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media is unmounted because it is being shared via USB mass storage.
The path to the mount point for the shared media is contained in the Intent.mData field.
"
      end

      attribute 465154 "ACTION_MEDIA_UNSHARED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_UNSHARED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media is no longer being shared via USB mass storage.
The path to the mount point for the previously shared media is contained in the Intent.mData field.

@hide
"
      end

      attribute 465282 "ACTION_MEDIA_BAD_REMOVAL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_BAD_REMOVAL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media was removed from SD card slot, but mount point was not unmounted.
The path to the mount point for the removed media is contained in the Intent.mData field.
"
      end

      attribute 465410 "ACTION_MEDIA_UNMOUNTABLE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_UNMOUNTABLE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  External media is present but cannot be mounted.
The path to the mount point for the unmountable media is contained in the Intent.mData field.
"
      end

      attribute 465538 "ACTION_MEDIA_EJECT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_EJECT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  User has expressed the desire to remove the external storage media.
Applications should close all files they have open within the mount point when they receive this intent.
The path to the mount point for the media to be ejected is contained in the Intent.mData field.
"
      end

      attribute 465666 "ACTION_MEDIA_SCANNER_STARTED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_SCANNER_STARTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  The media scanner has started scanning a directory.
The path to the directory being scanned is contained in the Intent.mData field.
"
      end

      attribute 465794 "ACTION_MEDIA_SCANNER_FINISHED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_SCANNER_FINISHED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  The media scanner has finished scanning a directory.
The path to the scanned directory is contained in the Intent.mData field.
"
      end

      attribute 465922 "ACTION_MEDIA_SCANNER_SCAN_FILE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_SCANNER_SCAN_FILE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  Request the media scanner to scan a file and add it to the media database.
The path to the file is contained in the Intent.mData field.
"
      end

      attribute 466050 "ACTION_MEDIA_BUTTON"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.MEDIA_BUTTON\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  The \"Media Button\" was pressed.  Includes a single
extra field, {@link #EXTRA_KEY_EVENT}, containing the key event that
caused the broadcast.
"
      end

      attribute 466178 "ACTION_CAMERA_BUTTON"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CAMERA_BUTTON\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  The \"Camera Button\" was pressed.  Includes a single
extra field, {@link #EXTRA_KEY_EVENT}, containing the key event that
caused the broadcast.
"
      end

      attribute 466306 "ACTION_GTALK_SERVICE_CONNECTED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.GTALK_CONNECTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " *** NOTE: @todo(*) The following really should go into a more domain-specific
 location; they are not general-purpose actions.

Broadcast Action: A GTalk connection has been established.
"
      end

      attribute 466434 "ACTION_GTALK_SERVICE_DISCONNECTED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.GTALK_DISCONNECTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A GTalk connection has been disconnected.
"
      end

      attribute 466562 "ACTION_INPUT_METHOD_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.INPUT_METHOD_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: An input method has been changed.
"
      end

      attribute 466690 "ACTION_AIRPLANE_MODE_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.AIRPLANE_MODE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Broadcast Action: The user has switched the phone into or out of Airplane Mode. One or
more radios have been turned off or on. The intent will have the following extra value:</p>
<ul>
  <li><em>state</em> - A boolean value indicating whether Airplane Mode is on. If true,
  then cell radio and possibly other radios such as bluetooth or WiFi may have also been
  turned off</li>
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 466818 "ACTION_PROVIDER_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.PROVIDER_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Some content providers have parts of their namespace
where they publish new events or items that the user may be especially
interested in. For these things, they may broadcast this action when the
set of interesting items change.

For example, GmailProvider sends this notification when the set of unread
mail in the inbox changes.

<p>The data of the intent identifies which part of which provider
changed. When queried through the content resolver, the data URI will
return the data set in question.

<p>The intent will have the following extra values:
<ul>
  <li><em>count</em> - The number of items in the data set. This is the
      same as the number of items in the cursor returned by querying the
      data URI. </li>
</ul>

This intent will be sent at boot (if the count is non-zero) and when the
data set changes. It is possible for the data set to change without the
count changing (for example, if a new unread message arrives in the same
sync operation in which a message is archived). The phone should still
ring/vibrate/etc as normal in this case.
"
      end

      attribute 466946 "ACTION_HEADSET_PLUG"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.HEADSET_PLUG\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Wired Headset plugged in or unplugged.

<p>The intent will have the following extra values:
<ul>
  <li><em>state</em> - 0 for unplugged, 1 for plugged. </li>
  <li><em>name</em> - Headset type, human readable string </li>
  <li><em>microphone</em> - 1 if headset has a microphone, 0 otherwise </li>
</ul>
</ul>
"
      end

      attribute 467074 "ACTION_WIFI_DISPLAY_VIDEO"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"org.codeaurora.intent.action.WIFI_DISPLAY_VIDEO\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: WiFi Display video is enabled or disabled

<p>The intent will have the following extra values:
<ul>
  <li><em>state</em> - 0 for disabled, 1 for enabled. </li>
</ul>
@hide
"
      end

      attribute 467202 "ACTION_ANALOG_AUDIO_DOCK_PLUG"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.ANALOG_AUDIO_DOCK_PLUG\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: An analog audio speaker/headset plugged in or unplugged.

<p>The intent will have the following extra values:
<ul>
  <li><em>state</em> - 0 for unplugged, 1 for plugged. </li>
  <li><em>name</em> - Headset type, human readable string </li>
</ul>
</ul>
@hide
"
      end

      attribute 467330 "ACTION_DIGITAL_AUDIO_DOCK_PLUG"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.DIGITAL_AUDIO_DOCK_PLUG\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A digital audio speaker/headset plugged in or unplugged.

<p>The intent will have the following extra values:
<ul>
  <li><em>state</em> - 0 for unplugged, 1 for plugged. </li>
  <li><em>name</em> - Headset type, human readable string </li>
</ul>
</ul>
@hide
"
      end

      attribute 467458 "ACTION_HDMI_AUDIO_PLUG"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.HDMI_AUDIO_PLUG\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A HMDI cable was plugged or unplugged

<p>The intent will have the following extra values:
<ul>
  <li><em>state</em> - 0 for unplugged, 1 for plugged. </li>
  <li><em>name</em> - HDMI cable, human readable string </li>
</ul>
</ul>
@hide
"
      end

      attribute 467586 "ACTION_USB_AUDIO_ACCESSORY_PLUG"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USB_AUDIO_ACCESSORY_PLUG\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A USB audio accessory was plugged in or unplugged.

<p>The intent will have the following extra values:
<ul>
  <li><em>state</em> - 0 for unplugged, 1 for plugged. </li>
  <li><em>card</em> - ALSA card number (integer) </li>
  <li><em>device</em> - ALSA device number (integer) </li>
</ul>
</ul>
@hide
"
      end

      attribute 467714 "ACTION_USB_AUDIO_DEVICE_PLUG"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USB_AUDIO_DEVICE_PLUG\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A USB audio device was plugged in or unplugged.

<p>The intent will have the following extra values:
<ul>
  <li><em>state</em> - 0 for unplugged, 1 for plugged. </li>
  <li><em>card</em> - ALSA card number (integer) </li>
  <li><em>device</em> - ALSA device number (integer) </li>
</ul>
</ul>
@hide
"
      end

      attribute 467842 "ACTION_ADVANCED_SETTINGS_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.ADVANCED_SETTINGS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<p>Broadcast Action: The user has switched on advanced settings in the settings app:</p>
<ul>
  <li><em>state</em> - A boolean value indicating whether the settings is on or off.</li>
</ul>

<p class=\"note\">This is a protected intent that can only be sent
by the system.

@hide

@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)"
      end

      attribute 467970 "ACTION_NEW_OUTGOING_CALL"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.NEW_OUTGOING_CALL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: An outgoing call is about to be placed.

<p>The Intent will have the following extra value:</p>
<ul>
  <li><em>{@link android.content.Intent#EXTRA_PHONE_NUMBER}</em> -
      the phone number originally intended to be dialed.</li>
</ul>
<p>Once the broadcast is finished, the resultData is used as the actual
number to call.  If  <code>null</code>, no call will be placed.</p>
<p>It is perfectly acceptable for multiple receivers to process the
outgoing call in turn: for example, a parental control application
might verify that the user is authorized to place the call at that
time, then a number-rewriting application might add an area code if
one was not specified.</p>
<p>For consistency, any receiver whose purpose is to prohibit phone
calls should have a priority of 0, to ensure it will see the final
phone number to be dialed.
Any receiver whose purpose is to rewrite phone numbers to be called
should have a positive priority.
Negative priorities are reserved for the system for this broadcast;
using them may cause problems.</p>
<p>Any BroadcastReceiver receiving this Intent <em>must not</em>
abort the broadcast.</p>
<p>Emergency calls cannot be intercepted using this mechanism, and
other calls cannot be modified to call emergency numbers using this
mechanism.
<p>Some apps (such as VoIP apps) may want to redirect the outgoing
call to use their own service instead. Those apps should first prevent
the call from being placed by setting resultData to <code>null</code>
and then start their own app to make the call.
<p>You must hold the
{@link android.Manifest.permission#PROCESS_OUTGOING_CALLS}
permission to receive this Intent.</p>

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 468098 "ACTION_REBOOT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.REBOOT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: Have the device reboot.  This is only for use by
system code.

<p class=\"note\">This is a protected intent that can only be sent
by the system.
"
      end

      attribute 468226 "ACTION_DOCK_EVENT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.DOCK_EVENT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  A sticky broadcast for changes in the physical
docking state of the device.

<p>The intent will have the following extra values:
<ul>
  <li><em>{@link #EXTRA_DOCK_STATE}</em> - the current dock
      state, indicating which dock the device is physically in.</li>
</ul>
<p>This is intended for monitoring the current physical dock state.
See {@link android.app.UiModeManager} for the normal API dealing with
dock mode changes.
"
      end

      attribute 468354 "ACTION_IDLE_MAINTENANCE_START"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.ACTION_IDLE_MAINTENANCE_START\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: A broadcast when idle maintenance can be started.
This means that the user is not interacting with the device and is
not expected to do so soon. Typical use of the idle maintenance is
to perform somehow expensive tasks that can be postponed at a moment
when they will not degrade user experience.
<p>
<p class=\"note\">In order to keep the device responsive in case of an
unexpected user interaction, implementations of a maintenance task
should be interruptible. In such a scenario a broadcast with action
{@link #ACTION_IDLE_MAINTENANCE_END} will be sent. In other words, you
should not do the maintenance work in
{@link BroadcastReceiver#onReceive(Context, Intent)}, rather start a
maintenance service by {@link Context#startService(Intent)}. Also
you should hold a wake lock while your maintenance service is running
to prevent the device going to sleep.
</p>
<p>
<p class=\"note\">This is a protected intent that can only be sent by
the system.
</p>

@see #ACTION_IDLE_MAINTENANCE_END

@hide
"
      end

      attribute 468482 "ACTION_IDLE_MAINTENANCE_END"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.ACTION_IDLE_MAINTENANCE_END\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.BROADCAST_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  A broadcast when idle maintenance should be stopped.
This means that the user was not interacting with the device as a result
of which a broadcast with action {@link #ACTION_IDLE_MAINTENANCE_START}
was sent and now the user started interacting with the device. Typical
use of the idle maintenance is to perform somehow expensive tasks that
can be postponed at a moment when they will not degrade user experience.
<p>
<p class=\"note\">In order to keep the device responsive in case of an
unexpected user interaction, implementations of a maintenance task
should be interruptible. Hence, on receiving a broadcast with this
action, the maintenance task should be interrupted as soon as possible.
In other words, you should not do the maintenance work in
{@link BroadcastReceiver#onReceive(Context, Intent)}, rather stop the
maintenance service that was started on receiving of
{@link #ACTION_IDLE_MAINTENANCE_START}.Also you should release the wake
lock you acquired when your maintenance service started.
</p>
<p class=\"note\">This is a protected intent that can only be sent
by the system.

@see #ACTION_IDLE_MAINTENANCE_START

@hide
"
      end

      attribute 468610 "ACTION_REMOTE_INTENT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"com.google.android.c2dm.intent.RECEIVE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: a remote intent is to be broadcasted.

A remote intent is used for remote RPC between devices. The remote intent
is serialized and sent from one device to another device. The receiving
device parses the remote intent and broadcasts it. Note that anyone can
broadcast a remote intent. However, if the intent receiver of the remote intent
does not trust intent broadcasts from arbitrary intent senders, it should require
the sender to hold certain permissions so only trusted sender's broadcast will be
let through.
@hide
"
      end

      attribute 468738 "ACTION_PRE_BOOT_COMPLETED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.PRE_BOOT_COMPLETED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: hook for permforming cleanup after a system update.

The broadcast is sent when the system is booting, before the
BOOT_COMPLETED broadcast.  It is only sent to receivers in the system
image.  A receiver for this should do its work and then disable itself
so that it does not get run again at the next boot.
@hide
"
      end

      attribute 468866 "ACTION_GET_RESTRICTION_ENTRIES"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.GET_RESTRICTION_ENTRIES\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast to a specific application to query any supported restrictions to impose
on restricted users. The broadcast intent contains an extra
{@link #EXTRA_RESTRICTIONS_BUNDLE} with the currently persisted
restrictions as a Bundle of key/value pairs. The value types can be Boolean, String or
String[] depending on the restriction type.<p/>
The response should contain an extra {@link #EXTRA_RESTRICTIONS_LIST},
which is of type <code>ArrayList&lt;RestrictionEntry&gt;</code>. It can also
contain an extra {@link #EXTRA_RESTRICTIONS_INTENT}, which is of type <code>Intent</code>.
The activity specified by that intent will be launched for a result which must contain
one of the extras {@link #EXTRA_RESTRICTIONS_LIST} or {@link #EXTRA_RESTRICTIONS_BUNDLE}.
The keys and values of the returned restrictions will be persisted.
@see RestrictionEntry
"
      end

      attribute 468994 "ACTION_RESTRICTIONS_CHALLENGE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.RESTRICTIONS_CHALLENGE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Activity to challenge the user for a PIN that was configured when setting up
restrictions. Restrictions include blocking of apps and preventing certain user operations,
controlled by {@link android.os.UserManager#setUserRestrictions(Bundle).
Launch the activity using
{@link android.app.Activity#startActivityForResult(Intent, int)} and check if the
result is {@link android.app.Activity#RESULT_OK} for a successful response to the
challenge.<p/>
Before launching this activity, make sure that there is a PIN in effect, by calling
{@link android.os.UserManager#hasRestrictionsChallenge()}.
"
      end

      attribute 469122 "ACTION_USER_INITIALIZE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_INITIALIZE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent the first time a user is starting, to allow system apps to
perform one time initialization.  (This will not be seen by third
party applications because a newly initialized user does not have any
third party applications installed for it.)  This is sent early in
starting the user, around the time the home app is started, before
{@link #ACTION_BOOT_COMPLETED} is sent.  This is sent as a foreground
broadcast, since it is part of a visible user interaction; be as quick
as possible when handling it.
"
      end

      attribute 469250 "ACTION_USER_FOREGROUND"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_FOREGROUND\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when a user switch is happening, causing the process's user to be
brought to the foreground.  This is only sent to receivers registered
through {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
Context.registerReceiver}.  It is sent to the user that is going to the
foreground.  This is sent as a foreground
broadcast, since it is part of a visible user interaction; be as quick
as possible when handling it.
"
      end

      attribute 469378 "ACTION_USER_BACKGROUND"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_BACKGROUND\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when a user switch is happening, causing the process's user to be
sent to the background.  This is only sent to receivers registered
through {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)
Context.registerReceiver}.  It is sent to the user that is going to the
background.  This is sent as a foreground
broadcast, since it is part of a visible user interaction; be as quick
as possible when handling it.
"
      end

      attribute 469506 "ACTION_USER_ADDED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_ADDED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast sent to the system when a user is added. Carries an extra
EXTRA_USER_HANDLE that has the userHandle of the new user.  It is sent to
all running users.  You must hold
{@link android.Manifest.permission#MANAGE_USERS} to receive this broadcast.
@hide
"
      end

      attribute 469634 "ACTION_USER_STARTED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_STARTED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast sent by the system when a user is started. Carries an extra
EXTRA_USER_HANDLE that has the userHandle of the user.  This is only sent to
registered receivers, not manifest receivers.  It is sent to the user
that has been started.  This is sent as a foreground
broadcast, since it is part of a visible user interaction; be as quick
as possible when handling it.
@hide
"
      end

      attribute 469762 "ACTION_USER_STARTING"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_STARTING\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast sent when a user is in the process of starting.  Carries an extra
EXTRA_USER_HANDLE that has the userHandle of the user.  This is only
sent to registered receivers, not manifest receivers.  It is sent to all
users (including the one that is being started).  You must hold
{@link android.Manifest.permission#INTERACT_ACROSS_USERS} to receive
this broadcast.  This is sent as a background broadcast, since
its result is not part of the primary UX flow; to safely keep track of
started/stopped state of a user you can use this in conjunction with
{@link #ACTION_USER_STOPPING}.  It is <b>not</b> generally safe to use with
other user state broadcasts since those are foreground broadcasts so can
execute in a different order.
@hide
"
      end

      attribute 469890 "ACTION_USER_STOPPING"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_STOPPING\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast sent when a user is going to be stopped.  Carries an extra
EXTRA_USER_HANDLE that has the userHandle of the user.  This is only
sent to registered receivers, not manifest receivers.  It is sent to all
users (including the one that is being stopped).  You must hold
{@link android.Manifest.permission#INTERACT_ACROSS_USERS} to receive
this broadcast.  The user will not stop until all receivers have
handled the broadcast.  This is sent as a background broadcast, since
its result is not part of the primary UX flow; to safely keep track of
started/stopped state of a user you can use this in conjunction with
{@link #ACTION_USER_STARTING}.  It is <b>not</b> generally safe to use with
other user state broadcasts since those are foreground broadcasts so can
execute in a different order.
@hide
"
      end

      attribute 470018 "ACTION_USER_STOPPED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_STOPPED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast sent to the system when a user is stopped. Carries an extra
EXTRA_USER_HANDLE that has the userHandle of the user.  This is similar to
{@link #ACTION_PACKAGE_RESTARTED}, but for an entire user instead of a
specific package.  This is only sent to registered receivers, not manifest
receivers.  It is sent to all running users <em>except</em> the one that
has just been stopped (which is no longer running).
@hide
"
      end

      attribute 470146 "ACTION_USER_REMOVED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_REMOVED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast sent to the system when a user is removed. Carries an extra EXTRA_USER_HANDLE that has
the userHandle of the user.  It is sent to all running users except the
one that has been removed. The user will not be completely removed until all receivers have
handled the broadcast. You must hold
{@link android.Manifest.permission#MANAGE_USERS} to receive this broadcast.
@hide
"
      end

      attribute 470274 "ACTION_USER_SWITCHED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_SWITCHED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast sent to the system when the user switches. Carries an extra EXTRA_USER_HANDLE that has
the userHandle of the user to become the current one. This is only sent to
registered receivers, not manifest receivers.  It is sent to all running users.
You must hold
{@link android.Manifest.permission#MANAGE_USERS} to receive this broadcast.
@hide
"
      end

      attribute 470402 "ACTION_USER_INFO_CHANGED"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.USER_INFO_CHANGED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast sent to the system when a user's information changes. Carries an extra
{@link #EXTRA_USER_HANDLE} to indicate which user's information changed.
This is only sent to registered receivers, not manifest receivers. It is sent to all users.
@hide
"
      end

      attribute 470530 "ACTION_QUICK_CLOCK"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.QUICK_CLOCK\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Sent when the user taps on the clock widget in the system's \"quick settings\" area.
"
      end

      attribute 470658 "ACTION_SHOW_BRIGHTNESS_DIALOG"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.action.SHOW_BRIGHTNESS_DIALOG\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action: This is broadcast when a user action should request the
brightness setting dialog.
@hide
"
      end

      attribute 470786 "ACTION_GLOBAL_BUTTON"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.GLOBAL_BUTTON\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Broadcast Action:  A global button was pressed.  Includes a single
extra field, {@link #EXTRA_KEY_EVENT}, containing the key event that
caused the broadcast.
@hide
"
      end

      attribute 470914 "ACTION_OPEN_DOCUMENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.OPEN_DOCUMENT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Allow the user to select and return one or more existing
documents. When invoked, the system will display the various
{@link DocumentsProvider} instances installed on the device, letting the
user interactively navigate through them. These documents include local
media, such as photos and video, and documents provided by installed
cloud storage providers.
<p>
Each document is represented as a {@code content://} URI backed by a
{@link DocumentsProvider}, which can be opened as a stream with
{@link ContentResolver#openFileDescriptor(Uri, String)}, or queried for
{@link android.provider.DocumentsContract.Document} metadata.
<p>
All selected documents are returned to the calling application with
persistable read and write permission grants. If you want to maintain
access to the documents across device reboots, you need to explicitly
take the persistable permissions using
{@link ContentResolver#takePersistableUriPermission(Uri, int)}.
<p>
Callers can restrict document selection to a specific kind of data, such
as photos, by setting one or more MIME types in
{@link #EXTRA_MIME_TYPES}.
<p>
If the caller can handle multiple returned items (the user performing
multiple selection), then you can specify {@link #EXTRA_ALLOW_MULTIPLE}
to indicate this.
<p>
Callers must include {@link #CATEGORY_OPENABLE} in the Intent so that
returned URIs can be opened with
{@link ContentResolver#openFileDescriptor(Uri, String)}.
<p>
Output: The URI of the item that was picked. This must be a
{@code content://} URI so that any receiver can access it. If multiple
documents were selected, they are returned in {@link #getClipData()}.

@see DocumentsContract
@see #ACTION_CREATE_DOCUMENT
@see #FLAG_GRANT_PERSISTABLE_URI_PERMISSION
"
      end

      attribute 471042 "ACTION_CREATE_DOCUMENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.action.CREATE_DOCUMENT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.ACTIVITY_INTENT_ACTION)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activity Action: Allow the user to create a new document. When invoked,
the system will display the various {@link DocumentsProvider} instances
installed on the device, letting the user navigate through them. The
returned document may be a newly created document with no content, or it
may be an existing document with the requested MIME type.
<p>
Each document is represented as a {@code content://} URI backed by a
{@link DocumentsProvider}, which can be opened as a stream with
{@link ContentResolver#openFileDescriptor(Uri, String)}, or queried for
{@link android.provider.DocumentsContract.Document} metadata.
<p>
Callers must indicate the concrete MIME type of the document being
created by setting {@link #setType(String)}. This MIME type cannot be
changed after the document is created.
<p>
Callers can provide an initial display name through {@link #EXTRA_TITLE},
but the user may change this value before creating the file.
<p>
Callers must include {@link #CATEGORY_OPENABLE} in the Intent so that
returned URIs can be opened with
{@link ContentResolver#openFileDescriptor(Uri, String)}.
<p>
Output: The URI of the item that was created. This must be a
{@code content://} URI so that any receiver can access it.

@see DocumentsContract
@see #ACTION_OPEN_DOCUMENT
@see #FLAG_GRANT_PERSISTABLE_URI_PERMISSION
"
      end

      attribute 471170 "CATEGORY_DEFAULT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.DEFAULT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------------------------------------
 ---------------------------------------------------------------------
 Standard intent categories (see addCategory()).

Set if the activity should be an option for the default action
(center press) to perform on a piece of data.  Setting this will
hide from the user any activities without it set when performing an
action on some data.  Note that this is normally -not- set in the
Intent when initiating an action -- it is for use in intent filters
specified in packages.
"
      end

      attribute 471298 "CATEGORY_BROWSABLE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.BROWSABLE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Activities that can be safely invoked from a browser must support this
category.  For example, if the user is viewing a web page or an e-mail
and clicks on a link in the text, the Intent generated execute that
link will require the BROWSABLE category, so that only activities
supporting this category will be considered as possible actions.  By
supporting this category, you are promising that there is nothing
damaging (without user intervention) that can happen by invoking any
matching Intent.
"
      end

      attribute 471426 "CATEGORY_ALTERNATIVE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.ALTERNATIVE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set if the activity should be considered as an alternative action to
the data the user is currently viewing.  See also
{@link #CATEGORY_SELECTED_ALTERNATIVE} for an alternative action that
applies to the selection in a list of items.

<p>Supporting this category means that you would like your activity to be
displayed in the set of alternative things the user can do, usually as
part of the current activity's options menu.  You will usually want to
include a specific label in the &lt;intent-filter&gt; of this action
describing to the user what it does.

<p>The action of IntentFilter with this category is important in that it
describes the specific action the target will perform.  This generally
should not be a generic action (such as {@link #ACTION_VIEW}, but rather
a specific name such as \"com.android.camera.action.CROP.  Only one
alternative of any particular action will be shown to the user, so using
a specific action like this makes sure that your alternative will be
displayed while also allowing other applications to provide their own
overrides of that particular action.
"
      end

      attribute 471554 "CATEGORY_SELECTED_ALTERNATIVE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.SELECTED_ALTERNATIVE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set if the activity should be considered as an alternative selection
action to the data the user has currently selected.  This is like
{@link #CATEGORY_ALTERNATIVE}, but is used in activities showing a list
of items from which the user can select, giving them alternatives to the
default action that will be performed on it.
"
      end

      attribute 471682 "CATEGORY_TAB"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.TAB\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Intended to be used as a tab inside of a containing TabActivity.
"
      end

      attribute 471810 "CATEGORY_LAUNCHER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.LAUNCHER\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Should be displayed in the top-level launcher.
"
      end

      attribute 471938 "CATEGORY_INFO"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.INFO\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Provides information about the package it is in; typically used if
a package does not contain a {@link #CATEGORY_LAUNCHER} to provide
a front-door to the user without having to be shown in the all apps list.
"
      end

      attribute 472066 "CATEGORY_HOME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.HOME\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This is the home activity, that is the first activity that is displayed
when the device boots.
"
      end

      attribute 472194 "CATEGORY_PREFERENCE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.PREFERENCE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This activity is a preference panel.
"
      end

      attribute 472322 "CATEGORY_DEVELOPMENT_PREFERENCE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.DEVELOPMENT_PREFERENCE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This activity is a development preference panel.
"
      end

      attribute 472450 "CATEGORY_EMBED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.EMBED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Capable of running inside a parent activity container.
"
      end

      attribute 472578 "CATEGORY_APP_MARKET"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_MARKET\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This activity allows the user to browse and download new applications.
"
      end

      attribute 472706 "CATEGORY_MONKEY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.MONKEY\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This activity may be exercised by the monkey or other automated test tools.
"
      end

      attribute 472834 "CATEGORY_TEST"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.TEST\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "To be used as a test (not part of the normal user experience).
"
      end

      attribute 472962 "CATEGORY_UNIT_TEST"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.UNIT_TEST\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "To be used as a unit test (run through the Test Harness).
"
      end

      attribute 473090 "CATEGORY_SAMPLE_CODE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.SAMPLE_CODE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "To be used as a sample code example (not part of the normal user
experience).
"
      end

      attribute 473218 "CATEGORY_OPENABLE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.OPENABLE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to indicate that an intent only wants URIs that can be opened with
{@link ContentResolver#openFileDescriptor(Uri, String)}. Openable URIs
must support at least the columns defined in {@link OpenableColumns} when
queried.

@see #ACTION_GET_CONTENT
@see #ACTION_OPEN_DOCUMENT
@see #ACTION_CREATE_DOCUMENT
"
      end

      attribute 473346 "CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.category.FRAMEWORK_INSTRUMENTATION_TEST\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "To be used as code under test for framework instrumentation tests.
"
      end

      attribute 473474 "CATEGORY_CAR_DOCK"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.CAR_DOCK\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An activity to run when device is inserted into a car dock.
Used with {@link #ACTION_MAIN} to launch an activity.  For more
information, see {@link android.app.UiModeManager}.
"
      end

      attribute 473602 "CATEGORY_DESK_DOCK"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.DESK_DOCK\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An activity to run when device is inserted into a car dock.
Used with {@link #ACTION_MAIN} to launch an activity.  For more
information, see {@link android.app.UiModeManager}.
"
      end

      attribute 473730 "CATEGORY_LE_DESK_DOCK"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.LE_DESK_DOCK\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An activity to run when device is inserted into a analog (low end) dock.
Used with {@link #ACTION_MAIN} to launch an activity.  For more
information, see {@link android.app.UiModeManager}.
"
      end

      attribute 473858 "CATEGORY_HE_DESK_DOCK"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.HE_DESK_DOCK\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An activity to run when device is inserted into a digital (high end) dock.
Used with {@link #ACTION_MAIN} to launch an activity.  For more
information, see {@link android.app.UiModeManager}.
"
      end

      attribute 473986 "CATEGORY_CAR_MODE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.CAR_MODE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used to indicate that the activity can be used in a car environment.
"
      end

      attribute 474114 "CATEGORY_APP_BROWSER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_BROWSER\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------------------------------------
 ---------------------------------------------------------------------
 Application launch intent categories (see addCategory()).

Used with {@link #ACTION_MAIN} to launch the browser application.
The activity should be able to browse the Internet.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 474242 "CATEGORY_APP_CALCULATOR"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_CALCULATOR\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used with {@link #ACTION_MAIN} to launch the calculator application.
The activity should be able to perform standard arithmetic operations.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 474370 "CATEGORY_APP_CALENDAR"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_CALENDAR\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used with {@link #ACTION_MAIN} to launch the calendar application.
The activity should be able to view and manipulate calendar entries.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 474498 "CATEGORY_APP_CONTACTS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_CONTACTS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used with {@link #ACTION_MAIN} to launch the contacts application.
The activity should be able to view and manipulate address book entries.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 474626 "CATEGORY_APP_EMAIL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_EMAIL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used with {@link #ACTION_MAIN} to launch the email application.
The activity should be able to send and receive email.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 474754 "CATEGORY_APP_GALLERY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_GALLERY\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used with {@link #ACTION_MAIN} to launch the gallery application.
The activity should be able to view and manipulate image and video files
stored on the device.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 474882 "CATEGORY_APP_MAPS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_MAPS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used with {@link #ACTION_MAIN} to launch the maps application.
The activity should be able to show the user's current location and surroundings.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 475010 "CATEGORY_APP_MESSAGING"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_MESSAGING\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used with {@link #ACTION_MAIN} to launch the messaging application.
The activity should be able to send and receive text messages.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 475138 "CATEGORY_APP_MUSIC"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.category.APP_MUSIC\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@SdkConstant(SdkConstantType.INTENT_CATEGORY)
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used with {@link #ACTION_MAIN} to launch the music application.
The activity should be able to play, browse, or manipulate music files
stored on the device.
<p>NOTE: This should not be used as the primary key of an Intent,
since it will not result in the app launching with the correct
action and category.  Instead, use this with
{@link #makeMainSelectorActivity(String, String)} to generate a main
Intent with this category in the selector.</p>
"
      end

      attribute 475266 "EXTRA_TEMPLATE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.TEMPLATE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------------------------------------
 ---------------------------------------------------------------------
 Standard extra data keys.

The initial data to place in a newly created record.  Use with
{@link #ACTION_INSERT}.  The data here is a Map containing the same
fields as would be given to the underlying ContentProvider.insert()
call.
"
      end

      attribute 475394 "EXTRA_TEXT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.TEXT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant CharSequence that is associated with the Intent, used with
{@link #ACTION_SEND} to supply the literal data to be sent.  Note that
this may be a styled CharSequence, so you must use
{@link Bundle#getCharSequence(String) Bundle.getCharSequence()} to
retrieve it.
"
      end

      attribute 475522 "EXTRA_HTML_TEXT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.HTML_TEXT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant String that is associated with the Intent, used with
{@link #ACTION_SEND} to supply an alternative to {@link #EXTRA_TEXT}
as HTML formatted text.  Note that you <em>must</em> also supply
{@link #EXTRA_TEXT}.
"
      end

      attribute 475650 "EXTRA_STREAM"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.STREAM\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A content: URI holding a stream of data associated with the Intent,
used with {@link #ACTION_SEND} to supply the data being sent.
"
      end

      attribute 475778 "EXTRA_EMAIL"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.EMAIL\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A String[] holding e-mail addresses that should be delivered to.
"
      end

      attribute 475906 "EXTRA_CC"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.CC\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A String[] holding e-mail addresses that should be carbon copied.
"
      end

      attribute 476034 "EXTRA_BCC"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.BCC\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A String[] holding e-mail addresses that should be blind carbon copied.
"
      end

      attribute 476162 "EXTRA_SUBJECT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.SUBJECT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A constant string holding the desired subject line of a message.
"
      end

      attribute 476290 "EXTRA_INTENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.INTENT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "An Intent describing the choices you would like shown with
{@link #ACTION_PICK_ACTIVITY}.
"
      end

      attribute 476418 "EXTRA_TITLE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.TITLE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A CharSequence dialog title to provide to the user when used with a
{@link #ACTION_CHOOSER}.
"
      end

      attribute 476546 "EXTRA_INITIAL_INTENTS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.INITIAL_INTENTS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A Parcelable[] of {@link Intent} or
{@link android.content.pm.LabeledIntent} objects as set with
{@link #putExtra(String, Parcelable[])} of additional activities to place
a the front of the list of choices, when shown to the user with a
{@link #ACTION_CHOOSER}.
"
      end

      attribute 476674 "EXTRA_KEY_EVENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.KEY_EVENT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A {@link android.view.KeyEvent} object containing the event that
triggered the creation of the Intent it is in.
"
      end

      attribute 476802 "EXTRA_KEY_CONFIRM"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.KEY_CONFIRM\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set to true in {@link #ACTION_REQUEST_SHUTDOWN} to request confirmation from the user
before shutting down.

{@hide}
"
      end

      attribute 476930 "EXTRA_DONT_KILL_APP"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.DONT_KILL_APP\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a boolean extra field in {@link android.content.Intent#ACTION_PACKAGE_REMOVED} or
{@link android.content.Intent#ACTION_PACKAGE_CHANGED} intents to override the default action
of restarting the application.
"
      end

      attribute 477058 "EXTRA_PHONE_NUMBER"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.PHONE_NUMBER\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A String holding the phone number originally entered in
{@link android.content.Intent#ACTION_NEW_OUTGOING_CALL}, or the actual
number to call in a {@link android.content.Intent#ACTION_CALL}.
"
      end

      attribute 477186 "EXTRA_UID"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.UID\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int extra field in {@link android.content.Intent#ACTION_UID_REMOVED}
intents to supply the uid the package had been assigned.  Also an optional
extra in {@link android.content.Intent#ACTION_PACKAGE_REMOVED} or
{@link android.content.Intent#ACTION_PACKAGE_CHANGED} for the same
purpose.
"
      end

      attribute 477314 "EXTRA_PACKAGES"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.PACKAGES\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide String array of package names.
"
      end

      attribute 477442 "EXTRA_DATA_REMOVED"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.DATA_REMOVED\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a boolean extra field in {@link android.content.Intent#ACTION_PACKAGE_REMOVED}
intents to indicate whether this represents a full uninstall (removing
both the code and its data) or a partial uninstall (leaving its data,
implying that this is an update).
"
      end

      attribute 477570 "EXTRA_REMOVED_FOR_ALL_USERS"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.REMOVED_FOR_ALL_USERS\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Used as a boolean extra field in {@link android.content.Intent#ACTION_PACKAGE_REMOVED}
intents to indicate that at this point the package has been removed for
all users on the device.
"
      end

      attribute 477698 "EXTRA_REPLACING"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.REPLACING\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a boolean extra field in {@link android.content.Intent#ACTION_PACKAGE_REMOVED}
intents to indicate that this is a replacement of the package, so this
broadcast will immediately be followed by an add broadcast for a
different version of the same package.
"
      end

      attribute 477826 "EXTRA_ALARM_COUNT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.ALARM_COUNT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int extra field in {@link android.app.AlarmManager} intents
to tell the application being invoked how many pending alarms are being
delievered with the intent.  For one-shot alarms this will always be 1.
For recurring alarms, this might be greater than 1 if the device was
asleep or powered off at the time an earlier alarm would have been
delivered.
"
      end

      attribute 477954 "EXTRA_DOCK_STATE"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.DOCK_STATE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int extra field in {@link android.content.Intent#ACTION_DOCK_EVENT}
intents to request the dock state.  Possible values are
{@link android.content.Intent#EXTRA_DOCK_STATE_UNDOCKED},
{@link android.content.Intent#EXTRA_DOCK_STATE_DESK}, or
{@link android.content.Intent#EXTRA_DOCK_STATE_CAR}, or
{@link android.content.Intent#EXTRA_DOCK_STATE_LE_DESK}, or
{@link android.content.Intent#EXTRA_DOCK_STATE_HE_DESK}.
"
      end

      attribute 478082 "EXTRA_DOCK_STATE_UNDOCKED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is not in any dock.
"
      end

      attribute 478210 "EXTRA_DOCK_STATE_DESK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is in a desk dock.
"
      end

      attribute 478338 "EXTRA_DOCK_STATE_CAR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is in a car dock.
"
      end

      attribute 478466 "EXTRA_DOCK_STATE_LE_DESK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is in a analog (low end) dock.
"
      end

      attribute 478594 "EXTRA_DOCK_STATE_HE_DESK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as an int value for {@link android.content.Intent#EXTRA_DOCK_STATE}
to represent that the phone is in a digital (high end) dock.
"
      end

      attribute 478722 "METADATA_DOCK_HOME"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.dock_home\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Boolean that can be supplied as meta-data with a dock activity, to
indicate that the dock should take over the home key when it is active.
"
      end

      attribute 478850 "EXTRA_BUG_REPORT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.BUG_REPORT\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used as a parcelable extra field in {@link #ACTION_APP_ERROR}, containing
the bug report.
"
      end

      attribute 478978 "EXTRA_REMOTE_INTENT_TOKEN"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.remote_intent_token\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Used in the extra field in the remote intent. It's astring token passed with the
remote intent.
"
      end

      attribute 479106 "EXTRA_CHANGED_COMPONENT_NAME"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.changed_component_name\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated See {@link #EXTRA_CHANGED_COMPONENT_NAME_LIST}; this field
will contain only the first name in the list.
"
      end

      attribute 479234 "EXTRA_CHANGED_COMPONENT_NAME_LIST"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.changed_component_name_list\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This field is part of {@link android.content.Intent#ACTION_PACKAGE_CHANGED},
and contains a string array of all of the components that have changed.  If
the state of the overall package has changed, then it will contain an entry
with the package name itself.
"
      end

      attribute 479362 "EXTRA_CHANGED_PACKAGE_LIST"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.changed_package_list\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This field is part of
{@link android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_AVAILABLE},
{@link android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE}
and contains a string array of all of the components that have changed.
"
      end

      attribute 479490 "EXTRA_CHANGED_UID_LIST"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.changed_uid_list\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This field is part of
{@link android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_AVAILABLE},
{@link android.content.Intent#ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE}
and contains an integer array of uids of all of the components
that have changed.
"
      end

      attribute 479618 "EXTRA_CLIENT_LABEL"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.client_label\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Magic extra system code can use when binding, to give a label for
who it is that has bound to a service.  This is an integer giving
a framework string resource that can be displayed to the user.
"
      end

      attribute 479746 "EXTRA_CLIENT_INTENT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.client_intent\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide
Magic extra system code can use when binding, to give a PendingIntent object
that can be launched for the user to disable the system's use of this
service.
"
      end

      attribute 479874 "EXTRA_LOCAL_ONLY"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.LOCAL_ONLY\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Extra used to indicate that an intent should only return data that is on
the local device. This is a boolean extra; the default is false. If true,
an implementation should only allow the user to select data that is
already on the device, not requiring it be downloaded from a remote
service when opened.

@see #ACTION_GET_CONTENT
@see #ACTION_OPEN_DOCUMENT
@see #ACTION_CREATE_DOCUMENT
"
      end

      attribute 480002 "EXTRA_ALLOW_MULTIPLE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.ALLOW_MULTIPLE\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Extra used to indicate that an intent can allow the user to select and
return multiple items. This is a boolean extra; the default is false. If
true, an implementation is allowed to present the user with a UI where
they can pick multiple items that are all returned to the caller. When
this happens, they should be returned as the {@link #getClipData()} part
of the result Intent.

@see #ACTION_GET_CONTENT
@see #ACTION_OPEN_DOCUMENT
"
      end

      attribute 480130 "EXTRA_USER_HANDLE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.user_handle\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The userHandle carried with broadcast intents related to addition, removal and switching of
users
- {@link #ACTION_USER_ADDED}, {@link #ACTION_USER_REMOVED} and {@link #ACTION_USER_SWITCHED}.
@hide
"
      end

      attribute 480258 "EXTRA_RESTRICTIONS_LIST"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.restrictions_list\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Extra used in the response from a BroadcastReceiver that handles
{@link #ACTION_GET_RESTRICTION_ENTRIES}. The type of the extra is
<code>ArrayList&lt;RestrictionEntry&gt;</code>.
"
      end

      attribute 480386 "EXTRA_RESTRICTIONS_BUNDLE"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.restrictions_bundle\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Extra sent in the intent to the BroadcastReceiver that handles
{@link #ACTION_GET_RESTRICTION_ENTRIES}. The type of the extra is a Bundle containing
the restrictions as key/value pairs.
"
      end

      attribute 480514 "EXTRA_RESTRICTIONS_INTENT"
	class_attribute const_attribute public explicit_type "String"
	init_value "
            \"android.intent.extra.restrictions_intent\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Extra used in the response from a BroadcastReceiver that handles
{@link #ACTION_GET_RESTRICTION_ENTRIES}.
"
      end

      attribute 480642 "EXTRA_MIME_TYPES"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.MIME_TYPES\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Extra used to communicate a set of acceptable MIME types. The type of the
extra is {@code String[]}. Values may be a combination of concrete MIME
types (such as \"image/png\") and/or partial MIME types (such as
\"audio/*\").

@see #ACTION_GET_CONTENT
@see #ACTION_OPEN_DOCUMENT
"
      end

      attribute 480770 "EXTRA_SHUTDOWN_USERSPACE_ONLY"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.intent.extra.SHUTDOWN_USERSPACE_ONLY\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Optional extra for {@link #ACTION_SHUTDOWN} that allows the sender to qualify that
this shutdown is only for the user space of the system, not a complete shutdown.
When this is true, hardware devices can use this information to determine that
they shouldn't do a complete shutdown of their device since this is not a
complete shutdown down to the kernel, but only user space restarting.
The default if not supplied is false.
"
      end

      attribute 480898 "FLAG_GRANT_READ_URI_PERMISSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000001"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------------------------------------
 ---------------------------------------------------------------------
 Intent flags (see mFlags variable).

If set, the recipient of this Intent will be granted permission to
perform read operations on the URI in the Intent's data and any URIs
specified in its ClipData.  When applying to an Intent's ClipData,
all URIs as well as recursive traversals through data or other ClipData
in Intent items will be granted; only the grant flags of the top-level
Intent are used.
"
      end

      attribute 481026 "FLAG_GRANT_WRITE_URI_PERMISSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000002"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, the recipient of this Intent will be granted permission to
perform write operations on the URI in the Intent's data and any URIs
specified in its ClipData.  When applying to an Intent's ClipData,
all URIs as well as recursive traversals through data or other ClipData
in Intent items will be granted; only the grant flags of the top-level
Intent are used.
"
      end

      attribute 481154 "FLAG_FROM_BACKGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000004"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Can be set by the caller to indicate that this Intent is coming from
a background operation, not from direct user interaction.
"
      end

      attribute 481282 "FLAG_DEBUG_LOG_RESOLUTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000008"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A flag you can enable for debugging: when set, log messages will be
printed during the resolution of this intent to show you what has
been found to create the final resolved list.
"
      end

      attribute 481410 "FLAG_EXCLUDE_STOPPED_PACKAGES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000010"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, this intent will not match any components in packages that
are currently stopped.  If this is not set, then the default behavior
is to include such applications in the result.
"
      end

      attribute 481538 "FLAG_INCLUDE_STOPPED_PACKAGES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000020"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, this intent will always match any components in packages that
are currently stopped.  This is the default behavior when
{@link #FLAG_EXCLUDE_STOPPED_PACKAGES} is not set.  If both of these
flags are set, this one wins (it allows overriding of exclude for
places where the framework may automatically set the exclude flag).
"
      end

      attribute 481666 "FLAG_GRANT_PERSISTABLE_URI_PERMISSION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00000040"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "When combined with {@link #FLAG_GRANT_READ_URI_PERMISSION} and/or
{@link #FLAG_GRANT_WRITE_URI_PERMISSION}, the URI permission grant can be
persisted across device reboots until explicitly revoked with
{@link Context#revokeUriPermission(Uri, int)}. This flag only offers the
grant for possible persisting; the receiving application must call
{@link ContentResolver#takePersistableUriPermission(Uri, int)} to
actually persist.

@see ContentResolver#takePersistableUriPermission(Uri, int)
@see ContentResolver#releasePersistableUriPermission(Uri, int)
@see ContentResolver#getPersistedUriPermissions()
@see ContentResolver#getOutgoingPersistedUriPermissions()
"
      end

      attribute 481794 "FLAG_ACTIVITY_NO_HISTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, the new activity is not kept in the history stack.  As soon as
the user navigates away from it, the activity is finished.  This may also
be set with the {@link android.R.styleable#AndroidManifestActivity_noHistory
noHistory} attribute.
"
      end

      attribute 481922 "FLAG_ACTIVITY_SINGLE_TOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, the activity will not be launched if it is already running
at the top of the history stack.
"
      end

      attribute 482050 "FLAG_ACTIVITY_NEW_TASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, this activity will become the start of a new task on this
history stack.  A task (from the activity that started it to the
next task activity) defines an atomic group of activities that the
user can move to.  Tasks can be moved to the foreground and background;
all of the activities inside of a particular task always remain in
the same order.  See
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back
Stack</a> for more information about tasks.

<p>This flag is generally used by activities that want
to present a \"launcher\" style behavior: they give the user a list of
separate things that can be done, which otherwise run completely
independently of the activity launching them.

<p>When using this flag, if a task is already running for the activity
you are now starting, then a new activity will not be started; instead,
the current task will simply be brought to the front of the screen with
the state it was last in.  See {@link #FLAG_ACTIVITY_MULTIPLE_TASK} for a flag
to disable this behavior.

<p>This flag can not be used when the caller is requesting a result from
the activity being launched.
"
      end

      attribute 482178 "FLAG_ACTIVITY_MULTIPLE_TASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "<strong>Do not use this flag unless you are implementing your own
top-level application launcher.</strong>  Used in conjunction with
{@link #FLAG_ACTIVITY_NEW_TASK} to disable the
behavior of bringing an existing task to the foreground.  When set,
a new task is <em>always</em> started to host the Activity for the
Intent, regardless of whether there is already an existing task running
the same thing.

<p><strong>Because the default system does not include graphical task management,
you should not use this flag unless you provide some way for a user to
return back to the tasks you have launched.</strong>

<p>This flag is ignored if
{@link #FLAG_ACTIVITY_NEW_TASK} is not set.

<p>See
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back
Stack</a> for more information about tasks.
"
      end

      attribute 482306 "FLAG_ACTIVITY_CLEAR_TOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, and the activity being launched is already running in the
current task, then instead of launching a new instance of that activity,
all of the other activities on top of it will be closed and this Intent
will be delivered to the (now on top) old activity as a new Intent.

<p>For example, consider a task consisting of the activities: A, B, C, D.
If D calls startActivity() with an Intent that resolves to the component
of activity B, then C and D will be finished and B receive the given
Intent, resulting in the stack now being: A, B.

<p>The currently running instance of activity B in the above example will
either receive the new intent you are starting here in its
onNewIntent() method, or be itself finished and restarted with the
new intent.  If it has declared its launch mode to be \"multiple\" (the
default) and you have not set {@link #FLAG_ACTIVITY_SINGLE_TOP} in
the same intent, then it will be finished and re-created; for all other
launch modes or if {@link #FLAG_ACTIVITY_SINGLE_TOP} is set then this
Intent will be delivered to the current instance's onNewIntent().

<p>This launch mode can also be used to good effect in conjunction with
{@link #FLAG_ACTIVITY_NEW_TASK}: if used to start the root activity
of a task, it will bring any currently running instance of that task
to the foreground, and then clear it to its root state.  This is
especially useful, for example, when launching an activity from the
notification manager.

<p>See
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back
Stack</a> for more information about tasks.
"
      end

      attribute 482434 "FLAG_ACTIVITY_FORWARD_RESULT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set and this intent is being used to launch a new activity from an
existing one, then the reply target of the existing activity will be
transfered to the new activity.  This way the new activity can call
{@link android.app.Activity#setResult} and have that result sent back to
the reply target of the original activity.
"
      end

      attribute 482562 "FLAG_ACTIVITY_PREVIOUS_IS_TOP"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x01000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set and this intent is being used to launch a new activity from an
existing one, the current activity will not be counted as the top
activity for deciding whether the new intent should be delivered to
the top instead of starting a new one.  The previous activity will
be used as the top, with the assumption being that the current activity
will finish itself immediately.
"
      end

      attribute 482690 "FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00800000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, the new activity is not kept in the list of recently launched
activities.
"
      end

      attribute 482818 "FLAG_ACTIVITY_BROUGHT_TO_FRONT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00400000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag is not normally set by application code, but set for you by
the system as described in the
{@link android.R.styleable#AndroidManifestActivity_launchMode
launchMode} documentation for the singleTask mode.
"
      end

      attribute 482946 "FLAG_ACTIVITY_RESET_TASK_IF_NEEDED"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00200000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, and this activity is either being started in a new task or
bringing to the top an existing task, then it will be launched as
the front door of the task.  This will result in the application of
any affinities needed to have that task in the proper state (either
moving activities to or from it), or simply resetting that task to
its initial state if needed.
"
      end

      attribute 483074 "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00100000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This flag is not normally set by application code, but set for you by
the system if this activity is being launched from history
(longpress home key).
"
      end

      attribute 483202 "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00080000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, this marks a point in the task's activity stack that should
be cleared when the task is reset.  That is, the next time the task
is brought to the foreground with
{@link #FLAG_ACTIVITY_RESET_TASK_IF_NEEDED} (typically as a result of
the user re-launching it from home), this activity and all on top of
it will be finished so that the user does not return to them, but
instead returns to whatever activity preceeded it.

<p>This is useful for cases where you have a logical break in your
application.  For example, an e-mail application may have a command
to view an attachment, which launches an image view activity to
display it.  This activity should be part of the e-mail application's
task, since it is a part of the task the user is involved in.  However,
if the user leaves that task, and later selects the e-mail app from
home, we may like them to return to the conversation they were
viewing, not the picture attachment, since that is confusing.  By
setting this flag when launching the image viewer, that viewer and
any activities it starts will be removed the next time the user returns
to mail.
"
      end

      attribute 483330 "FLAG_ACTIVITY_NO_USER_ACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x00040000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, this flag will prevent the normal {@link android.app.Activity#onUserLeaveHint}
callback from occurring on the current frontmost activity before it is
paused as the newly-started activity is brought to the front.

<p>Typically, an activity can rely on that callback to indicate that an
explicit user action has caused their activity to be moved out of the
foreground. The callback marks an appropriate point in the activity's
lifecycle for it to dismiss any notifications that it intends to display
\"until the user has seen them,\" such as a blinking LED.

<p>If an activity is ever started via any non-user-driven events such as
phone-call receipt or an alarm handler, this flag should be passed to {@link
Context#startActivity Context.startActivity}, ensuring that the pausing
activity does not think the user has acknowledged its notification.
"
      end

      attribute 483458 "FLAG_ACTIVITY_REORDER_TO_FRONT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X00020000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
this flag will cause the launched activity to be brought to the front of its
task's history stack if it is already running.

<p>For example, consider a task consisting of four activities: A, B, C, D.
If D calls startActivity() with an Intent that resolves to the component
of activity B, then B will be brought to the front of the history stack,
with this resulting order:  A, C, D, B.

This flag will be ignored if {@link #FLAG_ACTIVITY_CLEAR_TOP} is also
specified.
"
      end

      attribute 483586 "FLAG_ACTIVITY_NO_ANIMATION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X00010000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
this flag will prevent the system from applying an activity transition
animation to go to the next activity state.  This doesn't mean an
animation will never run -- if another activity change happens that doesn't
specify this flag before the activity started here is displayed, then
that transition will be used.  This flag can be put to good use
when you are going to do a series of activity operations but the
animation seen by the user shouldn't be driven by the first activity
change but rather a later one.
"
      end

      attribute 483714 "FLAG_ACTIVITY_CLEAR_TASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X00008000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
this flag will cause any existing task that would be associated with the
activity to be cleared before the activity is started.  That is, the activity
becomes the new root of an otherwise empty task, and any old activities
are finished.  This can only be used in conjunction with {@link #FLAG_ACTIVITY_NEW_TASK}.
"
      end

      attribute 483842 "FLAG_ACTIVITY_TASK_ON_HOME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0X00004000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set in an Intent passed to {@link Context#startActivity Context.startActivity()},
this flag will cause a newly launching task to be placed on top of the current
home activity task (if there is one).  That is, pressing back from the task
will always return the user to home even if that was not the last activity they
saw.   This can only be used in conjunction with {@link #FLAG_ACTIVITY_NEW_TASK}.
"
      end

      attribute 483970 "FLAG_RECEIVER_REGISTERED_ONLY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x40000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, when sending a broadcast only registered receivers will be
called -- no BroadcastReceiver components will be launched.
"
      end

      attribute 484098 "FLAG_RECEIVER_REPLACE_PENDING"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x20000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, when sending a broadcast the new broadcast will replace
any existing pending broadcast that matches it.  Matching is defined
by {@link Intent#filterEquals(Intent) Intent.filterEquals} returning
true for the intents of the two broadcasts.  When a match is found,
the new broadcast (and receivers associated with it) will replace the
existing one in the pending broadcast list, remaining at the same
position in the list.

<p>This flag is most typically used with sticky broadcasts, which
only care about delivering the most recent values of the broadcast
to their receivers.
"
      end

      attribute 484226 "FLAG_RECEIVER_FOREGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x10000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, when sending a broadcast the recipient is allowed to run at
foreground priority, with a shorter timeout interval.  During normal
broadcasts the receivers are not automatically hoisted out of the
background priority class.
"
      end

      attribute 484354 "FLAG_RECEIVER_NO_ABORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x08000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If this is an ordered broadcast, don't allow receivers to abort the broadcast.
They can still propagate results through to later receivers, but they can not prevent
later receivers from seeing the broadcast.
"
      end

      attribute 484482 "FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x04000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "If set, when sending a broadcast <i>before boot has completed</i> only
registered receivers will be called -- no BroadcastReceiver components
will be launched.  Sticky intent state will be recorded properly even
if no receivers wind up being called.  If {@link #FLAG_RECEIVER_REGISTERED_ONLY}
is specified in the broadcast intent, this flag is unnecessary.

<p>This flag is only for use by system sevices as a convenience to
avoid having to implement a more complex mechanism around detection
of boot completion.

@hide
"
      end

      attribute 484610 "FLAG_RECEIVER_BOOT_UPGRADE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x02000000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Set when this broadcast is for a boot upgrade, a special mode that
allows the broadcast to be sent before the system is ready and launches
the app process with no providers running in it.
@hide
"
      end

      attribute 484738 "IMMUTABLE_FLAGS"
	class_attribute const_attribute public explicit_type "int"
	init_value "
            FLAG_GRANT_READ_URI_PERMISSION
            | FLAG_GRANT_WRITE_URI_PERMISSION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@hide Flags that can't be changed with PendingIntent.
"
      end

      attribute 484866 "URI_INTENT_SCHEME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------------------------------------
 ---------------------------------------------------------------------
 toUri() and parseUri() options.

Flag for use with {@link #toUri} and {@link #parseUri}: the URI string
always has the \"intent:\" scheme.  This syntax can be used when you want
to later disambiguate between URIs that are intended to describe an
Intent vs. all others that should be treated as raw URIs.  When used
with {@link #parseUri}, any other scheme will result in a generic
VIEW action for that raw URI.
"
      end

      attribute 484994 "mAction"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " ---------------------------------------------------------------------"
      end

      classrelation 213762 // mData (<unidirectional association>)
	relation 213762 --->
	  a role_name "mData" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 213762 // mData (<unidirectional association>)
	  b parent class_ref 145410 // Uri
      end

      attribute 485122 "mType"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 485250 "mPackage"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 213890 // mComponent (<unidirectional association>)
	relation 213890 --->
	  a role_name "mComponent" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 213890 // mComponent (<unidirectional association>)
	  b parent class_ref 196738 // ComponentName
      end

      attribute 485378 "mFlags"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 485506 "mCategories"
	private explicit_type "String"
	stereotype "ArraySet"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 214018 // mExtras (<unidirectional association>)
	relation 214018 --->
	  a role_name "mExtras" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 214018 // mExtras (<unidirectional association>)
	  b parent class_ref 174082 // Bundle
      end

      attribute 485634 "mSourceBounds"
	private explicit_type "Rect"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 214146 // mSelector (<unidirectional association>)
	relation 214146 --->
	  a role_name "mSelector" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 214146 // mSelector (<unidirectional association>)
	  b parent class_ref 195458 // Intent
      end

      classrelation 214274 // mClipData (<unidirectional association>)
	relation 214274 --->
	  a role_name "mClipData" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 214274 // mClipData (<unidirectional association>)
	  b parent class_ref 195970 // ClipData
      end

      operation 726274 "Intent"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ---------------------------------------------------------------------

Create an empty intent."
      end

      operation 726402 "Intent"
	public explicit_return_type ""
	nparams 1
	  param inout name "o" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy constructor."
      end

      operation 726530 "clone"
	public explicit_return_type "Object"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 726658 "Intent"
	private explicit_return_type ""
	nparams 2
	  param inout name "o" type class_ref 195458 // Intent
	  param inout name "all" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 726786 "cloneFilter"
	public return_type class_ref 195458 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make a clone of only the parts of the Intent that are relevant for
filter matching: the action, data, type, component, and categories."
      end

      operation 726914 "Intent"
	public explicit_return_type ""
	nparams 1
	  param in name "action" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent with a given action.  All other fields (data, type,
class) are null.  Note that the action <em>must</em> be in a
namespace because Intents are used globally in the system -- for
example the system VIEW action is android.intent.action.VIEW; an
application's custom action would be something like
com.google.app.myapp.CUSTOM_ACTION.

@param action The Intent action, such as ACTION_VIEW."
      end

      operation 727042 "Intent"
	public explicit_return_type ""
	nparams 2
	  param in name "action" explicit_type "String"
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent with a given action and for a given data url.  Note
that the action <em>must</em> be in a namespace because Intents are
used globally in the system -- for example the system VIEW action is
android.intent.action.VIEW; an application's custom action would be
something like com.google.app.myapp.CUSTOM_ACTION.

<p><em>Note: scheme and host name matching in the Android framework is
case-sensitive, unlike the formal RFC.  As a result,
you should always ensure that you write your Uri with these elements
using lower case letters, and normalize any Uris you receive from
outside of Android to ensure the scheme and host is lower case.</em></p>

@param action The Intent action, such as ACTION_VIEW.
@param uri The Intent data URI."
      end

      operation 727170 "Intent"
	public explicit_return_type ""
	nparams 2
	  param inout name "packageContext" type class_ref 192770 // Context
	  param inout name "cls" explicit_type "Class<?>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent for a specific component.  All other fields (action, data,
type, class) are null, though they can be modified later with explicit
calls.  This provides a convenient way to create an intent that is
intended to execute a hard-coded class name, rather than relying on the
system to find an appropriate class for you; see {@link #setComponent}
for more information on the repercussions of this.

@param packageContext A Context of the application package implementing
this class.
@param cls The component class that is to be used for the intent.

@see #setClass
@see #setComponent
@see #Intent(String, android.net.Uri , Context, Class)"
      end

      operation 727298 "Intent"
	public explicit_return_type ""
	nparams 4
	  param in name "action" explicit_type "String"
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "packageContext" type class_ref 192770 // Context
	  param inout name "cls" explicit_type "Class<?>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent for a specific component with a specified action and data.
This is equivalent using {@link #Intent(String, android.net.Uri)} to
construct the Intent and then calling {@link #setClass} to set its
class.

<p><em>Note: scheme and host name matching in the Android framework is
case-sensitive, unlike the formal RFC.  As a result,
you should always ensure that you write your Uri with these elements
using lower case letters, and normalize any Uris you receive from
outside of Android to ensure the scheme and host is lower case.</em></p>

@param action The Intent action, such as ACTION_VIEW.
@param uri The Intent data URI.
@param packageContext A Context of the application package implementing
this class.
@param cls The component class that is to be used for the intent.

@see #Intent(String, android.net.Uri)
@see #Intent(Context, Class)
@see #setClass
@see #setComponent"
      end

      operation 727426 "makeMainActivity"
	class_operation public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "mainActivity" type class_ref 196738 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent to launch the main (root) activity of a task.  This
is the Intent that is started when the application's is launched from
Home.  For anything else that wants to launch an application in the
same way, it is important that they use an Intent structured the same
way, and can use this function to ensure this is the case.

<p>The returned Intent has the given Activity component as its explicit
component, {@link #ACTION_MAIN} as its action, and includes the
category {@link #CATEGORY_LAUNCHER}.  This does <em>not</em> have
{@link #FLAG_ACTIVITY_NEW_TASK} set, though typically you will want
to do that through {@link #addFlags(int)} on the returned Intent.

@param mainActivity The main activity component that this Intent will
launch.
@return Returns a newly created Intent that can be used to launch the
activity as a main application entry.

@see #setClass
@see #setComponent"
      end

      operation 727554 "makeMainSelectorActivity"
	class_operation public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "selectorAction" explicit_type "String"
	  param in name "selectorCategory" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make an Intent for the main activity of an application, without
specifying a specific activity to run but giving a selector to find
the activity.  This results in a final Intent that is structured
the same as when the application is launched from
Home.  For anything else that wants to launch an application in the
same way, it is important that they use an Intent structured the same
way, and can use this function to ensure this is the case.

<p>The returned Intent has {@link #ACTION_MAIN} as its action, and includes the
category {@link #CATEGORY_LAUNCHER}.  This does <em>not</em> have
{@link #FLAG_ACTIVITY_NEW_TASK} set, though typically you will want
to do that through {@link #addFlags(int)} on the returned Intent.

@param selectorAction The action name of the Intent's selector.
@param selectorCategory The name of a category to add to the Intent's
selector.
@return Returns a newly created Intent that can be used to launch the
activity as a main application entry.

@see #setSelector(Intent)"
      end

      operation 727682 "makeRestartActivityTask"
	class_operation public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "mainActivity" type class_ref 196738 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Make an Intent that can be used to re-launch an application's task
in its base state.  This is like {@link #makeMainActivity(ComponentName)},
but also sets the flags {@link #FLAG_ACTIVITY_NEW_TASK} and
{@link #FLAG_ACTIVITY_CLEAR_TASK}.

@param mainActivity The activity component that is the root of the
task; this is the activity that has been published in the application's
manifest as the main launcher icon.

@return Returns a newly created Intent that can be used to relaunch the
activity's task in its root state."
      end

      operation 727810 "getIntent"
	class_operation public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "uri" explicit_type "String"
	nexceptions 1
	  explicit_exception "URISyntaxException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Call {@link #parseUri} with 0 flags.
@deprecated Use {@link #parseUri} instead."
      end

      operation 727938 "parseUri"
	class_operation public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "uri" explicit_type "String"
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  explicit_exception "URISyntaxException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create an intent from a URI.  This URI may encode the action,
category, and other intent fields, if it was returned by
{@link #toUri}.  If the Intent was not generate by toUri(), its data
will be the entire URI and its action will be ACTION_VIEW.

<p>The URI given here must not be relative -- that is, it must include
the scheme and full path.

@param uri The URI to turn into an Intent.
@param flags Additional processing flags.  Either 0 or
{@link #URI_INTENT_SCHEME}.

@return Intent The newly created Intent object.

@throws URISyntaxException Throws URISyntaxError if the basic URI syntax
it bad (as parsed by the Uri class) or the Intent data within the
URI is invalid.

@see #toUri"
      end

      operation 728066 "getIntentOld"
	class_operation public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "uri" explicit_type "String"
	nexceptions 1
	  explicit_exception "URISyntaxException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 728194 "getAction"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the general action to be performed, such as
{@link #ACTION_VIEW}.  The action describes the general way the rest of
the information in the intent should be interpreted -- most importantly,
what to do with the data returned by {@link #getData}.

@return The action of this intent or null if none is specified.

@see #setAction"
      end

      operation 728322 "getData"
	public return_type class_ref 145410 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve data this intent is operating on.  This URI specifies the name
of the data; often it uses the content: scheme, specifying data in a
content provider.  Other schemes may be handled by specific activities,
such as http: by the web browser.

@return The URI of the data this intent is targeting or null.

@see #getScheme
@see #setData"
      end

      operation 728450 "getDataString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The same as {@link #getData()}, but returns the URI as an encoded
String."
      end

      operation 728578 "getScheme"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the scheme portion of the intent's data.  If the data is null or
does not include a scheme, null is returned.  Otherwise, the scheme
prefix without the final ':' is returned, i.e. \"http\".

<p>This is the same as calling getData().getScheme() (and checking for
null data).

@return The scheme of this intent.

@see #getData"
      end

      operation 728706 "getType"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve any explicit MIME type included in the intent.  This is usually
null, as the type is determined by the intent data.

@return If a type was manually set, it is returned; else null is
        returned.

@see #resolveType(ContentResolver)
@see #setType"
      end

      operation 728834 "resolveType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "context" type class_ref 192770 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the MIME data type of this intent.  If the type field is
explicitly set, that is simply returned.  Otherwise, if the data is set,
the type of that data is returned.  If neither fields are set, a null is
returned.

@return The MIME type of this intent.

@see #getType
@see #resolveType(ContentResolver)"
      end

      operation 728962 "resolveType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "resolver" type class_ref 193922 // ContentResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the MIME data type of this intent.  If the type field is
explicitly set, that is simply returned.  Otherwise, if the data is set,
the type of that data is returned.  If neither fields are set, a null is
returned.

@param resolver A ContentResolver that can be used to determine the MIME
                type of the intent's data.

@return The MIME type of this intent.

@see #getType
@see #resolveType(Context)"
      end

      operation 729090 "resolveTypeIfNeeded"
	public explicit_return_type "String"
	nparams 1
	  param inout name "resolver" type class_ref 193922 // ContentResolver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the MIME data type of this intent, only if it will be needed for
intent resolution.  This is not generally useful for application code;
it is used by the frameworks for communicating with back-end system
services.

@param resolver A ContentResolver that can be used to determine the MIME
                type of the intent's data.

@return The MIME type of this intent, or null if it is unknown or not
        needed."
      end

      operation 729218 "hasCategory"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check if a category exists in the intent.

@param category The category to check.

@return boolean True if the intent contains the category, else false.

@see #getCategories
@see #addCategory"
      end

      operation 729346 "getCategories"
	public explicit_return_type "Set<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the set of all categories in the intent.  If there are no categories,
returns NULL.

@return The set of categories you can examine.  Do not modify!

@see #hasCategory
@see #addCategory"
      end

      operation 729474 "getSelector"
	public return_type class_ref 195458 // Intent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the specific selector associated with this Intent.  If there is
none, returns null.  See {@link #setSelector} for more information.

@see #setSelector"
      end

      operation 729602 "getClipData"
	public return_type class_ref 195970 // ClipData
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link ClipData} associated with this Intent.  If there is
none, returns null.  See {@link #setClipData} for more information.

@see #setClipData;"
      end

      operation 729730 "setExtrasClassLoader"
	public explicit_return_type "void"
	nparams 1
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the ClassLoader that will be used when unmarshalling
any Parcelable values from the extras of this Intent.

@param loader a ClassLoader, or null to use the default loader
at the time of unmarshalling."
      end

      operation 729858 "hasExtra"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if an extra value is associated with the given name.
@param name the extra's name
@return true if the given extra is present."
      end

      operation 729986 "hasFileDescriptors"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if the Intent's extras contain a parcelled file descriptor.
@return true if the Intent contains a parcelled file descriptor."
      end

      operation 730114 "setAllowFds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allowFds" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 730242 "getExtra"
	public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if none was found.

@deprecated
@hide"
      end

      operation 730370 "getBooleanExtra"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "defaultValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, boolean)"
      end

      operation 730498 "getByteExtra"
	public explicit_return_type "byte"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, byte)"
      end

      operation 730626 "getShortExtra"
	public explicit_return_type "short"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, short)"
      end

      operation 730754 "getCharExtra"
	public explicit_return_type "char"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, char)"
      end

      operation 730882 "getIntExtra"
	public explicit_return_type "int"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, int)"
      end

      operation 731010 "getLongExtra"
	public explicit_return_type "long"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, long)"
      end

      operation 731138 "getFloatExtra"
	public explicit_return_type "float"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra(),
or the default value if no such item is present

@see #putExtra(String, float)"
      end

      operation 731266 "getDoubleExtra"
	public explicit_return_type "double"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "defaultValue" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue the value to be returned if no value of the desired
type is stored with the given name.

@return the value of an item that previously added with putExtra()
or the default value if none was found.

@see #putExtra(String, double)"
      end

      operation 731394 "getStringExtra"
	public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no String value was found.

@see #putExtra(String, String)"
      end

      operation 731522 "getCharSequenceExtra"
	public explicit_return_type "CharSequence"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no CharSequence value was found.

@see #putExtra(String, CharSequence)"
      end

      operation 731650 "getParcelableExtra"
	public explicit_return_type "T"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no Parcelable value was found.

@see #putExtra(String, Parcelable)"
      end

      operation 731778 "getParcelableArrayExtra"
	public return_type class_ref 170114 // Parcelable
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no Parcelable[] value was found.

@see #putExtra(String, Parcelable[])"
      end

      operation 731906 "getParcelableArrayListExtra"
	public explicit_return_type "ArrayList<T>"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends Parcelable> ${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no ArrayList<Parcelable> value was found.

@see #putParcelableArrayListExtra(String, ArrayList)"
      end

      operation 732034 "getSerializableExtra"
	public explicit_return_type "Serializable"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no Serializable value was found.

@see #putExtra(String, Serializable)"
      end

      operation 732162 "getIntegerArrayListExtra"
	public explicit_return_type "ArrayList<Integer>"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no ArrayList<Integer> value was found.

@see #putIntegerArrayListExtra(String, ArrayList)"
      end

      operation 732290 "getStringArrayListExtra"
	public explicit_return_type "ArrayList<String>"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no ArrayList<String> value was found.

@see #putStringArrayListExtra(String, ArrayList)"
      end

      operation 732418 "getCharSequenceArrayListExtra"
	public explicit_return_type "ArrayList<CharSequence>"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no ArrayList<CharSequence> value was found.

@see #putCharSequenceArrayListExtra(String, ArrayList)"
      end

      operation 732546 "getBooleanArrayExtra"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no boolean array value was found.

@see #putExtra(String, boolean[])"
      end

      operation 732674 "getByteArrayExtra"
	public explicit_return_type "byte"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no byte array value was found.

@see #putExtra(String, byte[])"
      end

      operation 732802 "getShortArrayExtra"
	public explicit_return_type "short"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no short array value was found.

@see #putExtra(String, short[])"
      end

      operation 732930 "getCharArrayExtra"
	public explicit_return_type "char"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no char array value was found.

@see #putExtra(String, char[])"
      end

      operation 733058 "getIntArrayExtra"
	public explicit_return_type "int"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no int array value was found.

@see #putExtra(String, int[])"
      end

      operation 733186 "getLongArrayExtra"
	public explicit_return_type "long"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no long array value was found.

@see #putExtra(String, long[])"
      end

      operation 733314 "getFloatArrayExtra"
	public explicit_return_type "float"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no float array value was found.

@see #putExtra(String, float[])"
      end

      operation 733442 "getDoubleArrayExtra"
	public explicit_return_type "double"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no double array value was found.

@see #putExtra(String, double[])"
      end

      operation 733570 "getStringArrayExtra"
	public explicit_return_type "String"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no String array value was found.

@see #putExtra(String, String[])"
      end

      operation 733698 "getCharSequenceArrayExtra"
	public explicit_return_type "CharSequence"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no CharSequence array value was found.

@see #putExtra(String, CharSequence[])"
      end

      operation 733826 "getBundleExtra"
	public return_type class_ref 174082 // Bundle
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no Bundle value was found.

@see #putExtra(String, Bundle)"
      end

      operation 733954 "getIBinderExtra"
	public return_type class_ref 172674 // IBinder
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.

@return the value of an item that previously added with putExtra()
or null if no IBinder value was found.

@see #putExtra(String, IBinder)

@deprecated
@hide"
      end

      operation 734082 "getExtra"
	public explicit_return_type "Object"
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "defaultValue" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Retrieve extended data from the intent.

@param name The name of the desired item.
@param defaultValue The default value to return in case no item is
associated with the key 'name'

@return the value of an item that previously added with putExtra()
or defaultValue if none was found.

@see #putExtra

@deprecated
@hide"
      end

      operation 734210 "getExtras"
	public return_type class_ref 174082 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves a map of extended data from the intent.

@return the map of all extras previously added with putExtra(),
or null if none have been added."
      end

      operation 734338 "getFlags"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve any special flags associated with this intent.  You will
normally just set them with {@link #setFlags} and let the system
take the appropriate action with them.

@return int The currently set flags.

@see #setFlags"
      end

      operation 734466 "isExcludingStopped"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 734594 "getPackage"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the application package name this Intent is limited to.  When
resolving an Intent, if non-null this limits the resolution to only
components in the given application package.

@return The name of the application package for the Intent.

@see #resolveActivity
@see #setPackage"
      end

      operation 734722 "getComponent"
	public return_type class_ref 196738 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve the concrete component associated with the intent.  When receiving
an intent, this is the component that was found to best handle it (that is,
yourself) and will always be non-null; in all other cases it will be
null unless explicitly set.

@return The name of the application component to handle the intent.

@see #resolveActivity
@see #setComponent"
      end

      operation 734850 "getSourceBounds"
	public explicit_return_type "Rect"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Get the bounds of the sender of this intent, in screen coordinates.  This can be
used as a hint to the receiver for animations and the like.  Null means that there
is no source bounds."
      end

      operation 734978 "resolveActivity"
	public return_type class_ref 196738 // ComponentName
	nparams 1
	  param inout name "pm" type class_ref 200962 // PackageManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Activity component that should be used to handle this intent.
The appropriate component is determined based on the information in the
intent, evaluated as follows:

<p>If {@link #getComponent} returns an explicit class, that is returned
without any further consideration.

<p>The activity must handle the {@link Intent#CATEGORY_DEFAULT} Intent
category to be considered.

<p>If {@link #getAction} is non-NULL, the activity must handle this
action.

<p>If {@link #resolveType} returns non-NULL, the activity must handle
this type.

<p>If {@link #addCategory} has added any categories, the activity must
handle ALL of the categories specified.

<p>If {@link #getPackage} is non-NULL, only activity components in
that application package will be considered.

<p>If there are no activities that satisfy all of these conditions, a
null string is returned.

<p>If multiple activities are found to satisfy the intent, the one with
the highest priority will be used.  If there are multiple activities
with the same priority, the system will either pick the best activity
based on user preference, or resolve to a system class that will allow
the user to pick an activity and forward from there.

<p>This method is implemented simply by calling
{@link PackageManager#resolveActivity} with the \"defaultOnly\" parameter
true.</p>
<p> This API is called for you as part of starting an activity from an
intent.  You do not normally need to call it yourself.</p>

@param pm The package manager with which to resolve the Intent.

@return Name of the component implementing an activity that can
        display the intent.

@see #setComponent
@see #getComponent
@see #resolveActivityInfo"
      end

      operation 735106 "resolveActivityInfo"
	public return_type class_ref 204418 // ActivityInfo
	nparams 2
	  param inout name "pm" type class_ref 200962 // PackageManager
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Resolve the Intent into an {@link ActivityInfo}
describing the activity that should execute the intent.  Resolution
follows the same rules as described for {@link #resolveActivity}, but
you get back the completely information about the resolved activity
instead of just its class name.

@param pm The package manager with which to resolve the Intent.
@param flags Addition information to retrieve as per
{@link PackageManager#getActivityInfo(ComponentName, int)
PackageManager.getActivityInfo()}.

@return PackageManager.ActivityInfo

@see #resolveActivity"
      end

      operation 735234 "resolveSystemService"
	public return_type class_ref 196738 // ComponentName
	nparams 2
	  param inout name "pm" type class_ref 200962 // PackageManager
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Special function for use by the system to resolve service
intents to system apps.  Throws an exception if there are
multiple potential matches to the Intent.  Returns null if
there are no matches.
@hide"
      end

      operation 735362 "setAction"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "action" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the general action to be performed.

@param action An action name, such as ACTION_VIEW.  Application-specific
              actions should be prefixed with the vendor's package name.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getAction"
      end

      operation 735490 "setData"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "data" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the data this intent is operating on.  This method automatically
clears any type that was previously set by {@link #setType} or
{@link #setTypeAndNormalize}.

<p><em>Note: scheme matching in the Android framework is
case-sensitive, unlike the formal RFC. As a result,
you should always write your Uri with a lower case scheme,
or use {@link Uri#normalizeScheme} or
{@link #setDataAndNormalize}
to ensure that the scheme is converted to lower case.</em>

@param data The Uri of the data this intent is now targeting.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getData
@see #setDataAndNormalize
@see android.net.Uri#normalizeScheme()"
      end

      operation 735618 "setDataAndNormalize"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "data" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalize and set the data this intent is operating on.

<p>This method automatically clears any type that was
previously set (for example, by {@link #setType}).

<p>The data Uri is normalized using
{@link android.net.Uri#normalizeScheme} before it is set,
so really this is just a convenience method for
<pre>
setData(data.normalize())
</pre>

@param data The Uri of the data this intent is now targeting.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getData
@see #setType
@see android.net.Uri#normalizeScheme"
      end

      operation 735746 "setType"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set an explicit MIME data type.

<p>This is used to create intents that only specify a type and not data,
for example to indicate the type of data to return.

<p>This method automatically clears any data that was
previously set (for example by {@link #setData}).

<p><em>Note: MIME type matching in the Android framework is
case-sensitive, unlike formal RFC MIME types.  As a result,
you should always write your MIME types with lower case letters,
or use {@link #normalizeMimeType} or {@link #setTypeAndNormalize}
to ensure that it is converted to lower case.</em>

@param type The MIME type of the data being handled by this intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getType
@see #setTypeAndNormalize
@see #setDataAndType
@see #normalizeMimeType"
      end

      operation 735874 "setTypeAndNormalize"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalize and set an explicit MIME data type.

<p>This is used to create intents that only specify a type and not data,
for example to indicate the type of data to return.

<p>This method automatically clears any data that was
previously set (for example by {@link #setData}).

<p>The MIME type is normalized using
{@link #normalizeMimeType} before it is set,
so really this is just a convenience method for
<pre>
setType(Intent.normalizeMimeType(type))
</pre>

@param type The MIME type of the data being handled by this intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getType
@see #setData
@see #normalizeMimeType"
      end

      operation 736002 "setDataAndType"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param inout name "data" type class_ref 145410 // Uri
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Usually optional) Set the data for the intent along with an explicit
MIME data type.  This method should very rarely be used -- it allows you
to override the MIME type that would ordinarily be inferred from the
data with your own type given here.

<p><em>Note: MIME type and Uri scheme matching in the
Android framework is case-sensitive, unlike the formal RFC definitions.
As a result, you should always write these elements with lower case letters,
or use {@link #normalizeMimeType} or {@link android.net.Uri#normalizeScheme} or
{@link #setDataAndTypeAndNormalize}
to ensure that they are converted to lower case.</em>

@param data The Uri of the data this intent is now targeting.
@param type The MIME type of the data being handled by this intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setType
@see #setData
@see #normalizeMimeType
@see android.net.Uri#normalizeScheme
@see #setDataAndTypeAndNormalize"
      end

      operation 736130 "setDataAndTypeAndNormalize"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param inout name "data" type class_ref 145410 // Uri
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Usually optional) Normalize and set both the data Uri and an explicit
MIME data type.  This method should very rarely be used -- it allows you
to override the MIME type that would ordinarily be inferred from the
data with your own type given here.

<p>The data Uri and the MIME type are normalize using
{@link android.net.Uri#normalizeScheme} and {@link #normalizeMimeType}
before they are set, so really this is just a convenience method for
<pre>
setDataAndType(data.normalize(), Intent.normalizeMimeType(type))
</pre>

@param data The Uri of the data this intent is now targeting.
@param type The MIME type of the data being handled by this intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setType
@see #setData
@see #setDataAndType
@see #normalizeMimeType
@see android.net.Uri#normalizeScheme"
      end

      operation 736258 "addCategory"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new category to the intent.  Categories provide additional detail
about the action the intent performs.  When resolving an intent, only
activities that provide <em>all</em> of the requested categories will be
used.

@param category The desired category.  This can be either one of the
              predefined Intent categories, or a custom category in your own
              namespace.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #hasCategory
@see #removeCategory"
      end

      operation 736386 "removeCategory"
	public explicit_return_type "void"
	nparams 1
	  param in name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove a category from an intent.

@param category The category to remove.

@see #addCategory"
      end

      operation 736514 "setSelector"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selector" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a selector for this Intent.  This is a modification to the kinds of
things the Intent will match.  If the selector is set, it will be used
when trying to find entities that can handle the Intent, instead of the
main contents of the Intent.  This allows you build an Intent containing
a generic protocol while targeting it more specifically.

<p>An example of where this may be used is with things like
{@link #CATEGORY_APP_BROWSER}.  This category allows you to build an
Intent that will launch the Browser application.  However, the correct
main entry point of an application is actually {@link #ACTION_MAIN}
{@link #CATEGORY_LAUNCHER} with {@link #setComponent(ComponentName)}
used to specify the actual Activity to launch.  If you launch the browser
with something different, undesired behavior may happen if the user has
previously or later launches it the normal way, since they do not match.
Instead, you can build an Intent with the MAIN action (but no ComponentName
yet specified) and set a selector with {@link #ACTION_MAIN} and
{@link #CATEGORY_APP_BROWSER} to point it specifically to the browser activity.

<p>Setting a selector does not impact the behavior of
{@link #filterEquals(Intent)} and {@link #filterHashCode()}.  This is part of the
desired behavior of a selector -- it does not impact the base meaning
of the Intent, just what kinds of things will be matched against it
when determining who can handle it.</p>

<p>You can not use both a selector and {@link #setPackage(String)} on
the same base Intent.</p>

@param selector The desired selector Intent; set to null to not use
a special selector."
      end

      operation 736642 "setClipData"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clip" type class_ref 195970 // ClipData
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a {@link ClipData} associated with this Intent.  This replaces any
previously set ClipData.

<p>The ClipData in an intent is not used for Intent matching or other
such operations.  Semantically it is like extras, used to transmit
additional data with the Intent.  The main feature of using this over
the extras for data is that {@link #FLAG_GRANT_READ_URI_PERMISSION}
and {@link #FLAG_GRANT_WRITE_URI_PERMISSION} will operate on any URI
items included in the clip data.  This is useful, in particular, if
you want to transmit an Intent containing multiple <code>content:</code>
URIs for which the recipient may not have global permission to access the
content provider.

<p>If the ClipData contains items that are themselves Intents, any
grant flags in those Intents will be ignored.  Only the top-level flags
of the main Intent are respected, and will be applied to all Uri or
Intent items in the clip (or sub-items of the clip).

<p>The MIME type, label, and icon in the ClipData object are not
directly used by Intent.  Applications should generally rely on the
MIME type of the Intent itself, not what it may find in the ClipData.
A common practice is to construct a ClipData for use with an Intent
with a MIME type of \"*\\/*\".

@param clip The new clip to set.  May be null to clear the current clip."
      end

      operation 736770 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The boolean data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getBooleanExtra(String, boolean)"
      end

      operation 736898 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The byte data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getByteExtra(String, byte)"
      end

      operation 737026 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The char data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharExtra(String, char)"
      end

      operation 737154 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The short data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getShortExtra(String, short)"
      end

      operation 737282 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The integer data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getIntExtra(String, int)"
      end

      operation 737410 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The long data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getLongExtra(String, long)"
      end

      operation 737538 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The float data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getFloatExtra(String, float)"
      end

      operation 737666 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The double data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getDoubleExtra(String, double)"
      end

      operation 737794 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "value" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The String data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getStringExtra(String)"
      end

      operation 737922 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The CharSequence data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharSequenceExtra(String)"
      end

      operation 738050 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" type class_ref 170114 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The Parcelable data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getParcelableExtra(String)"
      end

      operation 738178 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" type class_ref 170114 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The Parcelable[] data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getParcelableArrayExtra(String)"
      end

      operation 738306 "putParcelableArrayListExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<? extends Parcelable>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The ArrayList<Parcelable> data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getParcelableArrayListExtra(String)"
      end

      operation 738434 "putIntegerArrayListExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<Integer>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The ArrayList<Integer> data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getIntegerArrayListExtra(String)"
      end

      operation 738562 "putStringArrayListExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The ArrayList<String> data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getStringArrayListExtra(String)"
      end

      operation 738690 "putCharSequenceArrayListExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "ArrayList<CharSequence>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The ArrayList<CharSequence> data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharSequenceArrayListExtra(String)"
      end

      operation 738818 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "Serializable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The Serializable data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getSerializableExtra(String)"
      end

      operation 738946 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The boolean array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getBooleanArrayExtra(String)"
      end

      operation 739074 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "byte"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The byte array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getByteArrayExtra(String)"
      end

      operation 739202 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "short"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The short array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getShortArrayExtra(String)"
      end

      operation 739330 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The char array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharArrayExtra(String)"
      end

      operation 739458 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The int array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getIntArrayExtra(String)"
      end

      operation 739586 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The byte array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getLongArrayExtra(String)"
      end

      operation 739714 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The float array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getFloatArrayExtra(String)"
      end

      operation 739842 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "double"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The double array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getDoubleArrayExtra(String)"
      end

      operation 739970 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The String array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getStringArrayExtra(String)"
      end

      operation 740098 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The CharSequence array data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getCharSequenceArrayExtra(String)"
      end

      operation 740226 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The Bundle data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getBundleExtra(String)"
      end

      operation 740354 "putExtra"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "name" explicit_type "String"
	  param inout name "value" type class_ref 172674 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Add extended data to the intent.  The name must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param name The name of the extra data, with package prefix.
@param value The IBinder data value.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #putExtras
@see #removeExtra
@see #getIBinderExtra(String)

@deprecated
@hide"
      end

      operation 740482 "putExtras"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "src" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy all extras in 'src' in to this intent.

@param src Contains the extras to copy.

@see #putExtra"
      end

      operation 740610 "putExtras"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a set of extended data to the intent.  The keys must include a package
prefix, for example the app com.android.contacts would use names
like \"com.android.contacts.ShowAll\".

@param extras The Bundle of extras to add to this intent.

@see #putExtra
@see #removeExtra"
      end

      operation 740738 "replaceExtras"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "src" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Completely replace the extras in the Intent with the extras in the
given Intent.

@param src The exact extras contained in this Intent are copied
into the target intent, replacing any that were previously there."
      end

      operation 740866 "replaceExtras"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Completely replace the extras in the Intent with the given Bundle of
extras.

@param extras The new set of extras in the Intent, or null to erase
all extras."
      end

      operation 740994 "removeExtra"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove extended data from the intent.

@see #putExtra"
      end

      operation 741122 "setFlags"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set special flags controlling how this intent is handled.  Most values
here depend on the type of component being executed by the Intent,
specifically the FLAG_ACTIVITY_* flags are all for use with
{@link Context#startActivity Context.startActivity()} and the
FLAG_RECEIVER_* flags are all for use with
{@link Context#sendBroadcast(Intent) Context.sendBroadcast()}.

<p>See the
<a href=\"{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html\">Tasks and Back
Stack</a> documentation for important information on how some of these options impact
the behavior of your application.

@param flags The desired flags.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getFlags
@see #addFlags

@see #FLAG_GRANT_READ_URI_PERMISSION
@see #FLAG_GRANT_WRITE_URI_PERMISSION
@see #FLAG_DEBUG_LOG_RESOLUTION
@see #FLAG_FROM_BACKGROUND
@see #FLAG_ACTIVITY_BROUGHT_TO_FRONT
@see #FLAG_ACTIVITY_CLEAR_TASK
@see #FLAG_ACTIVITY_CLEAR_TOP
@see #FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET
@see #FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS
@see #FLAG_ACTIVITY_FORWARD_RESULT
@see #FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY
@see #FLAG_ACTIVITY_MULTIPLE_TASK
@see #FLAG_ACTIVITY_NEW_TASK
@see #FLAG_ACTIVITY_NO_ANIMATION
@see #FLAG_ACTIVITY_NO_HISTORY
@see #FLAG_ACTIVITY_NO_USER_ACTION
@see #FLAG_ACTIVITY_PREVIOUS_IS_TOP
@see #FLAG_ACTIVITY_RESET_TASK_IF_NEEDED
@see #FLAG_ACTIVITY_REORDER_TO_FRONT
@see #FLAG_ACTIVITY_SINGLE_TOP
@see #FLAG_ACTIVITY_TASK_ON_HOME
@see #FLAG_RECEIVER_REGISTERED_ONLY"
      end

      operation 741250 "addFlags"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add additional flags to the intent (or with existing flags
value).

@param flags The new flags to set.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setFlags"
      end

      operation 741378 "setPackage"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param in name "packageName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Usually optional) Set an explicit application package name that limits
the components this Intent will resolve to.  If left to the default
value of null, all components in all applications will considered.
If non-null, the Intent can only match the components in the given
application package.

@param packageName The name of the application package to handle the
intent, or null to allow any application package.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #getPackage
@see #resolveActivity"
      end

      operation 741506 "setComponent"
	public return_type class_ref 195458 // Intent
	nparams 1
	  param inout name "component" type class_ref 196738 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "(Usually optional) Explicitly set the component to handle the intent.
If left with the default value of null, the system will determine the
appropriate class to use based on the other fields (action, data,
type, categories) in the Intent.  If this class is defined, the
specified class will always be used regardless of the other fields.  You
should only set this value when you know you absolutely want a specific
class to be used; otherwise it is better to let the system find the
appropriate class so that you will respect the installed applications
and user preferences.

@param component The name of the application component to handle the
intent, or null to let the system find one for you.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setClass
@see #setClassName(Context, String)
@see #setClassName(String, String)
@see #getComponent
@see #resolveActivity"
      end

      operation 741634 "setClassName"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param inout name "packageContext" type class_ref 192770 // Context
	  param in name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience for calling {@link #setComponent} with an
explicit class name.

@param packageContext A Context of the application package implementing
this class.
@param className The name of a class inside of the application package
that will be used as the component for this Intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setComponent
@see #setClass"
      end

      operation 741762 "setClassName"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param in name "packageName" explicit_type "String"
	  param in name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience for calling {@link #setComponent} with an
explicit application package name and class name.

@param packageName The name of the package implementing the desired
component.
@param className The name of a class inside of the application package
that will be used as the component for this Intent.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setComponent
@see #setClass"
      end

      operation 741890 "setClass"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param inout name "packageContext" type class_ref 192770 // Context
	  param inout name "cls" explicit_type "Class<?>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience for calling {@link #setComponent(ComponentName)} with the
name returned by a {@link Class} object.

@param packageContext A Context of the application package implementing
this class.
@param cls The class name to set, equivalent to
           <code>setClassName(context, cls.getName())</code>.

@return Returns the same Intent object, for chaining multiple calls
into a single statement.

@see #setComponent"
      end

      operation 742018 "setSourceBounds"
	public explicit_return_type "void"
	nparams 1
	  param inout name "r" explicit_type "Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the bounds of the sender of this intent, in screen coordinates.  This can be
used as a hint to the receiver for animations and the like.  Null means that there
is no source bounds."
      end

      attribute 485762 "FILL_IN_ACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #fillIn} to allow the current action value to be
overwritten, even if it is already set.
"
      end

      attribute 485890 "FILL_IN_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #fillIn} to allow the current data or type value
overwritten, even if it is already set.
"
      end

      attribute 486018 "FILL_IN_CATEGORIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #fillIn} to allow the current categories to be
overwritten, even if they are already set.
"
      end

      attribute 486146 "FILL_IN_COMPONENT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #fillIn} to allow the current component value to be
overwritten, even if it is already set.
"
      end

      attribute 486274 "FILL_IN_PACKAGE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #fillIn} to allow the current package value to be
overwritten, even if it is already set.
"
      end

      attribute 486402 "FILL_IN_SOURCE_BOUNDS"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #fillIn} to allow the current bounds rectangle to be
overwritten, even if it is already set.
"
      end

      attribute 486530 "FILL_IN_SELECTOR"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<6"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #fillIn} to allow the current selector to be
overwritten, even if it is already set.
"
      end

      attribute 486658 "FILL_IN_CLIP_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1<<7"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Use with {@link #fillIn} to allow the current ClipData to be
overwritten, even if it is already set.
"
      end

      operation 742146 "fillIn"
	public explicit_return_type "int"
	nparams 2
	  param inout name "other" type class_ref 195458 // Intent
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Copy the contents of <var>other</var> in to this object, but only
where fields are not defined by this object.  For purposes of a field
being defined, the following pieces of data in the Intent are
considered to be separate fields:

<ul>
<li> action, as set by {@link #setAction}.
<li> data Uri and MIME type, as set by {@link #setData(Uri)},
{@link #setType(String)}, or {@link #setDataAndType(Uri, String)}.
<li> categories, as set by {@link #addCategory}.
<li> package, as set by {@link #setPackage}.
<li> component, as set by {@link #setComponent(ComponentName)} or
related methods.
<li> source bounds, as set by {@link #setSourceBounds}.
<li> selector, as set by {@link #setSelector(Intent)}.
<li> clip data, as set by {@link #setClipData(ClipData)}.
<li> each top-level name in the associated extras.
</ul>

<p>In addition, you can use the {@link #FILL_IN_ACTION},
{@link #FILL_IN_DATA}, {@link #FILL_IN_CATEGORIES}, {@link #FILL_IN_PACKAGE},
{@link #FILL_IN_COMPONENT}, {@link #FILL_IN_SOURCE_BOUNDS},
{@link #FILL_IN_SELECTOR}, and {@link #FILL_IN_CLIP_DATA} to override
the restriction where the corresponding field will not be replaced if
it is already set.

<p>Note: The component field will only be copied if {@link #FILL_IN_COMPONENT}
is explicitly specified.  The selector will only be copied if
{@link #FILL_IN_SELECTOR} is explicitly specified.

<p>For example, consider Intent A with {data=\"foo\", categories=\"bar\"}
and Intent B with {action=\"gotit\", data-type=\"some/thing\",
categories=\"one\",\"two\"}.

<p>Calling A.fillIn(B, Intent.FILL_IN_DATA) will result in A now
containing: {action=\"gotit\", data-type=\"some/thing\",
categories=\"bar\"}.

@param other Another Intent whose values are to be used to fill in
the current one.
@param flags Options to control which fields can be filled in.

@return Returns a bit mask of {@link #FILL_IN_ACTION},
{@link #FILL_IN_DATA}, {@link #FILL_IN_CATEGORIES}, {@link #FILL_IN_PACKAGE},
{@link #FILL_IN_COMPONENT}, {@link #FILL_IN_SOURCE_BOUNDS}, and
{@link #FILL_IN_SELECTOR} indicating which fields were changed."
      end

      class 204546 "FilterComparison"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 214402 // mIntent (<unidirectional association>)
	  relation 214402 --->
	    a role_name "mIntent" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 214402 // mIntent (<unidirectional association>)
	    b parent class_ref 195458 // Intent
	end

	attribute 486786 "mHashCode"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 742274 "FilterComparison"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "intent" type class_ref 195458 // Intent
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 742402 "getIntent"
	  public return_type class_ref 195458 // Intent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Return the Intent that this FilterComparison represents.
@return Returns the Intent held by the FilterComparison.  Do
not modify!"
	end

	operation 742530 "equals"
	  public explicit_return_type "boolean"
	  nparams 1
	    param inout name "obj" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 742658 "hashCode"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 742786 "filterEquals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "other" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Determine if two intents are the same for the purposes of intent
resolution (filtering). That is, if their action, data, type,
class, and categories are the same.  This does <em>not</em> compare
any extra data included in the intents.

@param other The other Intent to compare against.

@return Returns true if action, data, type, class, and categories
        are the same."
      end

      operation 742914 "filterHashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Generate hash code that matches semantics of filterEquals().

@return Returns the hash value of the action, data, type, class, and
        categories.

@see #filterEquals"
      end

      operation 743042 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 743170 "toInsecureString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 743298 "toInsecureStringWithClip"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 743426 "toShortString"
	public explicit_return_type "String"
	nparams 4
	  param inout name "secure" explicit_type "boolean"
	  param inout name "comp" explicit_type "boolean"
	  param inout name "extras" explicit_type "boolean"
	  param inout name "clip" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 743554 "toShortString"
	public explicit_return_type "void"
	nparams 5
	  param inout name "b" explicit_type "StringBuilder"
	  param inout name "secure" explicit_type "boolean"
	  param inout name "comp" explicit_type "boolean"
	  param inout name "extras" explicit_type "boolean"
	  param inout name "clip" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 743682 "toURI"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "Call {@link #toUri} with 0 flags.
@deprecated Use {@link #toUri} instead."
      end

      operation 743810 "toUri"
	public explicit_return_type "String"
	nparams 1
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convert this Intent into a String holding a URI representation of it.
The returned URI string has been properly URI encoded, so it can be
used with {@link Uri#parse Uri.parse(String)}.  The URI contains the
Intent's data as the base URI, with an additional fragment describing
the action, categories, type, flags, package, component, and extras.

<p>You can convert the returned string back to an Intent with
{@link #getIntent}.

@param flags Additional operating flags.  Either 0 or
{@link #URI_INTENT_SCHEME}.

@return Returns a URI encoding URI string describing the entire contents
of the Intent."
      end

      operation 743938 "toUriInner"
	private explicit_return_type "void"
	nparams 3
	  param inout name "uri" explicit_type "StringBuilder"
	  param in name "scheme" explicit_type "String"
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 744066 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 744194 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 214530 // CREATOR (<unidirectional association>)
	relation 214530 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<Intent>() {
        public Intent createFromParcel(Parcel in) {
            return new Intent(in);
        }
        public Intent[] newArray(int size) {
            return new Intent[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<Intent> ${name}${value};
"
	    classrelation_ref 214530 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 744322 "Intent"
	protected explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 744450 "readFromParcel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 744578 "parseIntent"
	class_operation public return_type class_ref 195458 // Intent
	nparams 3
	  param inout name "resources" type class_ref 199298 // Resources
	  param inout name "parser" explicit_type "XmlPullParser"
	  param inout name "attrs" explicit_type "AttributeSet"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Parses the \"intent\" element (and its children) from XML and instantiates
an Intent object.  The given XML parser should be located at the tag
where parsing should start (often named \"intent\"), from which the
basic action, data, type, and package and class name will be
retrieved.  The function will then parse in to any child elements,
looking for <category android:name=\"xxx\"> tags to add categories and
<extra android:name=\"xxx\" android:value=\"yyy\"> to attach extra data
to the intent.

@param resources The Resources to use when inflating resources.
@param parser The XML parser pointing at an \"intent\" tag.
@param attrs The AttributeSet interface for retrieving extended
attribute data at the current <var>parser</var> location.
@return An Intent object matching the XML data.
@throws XmlPullParserException If there was an XML parsing error.
@throws IOException If there was an I/O error."
      end

      operation 744706 "normalizeMimeType"
	class_operation public explicit_return_type "String"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Normalize a MIME data type.

<p>A normalized MIME type has white-space trimmed,
content-type parameters removed, and is lower-case.
This aligns the type with Android best practices for
intent filtering.

<p>For example, \"text/plain; charset=utf-8\" becomes \"text/plain\".
\"text/x-vCard\" becomes \"text/x-vcard\".

<p>All MIME types received from outside Android (such as user input,
or external sources like Bluetooth, NFC, or the Internet) should
be normalized before they are used to create an Intent.

@param type MIME data type to normalize
@return normalized MIME data type, or null if the input was null
@see {@link #setType}
@see {@link #setTypeAndNormalize}"
      end

      operation 744834 "prepareToLeaveProcess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare this {@link Intent} to leave an app process.

@hide"
      end

      operation 744962 "migrateExtraStreamToClipData"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Migrate any {@link #EXTRA_STREAM} in {@link #ACTION_SEND} and
{@link #ACTION_SEND_MULTIPLE} to {@link ClipData}. Also inspects nested
intents in {@link #ACTION_CHOOSER}.

@return Whether any contents were migrated.
@hide"
      end

      operation 745090 "makeClipItem"
	class_operation private return_type class_ref 196226 // Item
	nparams 4
	  param inout name "streams" explicit_type "ArrayList<Uri>"
	  param inout name "texts" explicit_type "ArrayList<CharSequence>"
	  param inout name "htmlTexts" explicit_type "ArrayList<String>"
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 195586 "ClipboardManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface to the clipboard service, for placing and retrieving text in
the global clipboard.

<p>
You do not instantiate this class directly; instead, retrieve it through
{@link android.content.Context#getSystemService}.

<p>
The ClipboardManager API itself is very simple: it consists of methods
to atomically get and set the current primary clipboard data.  That data
is expressed as a {@link ClipData} object, which defines the protocol
for data exchange between applications.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using the clipboard framework, read the
<a href=\"{@docRoot}guide/topics/clipboard/copy-paste.html\">Copy and Paste</a>
developer guide.</p>
</div>

@see android.content.Context#getSystemService"
      classrelation 204034 // <generalisation>
	relation 204034 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 204034 // <generalisation>
	  b parent class_ref 195714 // ClipboardManager
      end

      attribute 421762 "sStaticLock"
	class_attribute const_attribute private explicit_type "Object"
	init_value " new Object()"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 421890 "sService"
	class_attribute private explicit_type "IClipboard"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 204162 // mContext (<unidirectional association>)
	relation 204162 --->
	  a role_name "mContext" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204162 // mContext (<unidirectional association>)
	  b parent class_ref 192770 // Context
      end

      class 195842 "OnPrimaryClipChangedListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 639106 "onPrimaryClipChanged"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Callback that is invoked by {@link android.content.ClipboardManager} when the primary
clip changes."
	end
      end

      classrelation 204290 // mPrimaryClipChangedListeners (<unidirectional association>)
	relation 204290 --->
	  stereotype "ArrayList"
	  a role_name "mPrimaryClipChangedListeners" init_value " new ArrayList<OnPrimaryClipChangedListener>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 204290 // mPrimaryClipChangedListeners (<unidirectional association>)
	  b parent class_ref 195842 // OnPrimaryClipChangedListener
      end

      attribute 422018 "mPrimaryClipChangedServiceListener"
	const_attribute private explicit_type "IOnPrimaryClipChangedListener.Stub"
	init_value " new IOnPrimaryClipChangedListener.Stub() {
        public void dispatchPrimaryClipChanged() {
            mHandler.sendEmptyMessage(MSG_REPORT_PRIMARY_CLIP_CHANGED);
        }
    }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 422146 "MSG_REPORT_PRIMARY_CLIP_CHANGED"
	class_attribute const_attribute package explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 204418 // mHandler (<unidirectional association>)
	relation 204418 --->
	  a role_name "mHandler" init_value " new Handler() {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case MSG_REPORT_PRIMARY_CLIP_CHANGED:
                    reportPrimaryClipChanged();
            }
        }
    }" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204418 // mHandler (<unidirectional association>)
	  b parent class_ref 168578 // Handler
      end

      operation 639234 "getService"
	class_operation private explicit_return_type "IClipboard"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 639362 "ClipboardManager"
	public explicit_return_type ""
	nparams 2
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "handler" type class_ref 168578 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 639490 "setPrimaryClip"
	public explicit_return_type "void"
	nparams 1
	  param inout name "clip" type class_ref 195970 // ClipData
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current primary clip on the clipboard.  This is the clip that
is involved in normal cut and paste operations.

@param clip The clipped data item to set."
      end

      operation 639618 "getPrimaryClip"
	public return_type class_ref 195970 // ClipData
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current primary clip on the clipboard."
      end

      operation 639746 "getPrimaryClipDescription"
	public return_type class_ref 196098 // ClipDescription
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns a description of the current primary clip on the clipboard
but not a copy of its data."
      end

      operation 639874 "hasPrimaryClip"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if there is currently a primary clip on the clipboard."
      end

      operation 640002 "addPrimaryClipChangedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "what" type class_ref 195842 // OnPrimaryClipChangedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 640130 "removePrimaryClipChangedListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "what" type class_ref 195842 // OnPrimaryClipChangedListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 640258 "getText"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated Use {@link #getPrimaryClip()} instead.  This retrieves
the primary clip and tries to coerce it to a string."
      end

      operation 640386 "setText"
	public explicit_return_type "void"
	nparams 1
	  param inout name "text" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated Use {@link #setPrimaryClip(ClipData)} instead.  This
creates a ClippedItem holding the given text and sets it as the
primary clip.  It has no label or icon."
      end

      operation 640514 "hasText"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@deprecated Use {@link #hasPrimaryClip()} instead."
      end

      operation 640642 "reportPrimaryClipChanged"
	package explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 195970 "ClipData"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of a clipped data on the clipboard.

<p>ClippedData is a complex type containing one or Item instances,
each of which can hold one or more representations of an item of data.
For display to the user, it also has a label and iconic representation.</p>

<p>A ClipData contains a {@link ClipDescription}, which describes
important meta-data about the clip.  In particular, its
{@link ClipDescription#getMimeType(int) getDescription().getMimeType(int)}
must return correct MIME type(s) describing the data in the clip.  For help
in correctly constructing a clip with the correct MIME type, use
{@link #newPlainText(CharSequence, CharSequence)},
{@link #newUri(ContentResolver, CharSequence, Uri)}, and
{@link #newIntent(CharSequence, Intent)}.

<p>Each Item instance can be one of three main classes of data: a simple
CharSequence of text, a single Intent object, or a Uri.  See {@link Item}
for more details.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using the clipboard framework, read the
<a href=\"{@docRoot}guide/topics/clipboard/copy-paste.html\">Copy and Paste</a>
developer guide.</p>
</div>

<a name=\"ImplementingPaste\"></a>
<h3>Implementing Paste or Drop</h3>

<p>To implement a paste or drop of a ClippedData object into an application,
the application must correctly interpret the data for its use.  If the {@link Item}
it contains is simple text or an Intent, there is little to be done: text
can only be interpreted as text, and an Intent will typically be used for
creating shortcuts (such as placing icons on the home screen) or other
actions.

<p>If all you want is the textual representation of the clipped data, you
can use the convenience method {@link Item#coerceToText Item.coerceToText}.
In this case there is generally no need to worry about the MIME types
reported by {@link ClipDescription#getMimeType(int) getDescription().getMimeType(int)},
since any clip item an always be converted to a string.

<p>More complicated exchanges will be done through URIs, in particular
\"content:\" URIs.  A content URI allows the recipient of a ClippedData item
to interact closely with the ContentProvider holding the data in order to
negotiate the transfer of that data.  The clip must also be filled in with
the available MIME types; {@link #newUri(ContentResolver, CharSequence, Uri)}
will take care of correctly doing this.

<p>For example, here is the paste function of a simple NotePad application.
When retrieving the data from the clipboard, it can do either two things:
if the clipboard contains a URI reference to an existing note, it copies
the entire structure of the note into a new note; otherwise, it simply
coerces the clip into text and uses that as the new note's contents.

{@sample development/samples/NotePad/src/com/example/android/notepad/NoteEditor.java
     paste}

<p>In many cases an application can paste various types of streams of data.  For
example, an e-mail application may want to allow the user to paste an image
or other binary data as an attachment.  This is accomplished through the
ContentResolver {@link ContentResolver#getStreamTypes(Uri, String)} and
{@link ContentResolver#openTypedAssetFileDescriptor(Uri, String, android.os.Bundle)}
methods.  These allow a client to discover the type(s) of data that a particular
content URI can make available as a stream and retrieve the stream of data.

<p>For example, the implementation of {@link Item#coerceToText Item.coerceToText}
itself uses this to try to retrieve a URI clip as a stream of text:

{@sample frameworks/base/core/java/android/content/ClipData.java coerceToText}

<a name=\"ImplementingCopy\"></a>
<h3>Implementing Copy or Drag</h3>

<p>To be the source of a clip, the application must construct a ClippedData
object that any recipient can interpret best for their context.  If the clip
is to contain a simple text, Intent, or URI, this is easy: an {@link Item}
containing the appropriate data type can be constructed and used.

<p>More complicated data types require the implementation of support in
a ContentProvider for describing and generating the data for the recipient.
A common scenario is one where an application places on the clipboard the
content: URI of an object that the user has copied, with the data at that
URI consisting of a complicated structure that only other applications with
direct knowledge of the structure can use.

<p>For applications that do not have intrinsic knowledge of the data structure,
the content provider holding it can make the data available as an arbitrary
number of types of data streams.  This is done by implementing the
ContentProvider {@link ContentProvider#getStreamTypes(Uri, String)} and
{@link ContentProvider#openTypedAssetFile(Uri, String, android.os.Bundle)}
methods.

<p>Going back to our simple NotePad application, this is the implementation
it may have to convert a single note URI (consisting of a title and the note
text) into a stream of plain text data.

{@sample development/samples/NotePad/src/com/example/android/notepad/NotePadProvider.java
     stream}

<p>The copy operation in our NotePad application is now just a simple matter
of making a clip containing the URI of the note being copied:

{@sample development/samples/NotePad/src/com/example/android/notepad/NotesList.java
     copy}

<p>Note if a paste operation needs this clip as text (for example to paste
into an editor), then {@link Item#coerceToText(Context)} will ask the content
provider for the clip URI as text and successfully paste the entire note."
      classrelation 204546 // <realization>
	relation 204546 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 204546 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 422274 "MIMETYPES_TEXT_PLAIN"
	class_attribute const_attribute package explicit_type "String"
	multiplicity "[]"
	init_value " new String[] {
        ClipDescription.MIMETYPE_TEXT_PLAIN }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 422402 "MIMETYPES_TEXT_HTML"
	class_attribute const_attribute package explicit_type "String"
	multiplicity "[]"
	init_value " new String[] {
        ClipDescription.MIMETYPE_TEXT_HTML }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 422530 "MIMETYPES_TEXT_URILIST"
	class_attribute const_attribute package explicit_type "String"
	multiplicity "[]"
	init_value " new String[] {
        ClipDescription.MIMETYPE_TEXT_URILIST }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 422658 "MIMETYPES_TEXT_INTENT"
	class_attribute const_attribute package explicit_type "String"
	multiplicity "[]"
	init_value " new String[] {
        ClipDescription.MIMETYPE_TEXT_INTENT }"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 204674 // mClipDescription (<unidirectional association>)
	relation 204674 --->
	  a role_name "mClipDescription" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 204674 // mClipDescription (<unidirectional association>)
	  b parent class_ref 196098 // ClipDescription
      end

      attribute 422786 "mIcon"
	const_attribute package explicit_type "Bitmap"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 196226 "Item"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 422914 "mText"
	  const_attribute package explicit_type "CharSequence"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 423042 "mHtmlText"
	  const_attribute package explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 204930 // mIntent (<unidirectional association>)
	  relation 204930 --->
	    a role_name "mIntent" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 204930 // mIntent (<unidirectional association>)
	    b parent class_ref 195458 // Intent
	end

	classrelation 205058 // mUri (<unidirectional association>)
	  relation 205058 --->
	    a role_name "mUri" const_relation package
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 205058 // mUri (<unidirectional association>)
	    b parent class_ref 145410 // Uri
	end

	operation 640770 "Item"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "text" explicit_type "CharSequence"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an Item consisting of a single block of (possibly styled) text."
	end

	operation 640898 "Item"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "text" explicit_type "CharSequence"
	    param in name "htmlText" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an Item consisting of a single block of (possibly styled) text,
with an alternative HTML formatted representation.  You <em>must</em>
supply a plain text representation in addition to HTML text; coercion
will not be done from HTML formated text into plain text."
	end

	operation 641026 "Item"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "intent" type class_ref 195458 // Intent
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an Item consisting of an arbitrary Intent."
	end

	operation 641154 "Item"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "uri" type class_ref 145410 // Uri
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create an Item consisting of an arbitrary URI."
	end

	operation 641282 "Item"
	  public explicit_return_type ""
	  nparams 3
	    param inout name "text" explicit_type "CharSequence"
	    param inout name "intent" type class_ref 195458 // Intent
	    param inout name "uri" type class_ref 145410 // Uri
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a complex Item, containing multiple representations of
text, Intent, and/or URI."
	end

	operation 641410 "Item"
	  public explicit_return_type ""
	  nparams 4
	    param inout name "text" explicit_type "CharSequence"
	    param in name "htmlText" explicit_type "String"
	    param inout name "intent" type class_ref 195458 // Intent
	    param inout name "uri" type class_ref 145410 // Uri
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Create a complex Item, containing multiple representations of
text, HTML text, Intent, and/or URI.  If providing HTML text, you
<em>must</em> supply a plain text representation as well; coercion
will not be done from HTML formated text into plain text."
	end

	operation 641538 "getText"
	  public explicit_return_type "CharSequence"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve the raw text contained in this Item."
	end

	operation 641666 "getHtmlText"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve the raw HTML text contained in this Item."
	end

	operation 641794 "getIntent"
	  public return_type class_ref 195458 // Intent
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve the raw Intent contained in this Item."
	end

	operation 641922 "getUri"
	  public return_type class_ref 145410 // Uri
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Retrieve the raw URI contained in this Item."
	end

	operation 642050 "coerceToText"
	  public explicit_return_type "CharSequence"
	  nparams 1
	    param inout name "context" type class_ref 192770 // Context
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Turn this item into text, regardless of the type of data it
actually contains.

<p>The algorithm for deciding what text to return is:
<ul>
<li> If {@link #getText} is non-null, return that.
<li> If {@link #getUri} is non-null, try to retrieve its data
as a text stream from its content provider.  If this succeeds, copy
the text into a String and return it.  If it is not a content: URI or
the content provider does not supply a text representation, return
the raw URI as a string.
<li> If {@link #getIntent} is non-null, convert that to an intent:
URI and return it.
<li> Otherwise, return an empty string.
</ul>

@param context The caller's Context, from which its ContentResolver
and other things can be retrieved.
@return Returns the item's textual representation.

BEGIN_INCLUDE(coerceToText)"
	end

	operation 642178 "coerceToStyledText"
	  public explicit_return_type "CharSequence"
	  nparams 1
	    param inout name "context" type class_ref 192770 // Context
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "END_INCLUDE(coerceToText)

Like {@link #coerceToHtmlText(Context)}, but any text that would
be returned as HTML formatting will be returned as text with
style spans.
@param context The caller's Context, from which its ContentResolver
and other things can be retrieved.
@return Returns the item's textual representation."
	end

	operation 642306 "coerceToHtmlText"
	  public explicit_return_type "String"
	  nparams 1
	    param inout name "context" type class_ref 192770 // Context
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Turn this item into HTML text, regardless of the type of data it
actually contains.

<p>The algorithm for deciding what text to return is:
<ul>
<li> If {@link #getHtmlText} is non-null, return that.
<li> If {@link #getText} is non-null, return that, converting to
valid HTML text.  If this text contains style spans,
{@link Html#toHtml(Spanned) Html.toHtml(Spanned)} is used to
convert them to HTML formatting.
<li> If {@link #getUri} is non-null, try to retrieve its data
as a text stream from its content provider.  If the provider can
supply text/html data, that will be preferred and returned as-is.
Otherwise, any text/* data will be returned and escaped to HTML.
If it is not a content: URI or the content provider does not supply
a text representation, HTML text containing a link to the URI
will be returned.
<li> If {@link #getIntent} is non-null, convert that to an intent:
URI and return as an HTML link.
<li> Otherwise, return an empty string.
</ul>

@param context The caller's Context, from which its ContentResolver
and other things can be retrieved.
@return Returns the item's representation as HTML text."
	end

	operation 642434 "coerceToHtmlOrStyledText"
	  private explicit_return_type "CharSequence"
	  nparams 2
	    param inout name "context" type class_ref 192770 // Context
	    param inout name "styled" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 642562 "uriToHtml"
	  private explicit_return_type "String"
	  nparams 1
	    param in name "uri" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 642690 "uriToStyledText"
	  private explicit_return_type "CharSequence"
	  nparams 1
	    param in name "uri" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 642818 "toString"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 642946 "toShortString"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "b" explicit_type "StringBuilder"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " @hide "
	end
      end

      classrelation 204802 // mItems (<unidirectional association>)
	relation 204802 --->
	  stereotype "ArrayList"
	  a role_name "mItems" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 204802 // mItems (<unidirectional association>)
	  b parent class_ref 196226 // Item
      end

      operation 643074 "ClipData"
	public explicit_return_type ""
	nparams 3
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "mimeTypes" explicit_type "String"
	  param inout name "item" type class_ref 196226 // Item
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new clip.

@param label Label to show to the user describing this clip.
@param mimeTypes An array of MIME types this data is available as.
@param item The contents of the first item in the clip."
      end

      operation 643202 "ClipData"
	public explicit_return_type ""
	nparams 2
	  param inout name "description" type class_ref 196098 // ClipDescription
	  param inout name "item" type class_ref 196226 // Item
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new clip.

@param description The ClipDescription describing the clip contents.
@param item The contents of the first item in the clip."
      end

      operation 643330 "ClipData"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 195970 // ClipData
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new clip that is a copy of another clip.  This does a deep-copy
of all items in the clip.

@param other The existing ClipData that is to be copied."
      end

      operation 643458 "newPlainText"
	class_operation public return_type class_ref 195970 // ClipData
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "text" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding data of the type
{@link ClipDescription#MIMETYPE_TEXT_PLAIN}.

@param label User-visible label for the clip data.
@param text The actual text in the clip.
@return Returns a new ClipData containing the specified data."
      end

      operation 643586 "newHtmlText"
	class_operation public return_type class_ref 195970 // ClipData
	nparams 3
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "text" explicit_type "CharSequence"
	  param in name "htmlText" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding data of the type
{@link ClipDescription#MIMETYPE_TEXT_HTML}.

@param label User-visible label for the clip data.
@param text The text of clip as plain text, for receivers that don't
handle HTML.  This is required.
@param htmlText The actual HTML text in the clip.
@return Returns a new ClipData containing the specified data."
      end

      operation 643714 "newIntent"
	class_operation public return_type class_ref 195970 // ClipData
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding an Intent with MIME type
{@link ClipDescription#MIMETYPE_TEXT_INTENT}.

@param label User-visible label for the clip data.
@param intent The actual Intent in the clip.
@return Returns a new ClipData containing the specified data."
      end

      operation 643842 "newUri"
	class_operation public return_type class_ref 195970 // ClipData
	nparams 3
	  param inout name "resolver" type class_ref 193922 // ContentResolver
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding a URI.  If the URI is a content: URI,
this will query the content provider for the MIME type of its data and
use that as the MIME type.  Otherwise, it will use the MIME type
{@link ClipDescription#MIMETYPE_TEXT_URILIST}.

@param resolver ContentResolver used to get information about the URI.
@param label User-visible label for the clip data.
@param uri The URI in the clip.
@return Returns a new ClipData containing the specified data."
      end

      operation 643970 "newRawUri"
	class_operation public return_type class_ref 195970 // ClipData
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new ClipData holding an URI with MIME type
{@link ClipDescription#MIMETYPE_TEXT_URILIST}.
Unlike {@link #newUri(ContentResolver, CharSequence, Uri)}, nothing
is inferred about the URI -- if it is a content: URI holding a bitmap,
the reported type will still be uri-list.  Use this with care!

@param label User-visible label for the clip data.
@param uri The URI in the clip.
@return Returns a new ClipData containing the specified data."
      end

      operation 644098 "getDescription"
	public return_type class_ref 196098 // ClipDescription
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the {@link ClipDescription} associated with this data, describing
what it contains."
      end

      operation 644226 "addItem"
	public explicit_return_type "void"
	nparams 1
	  param inout name "item" type class_ref 196226 // Item
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Item to the overall ClipData container."
      end

      operation 644354 "getIcon"
	public explicit_return_type "Bitmap"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 644482 "getItemCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of items in the clip data."
      end

      operation 644610 "getItemAt"
	public return_type class_ref 196226 // Item
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a single item inside of the clip data.  The index can range
from 0 to {@link #getItemCount()}-1."
      end

      operation 644738 "prepareToLeaveProcess"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Prepare this {@link ClipData} to leave an app process.

@hide"
      end

      operation 644866 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 644994 "toShortString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "b" explicit_type "StringBuilder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 645122 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 645250 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 645378 "ClipData"
	package explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 205186 // CREATOR (<unidirectional association>)
	relation 205186 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<ClipData>() {

            public ClipData createFromParcel(Parcel source) {
                return new ClipData(source);
            }

            public ClipData[] newArray(int size) {
                return new ClipData[size];
            }
        }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ClipData> ${name}${value};
"
	    classrelation_ref 205186 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end
    end

    class 196098 "ClipDescription"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Meta-data describing the contents of a {@link ClipData}.  Provides enough
information to know if you can handle the ClipData, but not the data
itself.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using the clipboard framework, read the
<a href=\"{@docRoot}guide/topics/clipboard/copy-paste.html\">Copy and Paste</a>
developer guide.</p>
</div>"
      classrelation 205314 // <realization>
	relation 205314 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205314 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 423170 "MIMETYPE_TEXT_PLAIN"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"text/plain\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The MIME type for a clip holding plain text.
"
      end

      attribute 423298 "MIMETYPE_TEXT_HTML"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"text/html\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The MIME type for a clip holding HTML text.
"
      end

      attribute 423426 "MIMETYPE_TEXT_URILIST"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"text/uri-list\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The MIME type for a clip holding one or more URIs.  This should be
used for URIs that are meaningful to a user (such as an http: URI).
It should <em>not</em> be used for a content: URI that references some
other piece of data; in that case the MIME type should be the type
of the referenced data.
"
      end

      attribute 423554 "MIMETYPE_TEXT_INTENT"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"text/vnd.android.intent\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The MIME type for a clip holding an Intent.
"
      end

      attribute 423682 "mLabel"
	const_attribute package explicit_type "CharSequence"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 423810 "mMimeTypes"
	const_attribute package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 645506 "ClipDescription"
	public explicit_return_type ""
	nparams 2
	  param inout name "label" explicit_type "CharSequence"
	  param inout name "mimeTypes" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new clip.

@param label Label to show to the user describing this clip.
@param mimeTypes An array of MIME types this data is available as."
      end

      operation 645634 "ClipDescription"
	public explicit_return_type ""
	nparams 1
	  param inout name "o" type class_ref 196098 // ClipDescription
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a copy of a ClipDescription."
      end

      operation 645762 "compareMimeTypes"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param in name "concreteType" explicit_type "String"
	  param in name "desiredType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Helper to compare two MIME types, where one may be a pattern.
@param concreteType A fully-specified MIME type.
@param desiredType A desired MIME type that may be a pattern such as *\\/*.
@return Returns true if the two MIME types match."
      end

      operation 645890 "getLabel"
	public explicit_return_type "CharSequence"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the label for this clip."
      end

      operation 646018 "hasMimeType"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "mimeType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether the clip description contains the given MIME type.

@param mimeType The desired MIME type.  May be a pattern.
@return Returns true if one of the MIME types in the clip description
matches the desired MIME type, else false."
      end

      operation 646146 "filterMimeTypes"
	public explicit_return_type "String"
	nparams 1
	  param in name "mimeType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Filter the clip description MIME types by the given MIME type.  Returns
all MIME types in the clip that match the given MIME type.

@param mimeType The desired MIME type.  May be a pattern.
@return Returns an array of all matching MIME types.  If there are no
matching MIME types, null is returned."
      end

      operation 646274 "getMimeTypeCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of MIME types the clip is available in."
      end

      operation 646402 "getMimeType"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return one of the possible clip MIME types."
      end

      operation 646530 "validate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 646658 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 646786 "toShortString"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "b" explicit_type "StringBuilder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 646914 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 647042 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 647170 "ClipDescription"
	package explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 205442 // CREATOR (<unidirectional association>)
	relation 205442 --->
	  a role_name "CREATOR" init_value "
        new Parcelable.Creator<ClipDescription>() {

            public ClipDescription createFromParcel(Parcel source) {
                return new ClipDescription(source);
            }

            public ClipDescription[] newArray(int size) {
                return new ClipDescription[size];
            }
        }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ClipDescription> ${name}${value};
"
	    classrelation_ref 205442 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end
    end

    class 196354 "ComponentCallbacks"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The set of callback APIs that are common to all application components
({@link android.app.Activity}, {@link android.app.Service},
{@link ContentProvider}, and {@link android.app.Application}).

<p class=\"note\"><strong>Note:</strong> You should also implement the {@link
ComponentCallbacks2} interface, which provides the {@link
ComponentCallbacks2#onTrimMemory} callback to help your app manage its memory usage more
effectively.</p>"
      operation 647298 "onConfigurationChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newConfig" type class_ref 196482 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by the system when the device configuration changes while your
component is running.  Note that, unlike activities, other components
are never restarted when a configuration changes: they must always deal
with the results of the change, such as by re-retrieving resources.

<p>At the time that this function has been called, your Resources
object will have been updated to return resource values matching the
new configuration.

<p>For more information, read <a href=\"{@docRoot}guide/topics/resources/runtime-changes.html\"
>Handling Runtime Changes</a>.

@param newConfig The new device configuration."
      end

      operation 647426 "onLowMemory"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is called when the overall system is running low on memory, and
actively running processes should trim their memory usage.  While
the exact point at which this will be called is not defined, generally
it will happen when all background process have been killed.
That is, before reaching the point of killing processes hosting
service and foreground UI that we would like to avoid killing.

<p>You should implement this method to release
any caches or other unnecessary resources you may be holding on to.
The system will perform a garbage collection for you after returning from this method.
<p>Preferably, you should implement {@link ComponentCallbacks2#onTrimMemory} from
{@link ComponentCallbacks2} to incrementally unload your resources based on various
levels of memory demands.  That API is available for API level 14 and higher, so you should
only use this {@link #onLowMemory} method as a fallback for older versions, which can be
treated the same as {@link ComponentCallbacks2#onTrimMemory} with the {@link
ComponentCallbacks2#TRIM_MEMORY_COMPLETE} level.</p>"
      end
    end

    class 196610 "ComponentCallbacks2"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Extended {@link ComponentCallbacks} interface with a new callback for
finer-grained memory management. This interface is available in all application components
({@link android.app.Activity}, {@link android.app.Service},
{@link ContentProvider}, and {@link android.app.Application}).

<p>You should implement {@link #onTrimMemory} to incrementally release memory based on current
system constraints. Using this callback to release your resources helps provide a more
responsive system overall, but also directly benefits the user experience for
your app by allowing the system to keep your process alive longer. That is,
if you <em>don't</em> trim your resources based on memory levels defined by this callback,
the system is more likely to kill your process while it is cached in the least-recently used
(LRU) list, thus requiring your app to restart and restore all state when the user returns to it.

<p>The values provided by {@link #onTrimMemory} do not represent a single linear progression of
memory limits, but provide you different types of clues about memory availability:</p>
<ul>
<li>When your app is running:
 <ol>
 <li>{@link #TRIM_MEMORY_RUNNING_MODERATE} <br>The device is beginning to run low on memory.
Your app is running and not killable.
 <li>{@link #TRIM_MEMORY_RUNNING_LOW} <br>The device is running much lower on memory.
Your app is running and not killable, but please release unused resources to improve system
performance (which directly impacts your app's performance).
 <li>{@link #TRIM_MEMORY_RUNNING_CRITICAL} <br>The device is running extremely low on memory.
Your app is not yet considered a killable process, but the system will begin killing
background processes if apps do not release resources, so you should release non-critical
resources now to prevent performance degradation.
 </ol>
</li>
<li>When your app's visibility changes:
 <ol>
 <li>{@link #TRIM_MEMORY_UI_HIDDEN} <br>Your app's UI is no longer visible, so this is a good
time to release large resources that are used only by your UI.
 </ol>
</li>
<li>When your app's process resides in the background LRU list:
 <ol>
 <li>{@link #TRIM_MEMORY_BACKGROUND} <br>The system is running low on memory and your process is
near the beginning of the LRU list. Although your app process is not at a high risk of being
killed, the system may already be killing processes in the LRU list, so you should release
resources that are easy to recover so your process will remain in the list and resume
quickly when the user returns to your app.
 <li>{@link #TRIM_MEMORY_MODERATE} <br>The system is running low on memory and your process is
near the middle of the LRU list. If the system becomes further constrained for memory, there's a
chance your process will be killed.
 <li>{@link #TRIM_MEMORY_COMPLETE} <br>The system is running low on memory and your process is
one of the first to be killed if the system does not recover memory now. You should release
absolutely everything that's not critical to resuming your app state.
  <p>To support API levels lower than 14, you can use the {@link #onLowMemory} method as a
fallback that's roughly equivalent to the {@link ComponentCallbacks2#TRIM_MEMORY_COMPLETE} level.
 </li>
 </ol>
<p class=\"note\"><strong>Note:</strong> When the system begins
killing processes in the LRU list, although it primarily works bottom-up, it does give some
consideration to which processes are consuming more memory and will thus provide more gains in
memory if killed. So the less memory you consume while in the LRU list overall, the better
your chances are to remain in the list and be able to quickly resume.</p>
</li>
</ul>
<p>More information about the different stages of a process lifecycle (such as what it means
to be placed in the background LRU list) is provided in the <a
href=\"{@docRoot}guide/components/processes-and-threads.html#Lifecycle\">Processes and Threads</a>
document."
      classrelation 205570 // <generalisation>
	relation 205570 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205570 // <generalisation>
	  b parent class_ref 196354 // ComponentCallbacks
      end

      attribute 423938 "TRIM_MEMORY_COMPLETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 80"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Level for {@link #onTrimMemory(int)}: the process is nearing the end
of the background LRU list, and if more memory isn't found soon it will
be killed.
"
      end

      attribute 424066 "TRIM_MEMORY_MODERATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 60"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Level for {@link #onTrimMemory(int)}: the process is around the middle
of the background LRU list; freeing memory can help the system keep
other processes running later in the list for better overall performance.
"
      end

      attribute 424194 "TRIM_MEMORY_BACKGROUND"
	class_attribute const_attribute public explicit_type "int"
	init_value " 40"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Level for {@link #onTrimMemory(int)}: the process has gone on to the
LRU list.  This is a good opportunity to clean up resources that can
efficiently and quickly be re-built if the user returns to the app.
"
      end

      attribute 424322 "TRIM_MEMORY_UI_HIDDEN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Level for {@link #onTrimMemory(int)}: the process had been showing
a user interface, and is no longer doing so.  Large allocations with
the UI should be released at this point to allow memory to be better
managed.
"
      end

      attribute 424450 "TRIM_MEMORY_RUNNING_CRITICAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 15"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Level for {@link #onTrimMemory(int)}: the process is not an expendable
background process, but the device is running extremely low on memory
and is about to not be able to keep any background processes running.
Your running process should free up as many non-critical resources as it
can to allow that memory to be used elsewhere.  The next thing that
will happen after this is {@link #onLowMemory()} called to report that
nothing at all can be kept in the background, a situation that can start
to notably impact the user.
"
      end

      attribute 424578 "TRIM_MEMORY_RUNNING_LOW"
	class_attribute const_attribute public explicit_type "int"
	init_value " 10"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Level for {@link #onTrimMemory(int)}: the process is not an expendable
background process, but the device is running low on memory.
Your running process should free up unneeded resources to allow that
memory to be used elsewhere.
"
      end

      attribute 424706 "TRIM_MEMORY_RUNNING_MODERATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 5"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Level for {@link #onTrimMemory(int)}: the process is not an expendable
background process, but the device is running moderately low on memory.
Your running process may want to release some unneeded resources for
use elsewhere.
"
      end

      operation 647554 "onTrimMemory"
	public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when the operating system has determined that it is a good
time for a process to trim unneeded memory from its process.  This will
happen for example when it goes in the background and there is not enough
memory to keep as many background processes running as desired.  You
should never compare to exact values of the level, since new intermediate
values may be added -- you will typically want to compare if the value
is greater or equal to a level you are interested in.

<p>To retrieve the processes current trim level at any point, you can
use {@link android.app.ActivityManager#getMyMemoryState
ActivityManager.getMyMemoryState(RunningAppProcessInfo)}.

@param level The context of the trim, giving a hint of the amount of
trimming the application may like to perform.  May be
{@link #TRIM_MEMORY_COMPLETE}, {@link #TRIM_MEMORY_MODERATE},
{@link #TRIM_MEMORY_BACKGROUND}, {@link #TRIM_MEMORY_UI_HIDDEN},
{@link #TRIM_MEMORY_RUNNING_CRITICAL}, {@link #TRIM_MEMORY_RUNNING_LOW},
or {@link #TRIM_MEMORY_RUNNING_MODERATE}."
      end
    end

    class 196738 "ComponentName"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Identifier for a specific application component
({@link android.app.Activity}, {@link android.app.Service},
{@link android.content.BroadcastReceiver}, or
{@link android.content.ContentProvider}) that is available.  Two
pieces of information, encapsulated here, are required to identify
a component: the package (a String) it exists in, and the class (a String)
name inside of that package.
"
      classrelation 205698 // <realization>
	relation 205698 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205698 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      classrelation 205826 // <realization>
	relation 205826 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 205826 // <realization>
	  b parent class_ref 174210 // Cloneable
      end

      classrelation 205954 // <realization>
	relation 205954 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<ComponentName>"
	    classrelation_ref 205954 // <realization>
	  b parent class_ref 146818 // Comparable
      end

      attribute 424834 "mPackage"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 424962 "mClass"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 647682 "ComponentName"
	public explicit_return_type ""
	nparams 2
	  param in name "pkg" explicit_type "String"
	  param in name "cls" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new component identifier.

@param pkg The name of the package that the component exists in.  Can
not be null.
@param cls The name of the class inside of <var>pkg</var> that
implements the component.  Can not be null."
      end

      operation 647810 "ComponentName"
	public explicit_return_type ""
	nparams 2
	  param inout name "pkg" type class_ref 192770 // Context
	  param in name "cls" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new component identifier from a Context and class name.

@param pkg A Context for the package implementing the component,
from which the actual package name will be retrieved.
@param cls The name of the class inside of <var>pkg</var> that
implements the component."
      end

      operation 647938 "ComponentName"
	public explicit_return_type ""
	nparams 2
	  param inout name "pkg" type class_ref 192770 // Context
	  param inout name "cls" explicit_type "Class<?>"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new component identifier from a Context and Class object.

@param pkg A Context for the package implementing the component, from
which the actual package name will be retrieved.
@param cls The Class object of the desired component, from which the
actual class name will be retrieved."
      end

      operation 648066 "clone"
	public return_type class_ref 196738 // ComponentName
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 648194 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the package name of this component."
      end

      operation 648322 "getClassName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the class name of this component."
      end

      operation 648450 "getShortClassName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the class name, either fully qualified or in a shortened form
(with a leading '.') if it is a suffix of the package."
      end

      operation 648578 "appendShortClassName"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "sb" explicit_type "StringBuilder"
	  param in name "packageName" explicit_type "String"
	  param in name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 648706 "printShortClassName"
	class_operation private explicit_return_type "void"
	nparams 3
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "packageName" explicit_type "String"
	  param in name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 648834 "flattenToString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a String that unambiguously describes both the package and
class names contained in the ComponentName.  You can later recover
the ComponentName from this string through
{@link #unflattenFromString(String)}.

@return Returns a new String holding the package and class names.  This
is represented as the package name, concatenated with a '/' and then the
class name.

@see #unflattenFromString(String)"
      end

      operation 648962 "flattenToShortString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The same as {@link #flattenToString()}, but abbreviates the class
name if it is a suffix of the package.  The result can still be used
with {@link #unflattenFromString(String)}.

@return Returns a new String holding the package and class names.  This
is represented as the package name, concatenated with a '/' and then the
class name.

@see #unflattenFromString(String)"
      end

      operation 649090 "appendShortString"
	public explicit_return_type "void"
	nparams 1
	  param inout name "sb" explicit_type "StringBuilder"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 649218 "appendShortString"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "sb" explicit_type "StringBuilder"
	  param in name "packageName" explicit_type "String"
	  param in name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 649346 "printShortString"
	class_operation public explicit_return_type "void"
	nparams 3
	  param inout name "pw" explicit_type "PrintWriter"
	  param in name "packageName" explicit_type "String"
	  param in name "className" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 649474 "unflattenFromString"
	class_operation public return_type class_ref 196738 // ComponentName
	nparams 1
	  param in name "str" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Recover a ComponentName from a String that was previously created with
{@link #flattenToString()}.  It splits the string at the first '/',
taking the part before as the package name and the part after as the
class name.  As a special convenience (to use, for example, when
parsing component names on the command line), if the '/' is immediately
followed by a '.' then the final class name will be the concatenation
of the package name with the string following the '/'.  Thus
\"com.foo/.Blah\" becomes package=\"com.foo\" class=\"com.foo.Blah\".

@param str The String that was returned by flattenToString().
@return Returns a new ComponentName containing the package and class
names that were encoded in <var>str</var>

@see #flattenToString()"
      end

      operation 649602 "toShortString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return string representation of this class without the class's name
as a prefix."
      end

      operation 649730 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 649858 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "obj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 649986 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 650114 "compareTo"
	public explicit_return_type "int"
	nparams 1
	  param inout name "that" type class_ref 196738 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 650242 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 650370 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 650498 "writeToParcel"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "c" type class_ref 196738 // ComponentName
	  param inout name "out" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write a ComponentName to a Parcel, handling null pointers.  Must be
read with {@link #readFromParcel(Parcel)}.

@param c The ComponentName to be written.
@param out The Parcel in which the ComponentName will be placed.

@see #readFromParcel(Parcel)"
      end

      operation 650626 "readFromParcel"
	class_operation public return_type class_ref 196738 // ComponentName
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Read a ComponentName from a Parcel that was previously written
with {@link #writeToParcel(ComponentName, Parcel)}, returning either
a null or new object as appropriate.

@param in The Parcel from which to read the ComponentName
@return Returns a new ComponentName matching the previously written
object, or null if a null had been written.

@see #writeToParcel(ComponentName, Parcel)"
      end

      classrelation 206082 // CREATOR (<unidirectional association>)
	relation 206082 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<ComponentName>() {
        public ComponentName createFromParcel(Parcel in) {
            return new ComponentName(in);
        }

        public ComponentName[] newArray(int size) {
            return new ComponentName[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ComponentName> ${name}${value};
"
	    classrelation_ref 206082 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 650754 "ComponentName"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Instantiate a new ComponentName from the data in a Parcel that was
previously written with {@link #writeToParcel(Parcel, int)}.  Note that you
must not use this with data written by
{@link #writeToParcel(ComponentName, Parcel)} since it is not possible
to handle a null ComponentObject here.

@param in The Parcel containing the previously written ComponentName,
positioned at the location in the buffer where it was written."
      end

      operation 650882 "ComponentName"
	private explicit_return_type ""
	nparams 2
	  param in name "pkg" explicit_type "String"
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 196866 "ContentInsertHandler"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface to insert data to ContentResolver
@hide"
      classrelation 206210 // <generalisation>
	relation 206210 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206210 // <generalisation>
	  b parent class_ref 196994 // ContentHandler
      end

      operation 651010 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "contentResolver" type class_ref 193922 // ContentResolver
	  param inout name "in" explicit_type "InputStream"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "insert data from InputStream to ContentResolver
@param contentResolver
@param in InputStream
@throws IOException
@throws SAXException"
      end

      operation 651138 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "contentResolver" type class_ref 193922 // ContentResolver
	  param in name "in" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "insert data from String to ContentResolver
@param contentResolver
@param in input string
@throws SAXException"
      end
    end

    class 197122 "ContentProvider"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Content providers are one of the primary building blocks of Android applications, providing
content to applications. They encapsulate data and provide it to applications through the single
{@link ContentResolver} interface. A content provider is only required if you need to share
data between multiple applications. For example, the contacts data is used by multiple
applications and must be stored in a content provider. If you don't need to share data amongst
multiple applications you can use a database directly via
{@link android.database.sqlite.SQLiteDatabase}.

<p>When a request is made via
a {@link ContentResolver} the system inspects the authority of the given URI and passes the
request to the content provider registered with the authority. The content provider can interpret
the rest of the URI however it wants. The {@link UriMatcher} class is helpful for parsing
URIs.</p>

<p>The primary methods that need to be implemented are:
<ul>
  <li>{@link #onCreate} which is called to initialize the provider</li>
  <li>{@link #query} which returns data to the caller</li>
  <li>{@link #insert} which inserts new data into the content provider</li>
  <li>{@link #update} which updates existing data in the content provider</li>
  <li>{@link #delete} which deletes data from the content provider</li>
  <li>{@link #getType} which returns the MIME type of data in the content provider</li>
</ul></p>

<p class=\"caution\">Data access methods (such as {@link #insert} and
{@link #update}) may be called from many threads at once, and must be thread-safe.
Other methods (such as {@link #onCreate}) are only called from the application
main thread, and must avoid performing lengthy operations.  See the method
descriptions for their expected thread behavior.</p>

<p>Requests to {@link ContentResolver} are automatically forwarded to the appropriate
ContentProvider instance, so subclasses don't have to worry about the details of
cross-process calls.</p>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using content providers, read the
<a href=\"{@docRoot}guide/topics/providers/content-providers.html\">Content Providers</a>
developer guide.</p>"
      classrelation 206338 // <realization>
	relation 206338 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206338 // <realization>
	  b parent class_ref 196610 // ComponentCallbacks2
      end

      attribute 425090 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ContentProvider\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 206466 // mContext (<unidirectional association>)
	relation 206466 --->
	  a role_name "mContext" init_value " null" private
	    comment "
Note: if you add methods to ContentProvider, you must add similar methods to
      MockContentProvider.

"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 206466 // mContext (<unidirectional association>)
	  b parent class_ref 192770 // Context
      end

      attribute 425218 "mMyUid"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 425346 "mReadPermission"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 425474 "mWritePermission"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 206594 // mPathPermissions (<unidirectional association>)
	relation 206594 --->
	  a role_name "mPathPermissions" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 206594 // mPathPermissions (<unidirectional association>)
	  b parent class_ref 197250 // PathPermission
      end

      attribute 425602 "mExported"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 425730 "mNoPerms"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 425858 "mCallingPackage"
	const_attribute private explicit_type "String"
	init_value " new ThreadLocal<String>()"
	stereotype "ThreadLocal"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 197378 "Transport"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 207490 // <generalisation>
	  relation 207490 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 207490 // <generalisation>
	    b parent class_ref 197634 // ContentProviderNative
	end

	attribute 428034 "mAppOpsManager"
	  package explicit_type "AppOpsManager"
	  init_value " null"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 428162 "mReadOp"
	  package explicit_type "int"
	  init_value " AppOpsManager.OP_NONE"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 428290 "mWriteOp"
	  package explicit_type "int"
	  init_value " AppOpsManager.OP_NONE"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 656386 "getContentProvider"
	  package return_type class_ref 197122 // ContentProvider
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 656514 "getProviderName"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 656642 "query"
	  public explicit_return_type "Cursor"
	  nparams 7
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param inout name "projection" explicit_type "String"
	    param in name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	    param in name "sortOrder" explicit_type "String"
	    param inout name "cancellationSignal" explicit_type "ICancellationSignal"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 656770 "getType"
	  public explicit_return_type "String"
	  nparams 1
	    param inout name "uri" type class_ref 145410 // Uri
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 656898 "insert"
	  public return_type class_ref 145410 // Uri
	  nparams 3
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param inout name "initialValues" type class_ref 194178 // ContentValues
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 657026 "bulkInsert"
	  public explicit_return_type "int"
	  nparams 3
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param inout name "initialValues" type class_ref 194178 // ContentValues
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 657154 "applyBatch"
	  public return_type class_ref 197890 // ContentProviderResult
	  nparams 2
	    param in name "callingPkg" explicit_type "String"
	    param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	  nexceptions 1
	    exception class_ref 198018 // OperationApplicationException
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 657282 "delete"
	  public explicit_return_type "int"
	  nparams 4
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param in name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 657410 "update"
	  public explicit_return_type "int"
	  nparams 5
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param inout name "values" type class_ref 194178 // ContentValues
	    param in name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 657538 "openFile"
	  public return_type class_ref 176898 // ParcelFileDescriptor
	  nparams 4
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param in name "mode" explicit_type "String"
	    param inout name "cancellationSignal" explicit_type "ICancellationSignal"
	  nexceptions 1
	    explicit_exception "FileNotFoundException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 657666 "openAssetFile"
	  public return_type class_ref 197762 // AssetFileDescriptor
	  nparams 4
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param in name "mode" explicit_type "String"
	    param inout name "cancellationSignal" explicit_type "ICancellationSignal"
	  nexceptions 1
	    explicit_exception "FileNotFoundException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 657794 "call"
	  public return_type class_ref 174082 // Bundle
	  nparams 4
	    param in name "callingPkg" explicit_type "String"
	    param in name "method" explicit_type "String"
	    param in name "arg" explicit_type "String"
	    param inout name "extras" type class_ref 174082 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 657922 "getStreamTypes"
	  public explicit_return_type "String"
	  nparams 2
	    param inout name "uri" type class_ref 145410 // Uri
	    param in name "mimeTypeFilter" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 658050 "openTypedAssetFile"
	  public return_type class_ref 197762 // AssetFileDescriptor
	  nparams 5
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param in name "mimeType" explicit_type "String"
	    param inout name "opts" type class_ref 174082 // Bundle
	    param inout name "cancellationSignal" explicit_type "ICancellationSignal"
	  nexceptions 1
	    explicit_exception "FileNotFoundException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 658178 "createCancellationSignal"
	  public explicit_return_type "ICancellationSignal"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 658306 "canonicalize"
	  public return_type class_ref 145410 // Uri
	  nparams 2
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 658434 "uncanonicalize"
	  public return_type class_ref 145410 // Uri
	  nparams 2
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 658562 "enforceFilePermission"
	  private explicit_return_type "void"
	  nparams 3
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	    param in name "mode" explicit_type "String"
	  nexceptions 2
	    explicit_exception "FileNotFoundException"
	    explicit_exception "SecurityException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 658690 "enforceReadPermission"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	  nexceptions 1
	    explicit_exception "SecurityException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 658818 "enforceWritePermission"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	  nexceptions 1
	    explicit_exception "SecurityException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 658946 "enforceDeletePermission"
	  private explicit_return_type "int"
	  nparams 2
	    param in name "callingPkg" explicit_type "String"
	    param inout name "uri" type class_ref 145410 // Uri
	  nexceptions 1
	    explicit_exception "SecurityException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 206722 // mTransport (<unidirectional association>)
	relation 206722 --->
	  a role_name "mTransport" init_value " new Transport()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 206722 // mTransport (<unidirectional association>)
	  b parent class_ref 197378 // Transport
      end

      operation 651266 "ContentProvider"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct a ContentProvider instance.  Content providers must be
<a href=\"{@docRoot}guide/topics/manifest/provider-element.html\">declared
in the manifest</a>, accessed with {@link ContentResolver}, and created
automatically by the system, so applications usually do not create
ContentProvider instances directly.

<p>At construction time, the object is uninitialized, and most fields and
methods are unavailable.  Subclasses should initialize themselves in
{@link #onCreate}, not the constructor.

<p>Content providers are created on the application main thread at
application launch time.  The constructor must not perform lengthy
operations, or application startup will be delayed."
      end

      operation 651394 "ContentProvider"
	public explicit_return_type ""
	nparams 4
	  param inout name "context" type class_ref 192770 // Context
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param inout name "pathPermissions" type class_ref 197250 // PathPermission
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor just for mocking.

@param context A Context object which should be some mock instance (like the
instance of {@link android.test.mock.MockContext}).
@param readPermission The read permision you want this instance should have in the
test, which is available via {@link #getReadPermission()}.
@param writePermission The write permission you want this instance should have
in the test, which is available via {@link #getWritePermission()}.
@param pathPermissions The PathPermissions you want this instance should have
in the test, which is available via {@link #getPathPermissions()}.
@hide"
      end

      operation 651522 "coerceToLocalContentProvider"
	class_operation public return_type class_ref 197122 // ContentProvider
	nparams 1
	  param inout name "abstractInterface" type class_ref 197506 // IContentProvider
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Given an IContentProvider, try to coerce it back to the real
ContentProvider object if it is running in the local process.  This can
be used if you know you are running in the same process as a provider,
and want to get direct access to its implementation details.  Most
clients should not nor have a reason to use it.

@param abstractInterface The ContentProvider interface that is to be
             coerced.
@return If the IContentProvider is non-{@code null} and local, returns its actual
ContentProvider instance.  Otherwise returns {@code null}.
@hide"
      end

      operation 659074 "enforceReadPermissionInner"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	nexceptions 1
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 659202 "enforceWritePermissionInner"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	nexceptions 1
	  explicit_exception "SecurityException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 659330 "getContext"
	public return_type class_ref 192770 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieves the Context this provider is running in.  Only available once
{@link #onCreate} has been called -- this will return {@code null} in the
constructor."
      end

      operation 659458 "setCallingPackage"
	private explicit_return_type "String"
	nparams 1
	  param in name "callingPackage" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the calling package, returning the current value (or {@code null})
which can be used later to restore the previous state."
      end

      operation 659586 "getCallingPackage"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the package name of the caller that initiated the request being
processed on the current thread. The returned package will have been
verified to belong to the calling UID. Returns {@code null} if not
currently processing a request.
<p>
This will always return {@code null} when processing
{@link #getType(Uri)} or {@link #getStreamTypes(Uri, String)} requests.

@see Binder#getCallingUid()
@see Context#grantUriPermission(String, Uri, int)
@throws SecurityException if the calling package doesn't belong to the
            calling UID."
      end

      operation 659714 "setReadPermission"
	protected explicit_return_type "void"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the permission required to read data from the content
provider.  This is normally set for you from its manifest information
when the provider is first created.

@param permission Name of the permission required for read-only access."
      end

      operation 659842 "getReadPermission"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of the permission required for read-only access to
this content provider.  This method can be called from multiple
threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>."
      end

      operation 659970 "setWritePermission"
	protected explicit_return_type "void"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the permission required to read and write data in the content
provider.  This is normally set for you from its manifest information
when the provider is first created.

@param permission Name of the permission required for read/write access."
      end

      operation 660098 "getWritePermission"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the name of the permission required for read/write access to
this content provider.  This method can be called from multiple
threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>."
      end

      operation 660226 "setPathPermissions"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "permissions" type class_ref 197250 // PathPermission
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the path-based permission required to read and/or write data in
the content provider.  This is normally set for you from its manifest
information when the provider is first created.

@param permissions Array of path permission descriptions."
      end

      operation 660354 "getPathPermissions"
	public return_type class_ref 197250 // PathPermission
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the path-based permissions required for read and/or write access to
this content provider.  This method can be called from multiple
threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>."
      end

      operation 660482 "setAppOps"
	public explicit_return_type "void"
	nparams 2
	  param in name "readOp" explicit_type "int"
	  param in name "writeOp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 660610 "getAppOpsManager"
	public explicit_return_type "AppOpsManager"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 660738 "onCreate"
	abstract public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to initialize your content provider on startup.
This method is called for all registered content providers on the
application main thread at application launch time.  It must not perform
lengthy operations, or application startup will be delayed.

<p>You should defer nontrivial initialization (such as opening,
upgrading, and scanning databases) until the content provider is used
(via {@link #query}, {@link #insert}, etc).  Deferred initialization
keeps application startup fast, avoids unnecessary work if the provider
turns out not to be needed, and stops database errors (such as a full
disk) from halting application launch.

<p>If you use SQLite, {@link android.database.sqlite.SQLiteOpenHelper}
is a helpful utility class that makes it easy to manage databases,
and will automatically defer opening until first use.  If you do use
SQLiteOpenHelper, make sure to avoid calling
{@link android.database.sqlite.SQLiteOpenHelper#getReadableDatabase} or
{@link android.database.sqlite.SQLiteOpenHelper#getWritableDatabase}
from this method.  (Instead, override
{@link android.database.sqlite.SQLiteOpenHelper#onOpen} to initialize the
database when it is first opened.)

@return true if the provider was successfully loaded, false otherwise"
      end

      operation 660866 "onConfigurationChanged"
	public explicit_return_type "void"
	nparams 1
	  param inout name "newConfig" type class_ref 196482 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
This method is always called on the application main thread, and must
not perform lengthy operations.

<p>The default content provider implementation does nothing.
Override this method to take appropriate action.
(Content providers do not usually care about things like screen
orientation, but may want to know about locale changes.)"
      end

      operation 660994 "onLowMemory"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@inheritDoc}
This method is always called on the application main thread, and must
not perform lengthy operations.

<p>The default content provider implementation does nothing.
Subclasses may override this method to take appropriate action."
      end

      operation 661122 "onTrimMemory"
	public explicit_return_type "void"
	nparams 1
	  param in name "level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 661250 "rejectQuery"
	public explicit_return_type "Cursor"
	nparams 6
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 174338 // CancellationSignal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Implementation when a caller has performed a query on the content
provider, but that call has been rejected for the operation given
to {@link #setAppOps(int, int)}.  The default implementation
rewrites the <var>selection</var> argument to include a condition
that is never true (so will always result in an empty cursor)
and calls through to {@link #query(android.net.Uri, String[], String, String[],
String, android.os.CancellationSignal)} with that."
      end

      operation 661378 "query"
	abstract public explicit_return_type "Cursor"
	nparams 5
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to handle query requests from clients.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
<p>
Example client call:<p>
<pre>// Request a specific record.
Cursor managedCursor = managedQuery(
ContentUris.withAppendedId(Contacts.People.CONTENT_URI, 2),
projection,    // Which columns to return.
null,          // WHERE clause.
null,          // WHERE clause value substitution
People.NAME + \" ASC\");   // Sort order.</pre>
Example implementation:<p>
<pre>// SQLiteQueryBuilder is a helper class that creates the
// proper SQL syntax for us.
SQLiteQueryBuilder qBuilder = new SQLiteQueryBuilder();

// Set the table we're querying.
qBuilder.setTables(DATABASE_TABLE_NAME);

// If the query ends in a specific record number, we're
// being asked for a specific record, so set the
// WHERE clause in our query.
if((URI_MATCHER.match(uri)) == SPECIFIC_MESSAGE){
qBuilder.appendWhere(\"_id=\" + uri.getPathLeafId());
}

// Make the query.
Cursor c = qBuilder.query(mDb,
projection,
selection,
selectionArgs,
groupBy,
having,
sortOrder);
c.setNotificationUri(getContext().getContentResolver(), uri);
return c;</pre>

@param uri The URI to query. This will be the full URI sent by the client;
     if the client is requesting a specific record, the URI will end in a record number
     that the implementation should parse and add to a WHERE or HAVING clause, specifying
     that _id value.
@param projection The list of columns to put into the cursor. If
     {@code null} all columns are included.
@param selection A selection criteria to apply when filtering rows.
     If {@code null} then all rows are included.
@param selectionArgs You may include ?s in selection, which will be replaced by
     the values from selectionArgs, in order that they appear in the selection.
     The values will be bound as Strings.
@param sortOrder How the rows in the cursor should be sorted.
     If {@code null} then the provider is free to define the sort order.
@return a Cursor or {@code null}."
      end

      operation 661506 "query"
	public explicit_return_type "Cursor"
	nparams 6
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" type class_ref 174338 // CancellationSignal
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to handle query requests from clients with support for cancellation.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
<p>
Example client call:<p>
<pre>// Request a specific record.
Cursor managedCursor = managedQuery(
ContentUris.withAppendedId(Contacts.People.CONTENT_URI, 2),
projection,    // Which columns to return.
null,          // WHERE clause.
null,          // WHERE clause value substitution
People.NAME + \" ASC\");   // Sort order.</pre>
Example implementation:<p>
<pre>// SQLiteQueryBuilder is a helper class that creates the
// proper SQL syntax for us.
SQLiteQueryBuilder qBuilder = new SQLiteQueryBuilder();

// Set the table we're querying.
qBuilder.setTables(DATABASE_TABLE_NAME);

// If the query ends in a specific record number, we're
// being asked for a specific record, so set the
// WHERE clause in our query.
if((URI_MATCHER.match(uri)) == SPECIFIC_MESSAGE){
qBuilder.appendWhere(\"_id=\" + uri.getPathLeafId());
}

// Make the query.
Cursor c = qBuilder.query(mDb,
projection,
selection,
selectionArgs,
groupBy,
having,
sortOrder);
c.setNotificationUri(getContext().getContentResolver(), uri);
return c;</pre>
<p>
If you implement this method then you must also implement the version of
{@link #query(Uri, String[], String, String[], String)} that does not take a cancellation
signal to ensure correct operation on older versions of the Android Framework in
which the cancellation signal overload was not available.

@param uri The URI to query. This will be the full URI sent by the client;
     if the client is requesting a specific record, the URI will end in a record number
     that the implementation should parse and add to a WHERE or HAVING clause, specifying
     that _id value.
@param projection The list of columns to put into the cursor. If
     {@code null} all columns are included.
@param selection A selection criteria to apply when filtering rows.
     If {@code null} then all rows are included.
@param selectionArgs You may include ?s in selection, which will be replaced by
     the values from selectionArgs, in order that they appear in the selection.
     The values will be bound as Strings.
@param sortOrder How the rows in the cursor should be sorted.
     If {@code null} then the provider is free to define the sort order.
@param cancellationSignal A signal to cancel the operation in progress, or {@code null} if none.
If the operation is canceled, then {@link OperationCanceledException} will be thrown
when the query is executed.
@return a Cursor or {@code null}."
      end

      operation 661634 "getType"
	abstract public explicit_return_type "String"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to handle requests for the MIME type of the data at the
given URI.  The returned MIME type should start with
<code>vnd.android.cursor.item</code> for a single record,
or <code>vnd.android.cursor.dir/</code> for multiple items.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>Note that there are no permissions needed for an application to
access this information; if your content provider requires read and/or
write permissions, or is not exported, all applications can still call
this method regardless of their access permissions.  This allows them
to retrieve the MIME type for a URI when dispatching intents.

@param uri the URI to query.
@return a MIME type string, or {@code null} if there is no type."
      end

      operation 661762 "canonicalize"
	public return_type class_ref 145410 // Uri
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to support canonicalization of URIs that refer to your
content provider.  A canonical URI is one that can be transported across
devices, backup/restore, and other contexts, and still be able to refer
to the same data item.  Typically this is implemented by adding query
params to the URI allowing the content provider to verify that an incoming
canonical URI references the same data as it was originally intended for and,
if it doesn't, to find that data (if it exists) in the current environment.

<p>For example, if the content provider holds people and a normal URI in it
is created with a row index into that people database, the cananical representation
may have an additional query param at the end which specifies the name of the
person it is intended for.  Later calls into the provider with that URI will look
up the row of that URI's base index and, if it doesn't match or its entry's
name doesn't match the name in the query param, perform a query on its database
to find the correct row to operate on.</p>

<p>If you implement support for canonical URIs, <b>all</b> incoming calls with
URIs (including this one) must perform this verification and recovery of any
canonical URIs they receive.  In addition, you must also implement
{@link #uncanonicalize} to strip the canonicalization of any of these URIs.</p>

<p>The default implementation of this method returns null, indicating that
canonical URIs are not supported.</p>

@param url The Uri to canonicalize.

@return Return the canonical representation of <var>url</var>, or null if
canonicalization of that Uri is not supported."
      end

      operation 661890 "uncanonicalize"
	public return_type class_ref 145410 // Uri
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Remove canonicalization from canonical URIs previously returned by
{@link #canonicalize}.  For example, if your implementation is to add
a query param to canonicalize a URI, this method can simply trip any
query params on the URI.  The default implementation always returns the
same <var>url</var> that was passed in.

@param url The Uri to remove any canonicalization from.

@return Return the non-canonical representation of <var>url</var>, return
the <var>url</var> as-is if there is nothing to do, or return null if
the data identified by the canonical representation can not be found in
the current environment."
      end

      operation 662018 "rejectInsert"
	public return_type class_ref 145410 // Uri
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@hide
Implementation when a caller has performed an insert on the content
provider, but that call has been rejected for the operation given
to {@link #setAppOps(int, int)}.  The default implementation simply
returns a dummy URI that is the base URI with a 0 path element
appended."
      end

      operation 662146 "insert"
	abstract public return_type class_ref 145410 // Uri
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to handle requests to insert a new row.
As a courtesy, call {@link ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver) notifyChange()}
after inserting.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.
@param uri The content:// URI of the insertion request. This must not be {@code null}.
@param values A set of column_name/value pairs to add to the database.
    This must not be {@code null}.
@return The URI for the newly inserted item."
      end

      operation 662274 "bulkInsert"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override this to handle requests to insert a set of new rows, or the
default implementation will iterate over the values and call
{@link #insert} on each of them.
As a courtesy, call {@link ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver) notifyChange()}
after inserting.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

@param uri The content:// URI of the insertion request.
@param values An array of sets of column_name/value pairs to add to the database.
   This must not be {@code null}.
@return The number of values that were inserted."
      end

      operation 662402 "delete"
	abstract public explicit_return_type "int"
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to handle requests to delete one or more rows.
The implementation should apply the selection clause when performing
deletion, allowing the operation to affect multiple rows in a directory.
As a courtesy, call {@link ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver) notifyDelete()}
after deleting.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>The implementation is responsible for parsing out a row ID at the end
of the URI, if a specific row is being deleted. That is, the client would
pass in <code>content://contacts/people/22</code> and the implementation is
responsible for parsing the record number (22) when creating a SQL statement.

@param uri The full URI to query, including a row ID (if a specific record is requested).
@param selection An optional restriction to apply to rows when deleting.
@return The number of rows affected.
@throws SQLException"
      end

      operation 662530 "update"
	abstract public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to handle requests to update one or more rows.
The implementation should update all rows matching the selection
to set the columns according to the provided values map.
As a courtesy, call {@link ContentResolver#notifyChange(android.net.Uri ,android.database.ContentObserver) notifyChange()}
after updating.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

@param uri The URI to query. This can potentially have a record ID if this
is an update request for a specific record.
@param values A set of column_name/value pairs to update in the database.
    This must not be {@code null}.
@param selection An optional filter to match rows to update.
@return the number of rows affected."
      end

      operation 662658 "openFile"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override this to handle requests to open a file blob.
The default implementation always throws {@link FileNotFoundException}.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>This method returns a ParcelFileDescriptor, which is returned directly
to the caller.  This way large data (such as images and documents) can be
returned without copying the content.

<p>The returned ParcelFileDescriptor is owned by the caller, so it is
their responsibility to close it when done.  That is, the implementation
of this method should create a new ParcelFileDescriptor for each call.
<p>
If opened with the exclusive \"r\" or \"w\" modes, the returned
ParcelFileDescriptor can be a pipe or socket pair to enable streaming
of data. Opening with the \"rw\" or \"rwt\" modes implies a file on disk that
supports seeking.
<p>
If you need to detect when the returned ParcelFileDescriptor has been
closed, or if the remote process has crashed or encountered some other
error, you can use {@link ParcelFileDescriptor#open(File, int,
android.os.Handler, android.os.ParcelFileDescriptor.OnCloseListener)},
{@link ParcelFileDescriptor#createReliablePipe()}, or
{@link ParcelFileDescriptor#createReliableSocketPair()}.

<p class=\"note\">For use in Intents, you will want to implement {@link #getType}
to return the appropriate MIME type for the data returned here with
the same URI.  This will allow intent resolution to automatically determine the data MIME
type and select the appropriate matching targets as part of its operation.</p>

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.
You may also want to support other common columns if you have additional meta-data
to supply, such as {@link android.provider.MediaStore.MediaColumns#DATE_ADDED}
in {@link android.provider.MediaStore.MediaColumns}.</p>

@param uri The URI whose file is to be opened.
@param mode Access mode for the file.  May be \"r\" for read-only access,
\"rw\" for read and write access, or \"rwt\" for read and write access
that truncates any existing file.

@return Returns a new ParcelFileDescriptor which you can use to access
the file.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the file.

@see #openAssetFile(Uri, String)
@see #openFileHelper(Uri, String)
@see #getType(android.net.Uri)
@see ParcelFileDescriptor#parseMode(String)"
      end

      operation 662786 "openFile"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 174338 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override this to handle requests to open a file blob.
The default implementation always throws {@link FileNotFoundException}.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>This method returns a ParcelFileDescriptor, which is returned directly
to the caller.  This way large data (such as images and documents) can be
returned without copying the content.

<p>The returned ParcelFileDescriptor is owned by the caller, so it is
their responsibility to close it when done.  That is, the implementation
of this method should create a new ParcelFileDescriptor for each call.
<p>
If opened with the exclusive \"r\" or \"w\" modes, the returned
ParcelFileDescriptor can be a pipe or socket pair to enable streaming
of data. Opening with the \"rw\" or \"rwt\" modes implies a file on disk that
supports seeking.
<p>
If you need to detect when the returned ParcelFileDescriptor has been
closed, or if the remote process has crashed or encountered some other
error, you can use {@link ParcelFileDescriptor#open(File, int,
android.os.Handler, android.os.ParcelFileDescriptor.OnCloseListener)},
{@link ParcelFileDescriptor#createReliablePipe()}, or
{@link ParcelFileDescriptor#createReliableSocketPair()}.

<p class=\"note\">For use in Intents, you will want to implement {@link #getType}
to return the appropriate MIME type for the data returned here with
the same URI.  This will allow intent resolution to automatically determine the data MIME
type and select the appropriate matching targets as part of its operation.</p>

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.
You may also want to support other common columns if you have additional meta-data
to supply, such as {@link android.provider.MediaStore.MediaColumns#DATE_ADDED}
in {@link android.provider.MediaStore.MediaColumns}.</p>

@param uri The URI whose file is to be opened.
@param mode Access mode for the file. May be \"r\" for read-only access,
           \"w\" for write-only access, \"rw\" for read and write access, or
           \"rwt\" for read and write access that truncates any existing
           file.
@param signal A signal to cancel the operation in progress, or
           {@code null} if none. For example, if you are downloading a
           file from the network to service a \"rw\" mode request, you
           should periodically call
           {@link CancellationSignal#throwIfCanceled()} to check whether
           the client has canceled the request and abort the download.

@return Returns a new ParcelFileDescriptor which you can use to access
the file.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the file.

@see #openAssetFile(Uri, String)
@see #openFileHelper(Uri, String)
@see #getType(android.net.Uri)
@see ParcelFileDescriptor#parseMode(String)"
      end

      operation 662914 "openAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is like {@link #openFile}, but can be implemented by providers
that need to be able to return sub-sections of files, often assets
inside of their .apk.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>If you implement this, your clients must be able to deal with such
file slices, either directly with
{@link ContentResolver#openAssetFileDescriptor}, or by using the higher-level
{@link ContentResolver#openInputStream ContentResolver.openInputStream}
or {@link ContentResolver#openOutputStream ContentResolver.openOutputStream}
methods.
<p>
The returned AssetFileDescriptor can be a pipe or socket pair to enable
streaming of data.

<p class=\"note\">If you are implementing this to return a full file, you
should create the AssetFileDescriptor with
{@link AssetFileDescriptor#UNKNOWN_LENGTH} to be compatible with
applications that cannot handle sub-sections of files.</p>

<p class=\"note\">For use in Intents, you will want to implement {@link #getType}
to return the appropriate MIME type for the data returned here with
the same URI.  This will allow intent resolution to automatically determine the data MIME
type and select the appropriate matching targets as part of its operation.</p>

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.</p>

@param uri The URI whose file is to be opened.
@param mode Access mode for the file.  May be \"r\" for read-only access,
\"w\" for write-only access (erasing whatever data is currently in
the file), \"wa\" for write-only access to append to any existing data,
\"rw\" for read and write access on any existing data, and \"rwt\" for read
and write access that truncates any existing file.

@return Returns a new AssetFileDescriptor which you can use to access
the file.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the file.

@see #openFile(Uri, String)
@see #openFileHelper(Uri, String)
@see #getType(android.net.Uri)"
      end

      operation 663042 "openAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "signal" type class_ref 174338 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is like {@link #openFile}, but can be implemented by providers
that need to be able to return sub-sections of files, often assets
inside of their .apk.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

<p>If you implement this, your clients must be able to deal with such
file slices, either directly with
{@link ContentResolver#openAssetFileDescriptor}, or by using the higher-level
{@link ContentResolver#openInputStream ContentResolver.openInputStream}
or {@link ContentResolver#openOutputStream ContentResolver.openOutputStream}
methods.
<p>
The returned AssetFileDescriptor can be a pipe or socket pair to enable
streaming of data.

<p class=\"note\">If you are implementing this to return a full file, you
should create the AssetFileDescriptor with
{@link AssetFileDescriptor#UNKNOWN_LENGTH} to be compatible with
applications that cannot handle sub-sections of files.</p>

<p class=\"note\">For use in Intents, you will want to implement {@link #getType}
to return the appropriate MIME type for the data returned here with
the same URI.  This will allow intent resolution to automatically determine the data MIME
type and select the appropriate matching targets as part of its operation.</p>

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.</p>

@param uri The URI whose file is to be opened.
@param mode Access mode for the file.  May be \"r\" for read-only access,
\"w\" for write-only access (erasing whatever data is currently in
the file), \"wa\" for write-only access to append to any existing data,
\"rw\" for read and write access on any existing data, and \"rwt\" for read
and write access that truncates any existing file.
@param signal A signal to cancel the operation in progress, or
           {@code null} if none. For example, if you are downloading a
           file from the network to service a \"rw\" mode request, you
           should periodically call
           {@link CancellationSignal#throwIfCanceled()} to check whether
           the client has canceled the request and abort the download.

@return Returns a new AssetFileDescriptor which you can use to access
the file.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the file.

@see #openFile(Uri, String)
@see #openFileHelper(Uri, String)
@see #getType(android.net.Uri)"
      end

      operation 663170 "openFileHelper"
	protected return_type class_ref 176898 // ParcelFileDescriptor
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience for subclasses that wish to implement {@link #openFile}
by looking up a column named \"_data\" at the given URI.

@param uri The URI to be opened.
@param mode The file mode.  May be \"r\" for read-only access,
\"w\" for write-only access (erasing whatever data is currently in
the file), \"wa\" for write-only access to append to any existing data,
\"rw\" for read and write access on any existing data, and \"rwt\" for read
and write access that truncates any existing file.

@return Returns a new ParcelFileDescriptor that can be used by the
client to access the file."
      end

      operation 663298 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mimeTypeFilter" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by a client to determine the types of data streams that this
content provider supports for the given URI.  The default implementation
returns {@code null}, meaning no types.  If your content provider stores data
of a particular type, return that MIME type if it matches the given
mimeTypeFilter.  If it can perform type conversions, return an array
of all supported MIME types that match mimeTypeFilter.

@param uri The data in the content provider being queried.
@param mimeTypeFilter The type of data the client desires.  May be
a pattern, such as *\\/* to retrieve all possible data types.
@return Returns {@code null} if there are no possible data streams for the
given mimeTypeFilter.  Otherwise returns an array of all available
concrete MIME types.

@see #getType(Uri)
@see #openTypedAssetFile(Uri, String, Bundle)
@see ClipDescription#compareMimeTypes(String, String)"
      end

      operation 663426 "openTypedAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mimeTypeFilter" explicit_type "String"
	  param inout name "opts" type class_ref 174082 // Bundle
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by a client to open a read-only stream containing data of a
particular MIME type.  This is like {@link #openAssetFile(Uri, String)},
except the file can only be read-only and the content provider may
perform data conversions to generate data of the desired type.

<p>The default implementation compares the given mimeType against the
result of {@link #getType(Uri)} and, if they match, simply calls
{@link #openAssetFile(Uri, String)}.

<p>See {@link ClipData} for examples of the use and implementation
of this method.
<p>
The returned AssetFileDescriptor can be a pipe or socket pair to enable
streaming of data.

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.
You may also want to support other common columns if you have additional meta-data
to supply, such as {@link android.provider.MediaStore.MediaColumns#DATE_ADDED}
in {@link android.provider.MediaStore.MediaColumns}.</p>

@param uri The data in the content provider being queried.
@param mimeTypeFilter The type of data the client desires.  May be
a pattern, such as *\\/*, if the caller does not have specific type
requirements; in this case the content provider will pick its best
type matching the pattern.
@param opts Additional options from the client.  The definitions of
these are specific to the content provider being called.

@return Returns a new AssetFileDescriptor from which the client can
read data of the desired type.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the data.
@throws IllegalArgumentException Throws IllegalArgumentException if the
content provider does not support the requested MIME type.

@see #getStreamTypes(Uri, String)
@see #openAssetFile(Uri, String)
@see ClipDescription#compareMimeTypes(String, String)"
      end

      operation 663554 "openTypedAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "mimeTypeFilter" explicit_type "String"
	  param inout name "opts" type class_ref 174082 // Bundle
	  param inout name "signal" type class_ref 174338 // CancellationSignal
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called by a client to open a read-only stream containing data of a
particular MIME type.  This is like {@link #openAssetFile(Uri, String)},
except the file can only be read-only and the content provider may
perform data conversions to generate data of the desired type.

<p>The default implementation compares the given mimeType against the
result of {@link #getType(Uri)} and, if they match, simply calls
{@link #openAssetFile(Uri, String)}.

<p>See {@link ClipData} for examples of the use and implementation
of this method.
<p>
The returned AssetFileDescriptor can be a pipe or socket pair to enable
streaming of data.

<p class=\"note\">For better interoperability with other applications, it is recommended
that for any URIs that can be opened, you also support queries on them
containing at least the columns specified by {@link android.provider.OpenableColumns}.
You may also want to support other common columns if you have additional meta-data
to supply, such as {@link android.provider.MediaStore.MediaColumns#DATE_ADDED}
in {@link android.provider.MediaStore.MediaColumns}.</p>

@param uri The data in the content provider being queried.
@param mimeTypeFilter The type of data the client desires.  May be
a pattern, such as *\\/*, if the caller does not have specific type
requirements; in this case the content provider will pick its best
type matching the pattern.
@param opts Additional options from the client.  The definitions of
these are specific to the content provider being called.
@param signal A signal to cancel the operation in progress, or
           {@code null} if none. For example, if you are downloading a
           file from the network to service a \"rw\" mode request, you
           should periodically call
           {@link CancellationSignal#throwIfCanceled()} to check whether
           the client has canceled the request and abort the download.

@return Returns a new AssetFileDescriptor from which the client can
read data of the desired type.

@throws FileNotFoundException Throws FileNotFoundException if there is
no file associated with the given URI or the mode is invalid.
@throws SecurityException Throws SecurityException if the caller does
not have permission to access the data.
@throws IllegalArgumentException Throws IllegalArgumentException if the
content provider does not support the requested MIME type.

@see #getStreamTypes(Uri, String)
@see #openAssetFile(Uri, String)
@see ClipDescription#compareMimeTypes(String, String)"
      end

      class 198274 "PipeDataWriter"
	visibility public stereotype "interface"
	nformals 1
	formal name "T" type "" explicit_default_value ""
	  explicit_extends ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 663682 "writeDataToPipe"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "output" type class_ref 176898 // ParcelFileDescriptor
	    param inout name "uri" type class_ref 145410 // Uri
	    param in name "mimeType" explicit_type "String"
	    param inout name "opts" type class_ref 174082 // Bundle
	    param inout name "args" explicit_type "T"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called from a background thread to stream data out to a pipe.
Note that the pipe is blocking, so this thread can block on
writes for an arbitrary amount of time if the client is slow
at reading.

@param output The pipe where data should be written.  This will be
closed for you upon returning from this function.
@param uri The URI whose data is to be written.
@param mimeType The desired type of data to be written.
@param opts Options supplied by caller.
@param args Your own custom arguments."
	end
      end

      operation 663810 "openPipeHelper"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 5
	  param in name "uri" type class_ref 145410 // Uri
	  param in name "mimeType" explicit_type "String"
	  param in name "opts" type class_ref 174082 // Bundle
	  param in name "args" explicit_type "T"
	  param in name "func" type class_ref 198274 // PipeDataWriter
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T> ${type} ${name}${(}final ${t0} ${p0}, final ${t1} ${p1}, final ${t2} ${p2}, final ${t3} ${p3}, final ${t4}<T> ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "A helper function for implementing {@link #openTypedAssetFile}, for
creating a data pipe and background thread allowing you to stream
generated data back to the client.  This function returns a new
ParcelFileDescriptor that should be returned to the caller (the caller
is responsible for closing it).

@param uri The URI whose data is to be written.
@param mimeType The desired type of data to be written.
@param opts Options supplied by caller.
@param args Your own custom arguments.
@param func Interface implementing the function that will actually
stream the data.
@return Returns a new ParcelFileDescriptor holding the read side of
the pipe.  This should be returned to the caller for reading; the caller
is responsible for closing it when done."
      end

      operation 663938 "isTemporary"
	protected explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if this instance is a temporary content provider.
@return true if this instance is a temporary content provider"
      end

      operation 664066 "getIContentProvider"
	public return_type class_ref 197506 // IContentProvider
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the Binder object for this provider.

@return the Binder object for this provider
@hide"
      end

      operation 664194 "attachInfoForTesting"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "info" type class_ref 198402 // ProviderInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Like {@link #attachInfo(Context, android.content.pm.ProviderInfo)}, but for use
when directly instantiating the provider for testing.
@hide"
      end

      operation 664322 "attachInfo"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "info" type class_ref 198402 // ProviderInfo
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "After being instantiated, this is called to tell the content provider
about itself.

@param context The context this provider is running in
@param info Registered information about this content provider"
      end

      operation 664450 "attachInfo"
	private explicit_return_type "void"
	nparams 3
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "info" type class_ref 198402 // ProviderInfo
	  param inout name "testing" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 664578 "applyBatch"
	public return_type class_ref 197890 // ContentProviderResult
	nparams 1
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 1
	  exception class_ref 198018 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Override this to handle requests to perform a batch of operations, or the
default implementation will iterate over the operations and call
{@link ContentProviderOperation#apply} on each of them.
If all calls to {@link ContentProviderOperation#apply} succeed
then a {@link ContentProviderResult} array with as many
elements as there were operations will be returned.  If any of the calls
fail, it is up to the implementation how many of the others take effect.
This method can be called from multiple threads, as described in
<a href=\"{@docRoot}guide/topics/fundamentals/processes-and-threads.html#Threads\">Processes
and Threads</a>.

@param operations the operations to apply
@return the results of the applications
@throws OperationApplicationException thrown if any operation fails.
@see ContentProviderOperation#apply"
      end

      operation 664706 "call"
	public return_type class_ref 174082 // Bundle
	nparams 3
	  param in name "method" explicit_type "String"
	  param in name "arg" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Call a provider-defined method.  This can be used to implement
interfaces that are cheaper and/or unnatural for a table-like
model.

<p class=\"note\"><strong>WARNING:</strong> The framework does no permission checking
on this entry into the content provider besides the basic ability for the application
to get access to the provider at all.  For example, it has no idea whether the call
being executed may read or write data in the provider, so can't enforce those
individual permissions.  Any implementation of this method <strong>must</strong>
do its own permission checks on incoming calls to make sure they are allowed.</p>

@param method method name to call.  Opaque to framework, but should not be {@code null}.
@param arg provider-defined String argument.  May be {@code null}.
@param extras provider-defined Bundle argument.  May be {@code null}.
@return provider-defined return value.  May be {@code null}, which is also
  the default for providers which don't implement any call methods."
      end

      operation 664834 "shutdown"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Implement this to shut down the ContentProvider instance. You can then
invoke this method in unit tests.

<p>
Android normally handles ContentProvider startup and shutdown
automatically. You do not need to start up or shut down a
ContentProvider. When you invoke a test method on a ContentProvider,
however, a ContentProvider instance is started and keeps running after
the test finishes, even if a succeeding test instantiates another
ContentProvider. A conflict develops because the two instances are
usually running against the same underlying data source (for example, an
sqlite database).
</p>
<p>
Implementing shutDown() avoids this conflict by providing a way to
terminate the ContentProvider. This method can also prevent memory leaks
from multiple instantiations of the ContentProvider, and it can ensure
unit test isolation by allowing you to completely clean up the test
fixture before moving on to the next test.
</p>"
      end

      operation 664962 "dump"
	public explicit_return_type "void"
	nparams 3
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Print the Provider's state into the given stream.  This gets invoked if
you run \"adb shell dumpsys activity provider &lt;provider_component_name&gt;\".

@param fd The raw file descriptor that the dump is being sent to.
@param writer The PrintWriter to which you should dump your state.  This will be
closed for you after you return.
@param args additional arguments to the dump request."
      end
    end

    class 197506 "IContentProvider"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "The ipc interface to talk to a content provider.
@hide"
      classrelation 206978 // <generalisation>
	relation 206978 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206978 // <generalisation>
	  b parent class_ref 172930 // IInterface
      end

      operation 651650 "query"
	public explicit_return_type "Cursor"
	nparams 7
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" explicit_type "ICancellationSignal"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 651778 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 651906 "insert"
	public return_type class_ref 145410 // Uri
	nparams 3
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "initialValues" type class_ref 194178 // ContentValues
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 652034 "bulkInsert"
	public explicit_return_type "int"
	nparams 3
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "initialValues" type class_ref 194178 // ContentValues
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 652162 "delete"
	public explicit_return_type "int"
	nparams 4
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 652290 "update"
	public explicit_return_type "int"
	nparams 5
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 652418 "openFile"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 4
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "signal" explicit_type "ICancellationSignal"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 652546 "openAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 4
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "signal" explicit_type "ICancellationSignal"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 652674 "applyBatch"
	public return_type class_ref 197890 // ContentProviderResult
	nparams 2
	  param in name "callingPkg" explicit_type "String"
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  exception class_ref 198018 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 652802 "call"
	public return_type class_ref 174082 // Bundle
	nparams 4
	  param in name "callingPkg" explicit_type "String"
	  param in name "method" explicit_type "String"
	  param in name "arg" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 652930 "createCancellationSignal"
	public explicit_return_type "ICancellationSignal"
	nparams 0
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 653058 "canonicalize"
	public return_type class_ref 145410 // Uri
	nparams 2
	  param in name "callingPkg" explicit_type "String"
	  param inout name "uri" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 653186 "uncanonicalize"
	public return_type class_ref 145410 // Uri
	nparams 2
	  param in name "callingPkg" explicit_type "String"
	  param inout name "uri" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 653314 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mimeTypeFilter" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Data interchange."
      end

      operation 653442 "openTypedAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 5
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 174082 // Bundle
	  param inout name "signal" explicit_type "ICancellationSignal"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      attribute 425986 "descriptor"
	class_attribute const_attribute public explicit_type "String"
	init_value " \"android.content.IContentProvider\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " IPC constants "
      end

      attribute 426114 "QUERY_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 426242 "GET_TYPE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 426370 "INSERT_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 426498 "DELETE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 426626 "UPDATE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 9"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 426754 "BULK_INSERT_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 12"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 426882 "OPEN_FILE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 13"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 427010 "OPEN_ASSET_FILE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 14"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 427138 "APPLY_BATCH_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 19"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 427266 "CALL_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 427394 "GET_STREAM_TYPES_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 21"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 427522 "OPEN_TYPED_ASSET_FILE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 22"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 427650 "CREATE_CANCELATION_SIGNAL_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 23"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 427778 "CANONICALIZE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 24"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 427906 "UNCANONICALIZE_TRANSACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " IBinder.FIRST_CALL_TRANSACTION + 25"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 197634 "ContentProviderNative"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "{@hide}"
      classrelation 206850 // <generalisation>
	relation 206850 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 206850 // <generalisation>
	  b parent class_ref 172546 // Binder
      end

      classrelation 207106 // <realization>
	relation 207106 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 207106 // <realization>
	  b parent class_ref 197506 // IContentProvider
      end

      operation 653570 "ContentProviderNative"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 653698 "asInterface"
	class_operation public return_type class_ref 197506 // IContentProvider
	nparams 1
	  param inout name "obj" type class_ref 172674 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Cast a Binder object into a content resolver interface, generating
a proxy if needed."
      end

      operation 653826 "getProviderName"
	abstract public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Gets the name of the content provider.
Should probably be part of the {@link IContentProvider} interface.
@return The content provider name."
      end

      operation 653954 "onTransact"
	public explicit_return_type "boolean"
	nparams 4
	  param in name "code" explicit_type "int"
	  param inout name "data" type class_ref 170242 // Parcel
	  param inout name "reply" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 654082 "asBinder"
	public return_type class_ref 172674 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 197890 "ContentProviderResult"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Contains the result of the application of a {@link ContentProviderOperation}. It is guaranteed
to have exactly one of {@link #uri} or {@link #count} set."
      classrelation 209282 // <realization>
	relation 209282 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 209282 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      classrelation 209410 // uri (<unidirectional association>)
	relation 209410 --->
	  a role_name "uri" const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209410 // uri (<unidirectional association>)
	  b parent class_ref 145410 // Uri
      end

      attribute 431362 "count"
	const_attribute public explicit_type "Integer"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 672258 "ContentProviderResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 672386 "ContentProviderResult"
	public explicit_return_type ""
	nparams 1
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 672514 "ContentProviderResult"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 672642 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 672770 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 209538 // CREATOR (<unidirectional association>)
	relation 209538 --->
	  a role_name "CREATOR" init_value "
            new Creator<ContentProviderResult>() {
        public ContentProviderResult createFromParcel(Parcel source) {
            return new ContentProviderResult(source);
        }

        public ContentProviderResult[] newArray(int size) {
            return new ContentProviderResult[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ContentProviderResult> ${name}${value};
"
	    classrelation_ref 209538 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 672898 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 198018 "OperationApplicationException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Thrown when an application of a {@link ContentProviderOperation} fails due the specified
constraints."
      classrelation 216834 // <generalisation>
	relation 216834 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 216834 // <generalisation>
	  b parent class_ref 181762 // Exception
      end

      attribute 492290 "mNumSuccessfulYieldPoints"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 757378 "OperationApplicationException"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 757506 "OperationApplicationException"
	public explicit_return_type ""
	nparams 1
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 757634 "OperationApplicationException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 757762 "OperationApplicationException"
	public explicit_return_type ""
	nparams 1
	  param inout name "cause" explicit_type "Throwable"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 757890 "OperationApplicationException"
	public explicit_return_type ""
	nparams 1
	  param in name "numSuccessfulYieldPoints" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 758018 "OperationApplicationException"
	public explicit_return_type ""
	nparams 2
	  param in name "message" explicit_type "String"
	  param in name "numSuccessfulYieldPoints" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 758146 "getNumSuccessfulYieldPoints"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 198146 "ContentProviderProxy"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 207234 // <realization>
	relation 207234 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 207234 // <realization>
	  b parent class_ref 197506 // IContentProvider
      end

      operation 654210 "ContentProviderProxy"
	public explicit_return_type ""
	nparams 1
	  param inout name "remote" type class_ref 172674 // IBinder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 654338 "asBinder"
	public return_type class_ref 172674 // IBinder
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 654466 "query"
	public explicit_return_type "Cursor"
	nparams 7
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	  param inout name "cancellationSignal" explicit_type "ICancellationSignal"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 654594 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "url" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 654722 "insert"
	public return_type class_ref 145410 // Uri
	nparams 3
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 654850 "bulkInsert"
	public explicit_return_type "int"
	nparams 3
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 654978 "applyBatch"
	public return_type class_ref 197890 // ContentProviderResult
	nparams 2
	  param in name "callingPkg" explicit_type "String"
	  param inout name "operations" explicit_type "ArrayList<ContentProviderOperation>"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  exception class_ref 198018 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 655106 "delete"
	public explicit_return_type "int"
	nparams 4
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 655234 "update"
	public explicit_return_type "int"
	nparams 5
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4}[] ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 655362 "openFile"
	public return_type class_ref 176898 // ParcelFileDescriptor
	nparams 4
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "signal" explicit_type "ICancellationSignal"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 655490 "openAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 4
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mode" explicit_type "String"
	  param inout name "signal" explicit_type "ICancellationSignal"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 655618 "call"
	public return_type class_ref 174082 // Bundle
	nparams 4
	  param in name "callingPkg" explicit_type "String"
	  param in name "method" explicit_type "String"
	  param in name "request" explicit_type "String"
	  param inout name "args" type class_ref 174082 // Bundle
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 655746 "getStreamTypes"
	public explicit_return_type "String"
	nparams 2
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mimeTypeFilter" explicit_type "String"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 655874 "openTypedAssetFile"
	public return_type class_ref 197762 // AssetFileDescriptor
	nparams 5
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	  param in name "mimeType" explicit_type "String"
	  param inout name "opts" type class_ref 174082 // Bundle
	  param inout name "signal" explicit_type "ICancellationSignal"
	nexceptions 2
	  exception class_ref 172802 // RemoteException
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 656002 "createCancellationSignal"
	public explicit_return_type "ICancellationSignal"
	nparams 0
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 656130 "canonicalize"
	public return_type class_ref 145410 // Uri
	nparams 2
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 656258 "uncanonicalize"
	public return_type class_ref 145410 // Uri
	nparams 2
	  param in name "callingPkg" explicit_type "String"
	  param inout name "url" type class_ref 145410 // Uri
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 207362 // mRemote (<unidirectional association>)
	relation 207362 --->
	  a role_name "mRemote" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 207362 // mRemote (<unidirectional association>)
	  b parent class_ref 172674 // IBinder
      end
    end

    class 198658 "ContentProviderOperation"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 208258 // <realization>
	relation 208258 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 208258 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 429186 "TYPE_INSERT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide exposed for unit tests "
      end

      attribute 429314 "TYPE_UPDATE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide exposed for unit tests "
      end

      attribute 429442 "TYPE_DELETE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide exposed for unit tests "
      end

      attribute 429570 "TYPE_ASSERT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide exposed for unit tests "
      end

      attribute 429698 "mType"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 208386 // mUri (<unidirectional association>)
	relation 208386 --->
	  a role_name "mUri" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 208386 // mUri (<unidirectional association>)
	  b parent class_ref 145410 // Uri
      end

      attribute 429826 "mSelection"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 429954 "mSelectionArgs"
	const_attribute private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 208514 // mValues (<unidirectional association>)
	relation 208514 --->
	  a role_name "mValues" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 208514 // mValues (<unidirectional association>)
	  b parent class_ref 194178 // ContentValues
      end

      attribute 430082 "mExpectedCount"
	const_attribute private explicit_type "Integer"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 208642 // mValuesBackReferences (<unidirectional association>)
	relation 208642 --->
	  a role_name "mValuesBackReferences" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 208642 // mValuesBackReferences (<unidirectional association>)
	  b parent class_ref 194178 // ContentValues
      end

      attribute 430210 "mSelectionArgsBackReferences"
	const_attribute private explicit_type "Integer, Integer"
	stereotype "Map"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 430338 "mYieldAllowed"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 430466 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ContentProviderOperation\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 668546 "ContentProviderOperation"
	private explicit_return_type ""
	nparams 1
	  param inout name "builder" type class_ref 198786 // Builder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a {@link ContentProviderOperation} by copying the contents of a
{@link Builder}."
      end

      class 198786 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 430594 "mType"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 208898 // mUri (<unidirectional association>)
	  relation 208898 --->
	    a role_name "mUri" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 208898 // mUri (<unidirectional association>)
	    b parent class_ref 145410 // Uri
	end

	attribute 430722 "mSelection"
	  private explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 430850 "mSelectionArgs"
	  private explicit_type "String"
	  multiplicity "[]"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 209026 // mValues (<unidirectional association>)
	  relation 209026 --->
	    a role_name "mValues" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 209026 // mValues (<unidirectional association>)
	    b parent class_ref 194178 // ContentValues
	end

	attribute 430978 "mExpectedCount"
	  private explicit_type "Integer"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 209154 // mValuesBackReferences (<unidirectional association>)
	  relation 209154 --->
	    a role_name "mValuesBackReferences" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 209154 // mValuesBackReferences (<unidirectional association>)
	    b parent class_ref 194178 // ContentValues
	end

	attribute 431106 "mSelectionArgsBackReferences"
	  private explicit_type "Integer, Integer"
	  stereotype "Map"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 431234 "mYieldAllowed"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 670978 "Builder"
	  private explicit_return_type ""
	  nparams 2
	    param in name "type" explicit_type "int"
	    param inout name "uri" type class_ref 145410 // Uri
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create a {@link Builder} of a given type. The uri must not be null. "
	end

	operation 671106 "build"
	  public return_type class_ref 198658 // ContentProviderOperation
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " Create a ContentProviderOperation from this {@link Builder}. "
	end

	operation 671234 "withValueBackReferences"
	  public return_type class_ref 198786 // Builder
	  nparams 1
	    param inout name "backReferences" type class_ref 194178 // ContentValues
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a {@link ContentValues} of back references. The key is the name of the column
and the value is an integer that is the index of the previous result whose
value should be used for the column. The value is added as a {@link String}.
A column value from the back references takes precedence over a value specified in
{@link #withValues}.
This can only be used with builders of type insert, update, or assert.
@return this builder, to allow for chaining."
	end

	operation 671362 "withValueBackReference"
	  public return_type class_ref 198786 // Builder
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "previousResult" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a ContentValues back reference.
A column value from the back references takes precedence over a value specified in
{@link #withValues}.
This can only be used with builders of type insert, update, or assert.
@return this builder, to allow for chaining."
	end

	operation 671490 "withSelectionBackReference"
	  public return_type class_ref 198786 // Builder
	  nparams 2
	    param in name "selectionArgIndex" explicit_type "int"
	    param in name "previousResult" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Add a back references as a selection arg. Any value at that index of the selection arg
that was specified by {@link #withSelection} will be overwritten.
This can only be used with builders of type update, delete, or assert.
@return this builder, to allow for chaining."
	end

	operation 671618 "withValues"
	  public return_type class_ref 198786 // Builder
	  nparams 1
	    param inout name "values" type class_ref 194178 // ContentValues
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The ContentValues to use. This may be null. These values may be overwritten by
the corresponding value specified by {@link #withValueBackReference} or by
future calls to {@link #withValues} or {@link #withValue}.
This can only be used with builders of type insert, update, or assert.
@return this builder, to allow for chaining."
	end

	operation 671746 "withValue"
	  public return_type class_ref 198786 // Builder
	  nparams 2
	    param in name "key" explicit_type "String"
	    param inout name "value" explicit_type "Object"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "A value to insert or update. This value may be overwritten by
the corresponding value specified by {@link #withValueBackReference}.
This can only be used with builders of type insert, update, or assert.
@param key the name of this value
@param value the value itself. the type must be acceptable for insertion by
{@link ContentValues#put}
@return this builder, to allow for chaining."
	end

	operation 671874 "withSelection"
	  public return_type class_ref 198786 // Builder
	  nparams 2
	    param in name "selection" explicit_type "String"
	    param inout name "selectionArgs" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "The selection and arguments to use. An occurrence of '?' in the selection will be
replaced with the corresponding occurence of the selection argument. Any of the
selection arguments may be overwritten by a selection argument back reference as
specified by {@link #withSelectionBackReference}.
This can only be used with builders of type update, delete, or assert.
@return this builder, to allow for chaining."
	end

	operation 672002 "withExpectedCount"
	  public return_type class_ref 198786 // Builder
	  nparams 1
	    param in name "count" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "If set then if the number of rows affected by this operation do not match
this count {@link OperationApplicationException} will be throw.
This can only be used with builders of type update, delete, or assert.
@return this builder, to allow for chaining."
	end

	operation 672130 "withYieldAllowed"
	  public return_type class_ref 198786 // Builder
	  nparams 1
	    param inout name "yieldAllowed" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 668674 "ContentProviderOperation"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 668802 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 668930 "newInsert"
	class_operation public return_type class_ref 198786 // Builder
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a {@link Builder} suitable for building an insert {@link ContentProviderOperation}.
@param uri The {@link Uri} that is the target of the insert.
@return a {@link Builder}"
      end

      operation 669058 "newUpdate"
	class_operation public return_type class_ref 198786 // Builder
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a {@link Builder} suitable for building an update {@link ContentProviderOperation}.
@param uri The {@link Uri} that is the target of the update.
@return a {@link Builder}"
      end

      operation 669186 "newDelete"
	class_operation public return_type class_ref 198786 // Builder
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a {@link Builder} suitable for building a delete {@link ContentProviderOperation}.
@param uri The {@link Uri} that is the target of the delete.
@return a {@link Builder}"
      end

      operation 669314 "newAssertQuery"
	class_operation public return_type class_ref 198786 // Builder
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a {@link Builder} suitable for building a
{@link ContentProviderOperation} to assert a set of values as provided
through {@link Builder#withValues(ContentValues)}."
      end

      operation 669442 "getUri"
	public return_type class_ref 145410 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 669570 "isYieldAllowed"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 669698 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide exposed for unit tests "
      end

      operation 669826 "isDeleteOperation"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 669954 "isWriteOperation"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 670082 "isReadOperation"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 670210 "apply"
	public return_type class_ref 197890 // ContentProviderResult
	nparams 3
	  param inout name "provider" type class_ref 197122 // ContentProvider
	  param inout name "backRefs" type class_ref 197890 // ContentProviderResult
	  param in name "numBackRefs" explicit_type "int"
	nexceptions 1
	  exception class_ref 198018 // OperationApplicationException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Applies this operation using the given provider. The backRefs array is used to resolve any
back references that were requested using
{@link Builder#withValueBackReferences(ContentValues)} and
{@link Builder#withSelectionBackReference}.
@param provider the {@link ContentProvider} on which this batch is applied
@param backRefs a {@link ContentProviderResult} array that will be consulted
to resolve any requested back references.
@param numBackRefs the number of valid results on the backRefs array.
@return a {@link ContentProviderResult} that contains either the {@link Uri} of the inserted
row if this was an insert otherwise the number of rows affected.
@throws OperationApplicationException thrown if either the insert fails or
if the number of rows affected didn't match the expected count"
      end

      operation 670338 "resolveValueBackReferences"
	public return_type class_ref 194178 // ContentValues
	nparams 2
	  param inout name "backRefs" type class_ref 197890 // ContentProviderResult
	  param in name "numBackRefs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The ContentValues back references are represented as a ContentValues object where the
key refers to a column and the value is an index of the back reference whose
valued should be associated with the column.
<p>
This is intended to be a private method but it is exposed for
unit testing purposes
@param backRefs an array of previous results
@param numBackRefs the number of valid previous results in backRefs
@return the ContentValues that should be used in this operation application after
expansion of back references. This can be called if either mValues or mValuesBackReferences
is null"
      end

      operation 670466 "resolveSelectionArgsBackReferences"
	public explicit_return_type "String"
	nparams 2
	  param inout name "backRefs" type class_ref 197890 // ContentProviderResult
	  param in name "numBackRefs" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "The Selection Arguments back references are represented as a Map of Integer->Integer where
the key is an index into the selection argument array (see {@link Builder#withSelection})
and the value is the index of the previous result that should be used for that selection
argument array slot.
<p>
This is intended to be a private method but it is exposed for
unit testing purposes
@param backRefs an array of previous results
@param numBackRefs the number of valid previous results in backRefs
@return the ContentValues that should be used in this operation application after
expansion of back references. This can be called if either mValues or mValuesBackReferences
is null"
      end

      operation 670594 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 670722 "backRefToValue"
	private explicit_return_type "long"
	nparams 3
	  param inout name "backRefs" type class_ref 197890 // ContentProviderResult
	  param in name "numBackRefs" explicit_type "int"
	  param inout name "backRefIndex" explicit_type "Integer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the string representation of the requested back reference.
@param backRefs an array of results
@param numBackRefs the number of items in the backRefs array that are valid
@param backRefIndex which backRef to be used
@throws ArrayIndexOutOfBoundsException thrown if the backRefIndex is larger than
the numBackRefs
@return the string representation of the requested back reference."
      end

      operation 670850 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 208770 // CREATOR (<unidirectional association>)
	relation 208770 --->
	  a role_name "CREATOR" init_value "
            new Creator<ContentProviderOperation>() {
        public ContentProviderOperation createFromParcel(Parcel source) {
            return new ContentProviderOperation(source);
        }

        public ContentProviderOperation[] newArray(int size) {
            return new ContentProviderOperation[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<ContentProviderOperation> ${name}${value};
"
	    classrelation_ref 208770 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end
    end

    class 198914 "ContentQueryMap"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Caches the contents of a cursor into a Map of String->ContentValues and optionally
keeps the cache fresh by registering for updates on the content backing the cursor. The column of
the database that is to be used as the key of the map is user-configurable, and the
ContentValues contains all columns other than the one that is designated the key.
<p>
The cursor data is accessed by row key and column name via getValue()."
      classrelation 209666 // <generalisation>
	relation 209666 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 209666 // <generalisation>
	  b parent class_ref 199042 // Observable
      end

      attribute 431490 "mCursor"
	volatile private explicit_type "Cursor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 431618 "mColumnNames"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 431746 "mKeyColumn"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 209794 // mHandlerForUpdateNotifications (<unidirectional association>)
	relation 209794 --->
	  a role_name "mHandlerForUpdateNotifications" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 209794 // mHandlerForUpdateNotifications (<unidirectional association>)
	  b parent class_ref 168578 // Handler
      end

      attribute 431874 "mKeepUpdated"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 209922 // mValues (<unidirectional association>)
	relation 209922 --->
	  stereotype "Map"
	  a role_name "mValues" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<String, ${type}> ${name}${value};
"
	    classrelation_ref 209922 // mValues (<unidirectional association>)
	  b parent class_ref 194178 // ContentValues
      end

      attribute 432002 "mContentObserver"
	private explicit_type "ContentObserver"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 432130 "mDirty"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Set when a cursor change notification is received and is cleared on a call to requery(). "
      end

      operation 673026 "ContentQueryMap"
	public explicit_return_type ""
	nparams 4
	  param inout name "cursor" explicit_type "Cursor"
	  param in name "columnNameOfKey" explicit_type "String"
	  param inout name "keepUpdated" explicit_type "boolean"
	  param inout name "handlerForUpdateNotifications" type class_ref 168578 // Handler
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a ContentQueryMap that caches the content backing the cursor

@param cursor the cursor whose contents should be cached
@param columnNameOfKey the column that is to be used as the key of the values map
@param keepUpdated true if the cursor's ContentProvider should be monitored for changes and 
the map updated when changes do occur
@param handlerForUpdateNotifications the Handler that should be used to receive
 notifications of changes (if requested). Normally you pass null here, but if
 you know that the thread that is creating this isn't a thread that can receive
 messages then you can create your own handler and use that here."
      end

      operation 673154 "setKeepUpdated"
	public explicit_return_type "void"
	nparams 1
	  param inout name "keepUpdated" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change whether or not the ContentQueryMap will register with the cursor's ContentProvider 
for change notifications. If you use a ContentQueryMap in an activity you should call this
with false in onPause(), which means you need to call it with true in onResume()
if want it to be kept updated.
@param keepUpdated if true the ContentQueryMap should be registered with the cursor's
ContentProvider, false otherwise"
      end

      operation 673282 "getValues"
	public return_type class_ref 194178 // ContentValues
	nparams 1
	  param in name "rowName" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Access the ContentValues for the row specified by rowName
@param rowName which row to read
@return the ContentValues for the row, or null if the row wasn't present in the cursor"
      end

      operation 673410 "requery"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Requeries the cursor and reads the contents into the cache "
      end

      operation 673538 "readCursorIntoCache"
	private explicit_return_type "void"
	nparams 1
	  param inout name "cursor" explicit_type "Cursor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 673666 "getRows"
	public return_type class_ref 194178 // ContentValues
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Map<String, ${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 673794 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent synchronized java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 673922 "finalize"
	protected explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "Throwable"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 199426 "UriPermission"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Description of a single Uri permission grant. This grants may have been
created via {@link Intent#FLAG_GRANT_READ_URI_PERMISSION}, etc when sending
an {@link Intent}, or explicitly through
{@link Context#grantUriPermission(String, android.net.Uri, int)}.

@see ContentResolver#getPersistedUriPermissions()"
      classrelation 224002 // <realization>
	relation 224002 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 224002 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      classrelation 224130 // mUri (<unidirectional association>)
	relation 224130 --->
	  a role_name "mUri" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 224130 // mUri (<unidirectional association>)
	  b parent class_ref 145410 // Uri
      end

      attribute 513154 "mModeFlags"
	const_attribute private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 513282 "mPersistedTime"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 513410 "INVALID_TIME"
	class_attribute const_attribute public explicit_type "long"
	init_value " Long.MIN_VALUE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Value returned when a permission has not been persisted.
"
      end

      operation 791810 "UriPermission"
	public explicit_return_type ""
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "persistedTime" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 791938 "UriPermission"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} "
      end

      operation 792066 "getUri"
	public return_type class_ref 145410 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the Uri this permission pertains to."
      end

      operation 792194 "isReadPermission"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this permission offers read access."
      end

      operation 792322 "isWritePermission"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns if this permission offers write access."
      end

      operation 792450 "getPersistedTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the time when this permission was first persisted, in milliseconds
since January 1, 1970 00:00:00.0 UTC. Returns {@link #INVALID_TIME} if
not persisted.

@see ContentResolver#takePersistableUriPermission(Uri, int)
@see System#currentTimeMillis()"
      end

      operation 792578 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 792706 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 792834 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 224258 // CREATOR (<unidirectional association>)
	relation 224258 --->
	  a role_name "CREATOR" init_value " new Creator<UriPermission>() {
        @Override
        public UriPermission createFromParcel(Parcel source) {
            return new UriPermission(source);
        }

        @Override
        public UriPermission[] newArray(int size) {
            return new UriPermission[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<UriPermission> ${name}${value};
"
	    classrelation_ref 224258 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end
    end

    class 199554 "SyncRequest"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 220546 // <realization>
	relation 220546 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 220546 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 500994 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SyncRequest\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 501122 "mAccountToSync"
	const_attribute private explicit_type "Account"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Account to pass to the sync adapter. May be null. "
      end

      attribute 501250 "mAuthority"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Authority string that corresponds to a ContentProvider. "
      end

      classrelation 220674 // mComponentInfo (<unidirectional association>)
	relation 220674 --->
	  a role_name "mComponentInfo" const_relation private
	    comment " Sync service identifier. May be null.
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 220674 // mComponentInfo (<unidirectional association>)
	  b parent class_ref 196738 // ComponentName
      end

      classrelation 220802 // mExtras (<unidirectional association>)
	relation 220802 --->
	  a role_name "mExtras" const_relation private
	    comment " Bundle containing user info as well as sync settings. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 220802 // mExtras (<unidirectional association>)
	  b parent class_ref 174082 // Bundle
      end

      attribute 501378 "mDisallowMetered"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Disallow this sync request on metered networks. "
      end

      attribute 501506 "mTxBytes"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Anticipated upload size in bytes.
TODO: Not yet used - we put this information into the bundle for simplicity.
"
      end

      attribute 501634 "mRxBytes"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Anticipated download size in bytes.
TODO: Not yet used - we put this information into the bundle.
"
      end

      attribute 501762 "mSyncFlexTimeSecs"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Amount of time before {@link #mSyncRunTimeSecs} from which the sync may optionally be
started.
"
      end

      attribute 501890 "mSyncRunTimeSecs"
	const_attribute private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Specifies a point in the future at which the sync must have been scheduled to run.
"
      end

      attribute 502018 "mIsPeriodic"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Periodic versus one-off. "
      end

      attribute 502146 "mIsAuthority"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Service versus provider. "
      end

      attribute 502274 "mIsExpedited"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Sync should be run in lieu of other syncs. "
      end

      operation 774786 "isPeriodic"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return whether this sync is periodic or one-time. A Sync Request must be
        either one of these or an InvalidStateException will be thrown in
        Builder.build()."
      end

      operation 774914 "isExpedited"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return whether this is an expedited sync."
      end

      operation 775042 "hasAuthority"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return true if this sync uses an account/authority pair, or false if this sync is bound to
a Sync Service."
      end

      operation 775170 "getAccount"
	public explicit_return_type "Account"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return account object for this sync.
@throws IllegalArgumentException if this function is called for a request that does not
specify an account/provider authority."
      end

      operation 775298 "getProvider"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return provider for this sync.
@throws IllegalArgumentException if this function is called for a request that does not
specify an account/provider authority."
      end

      operation 775426 "getBundle"
	public return_type class_ref 174082 // Bundle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
Retrieve bundle for this SyncRequest. Will not be null."
      end

      operation 775554 "getSyncFlexTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return the earliest point in time that this sync can be scheduled."
      end

      operation 775682 "getSyncRunTime"
	public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
@return the last point in time at which this sync must scheduled."
      end

      classrelation 220930 // CREATOR (<unidirectional association>)
	relation 220930 --->
	  a role_name "CREATOR" init_value " new Creator<SyncRequest>() {

        @Override
        public SyncRequest createFromParcel(Parcel in) {
            return new SyncRequest(in);
        }

        @Override
        public SyncRequest[] newArray(int size) {
            return new SyncRequest[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncRequest> ${name}${value};
"
	    classrelation_ref 220930 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 775810 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 775938 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 776066 "SyncRequest"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 776194 "SyncRequest"
	protected explicit_return_type ""
	nparams 1
	  param inout name "b" type class_ref 207874 // Builder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " {@hide} Protected ctor to instantiate anonymous SyncRequest. "
      end

      class 207874 "Builder"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 502402 "SYNC_TYPE_UNKNOWN"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Unknown sync type. "
	end

	attribute 502530 "SYNC_TYPE_PERIODIC"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Specify that this is a periodic sync. "
	end

	attribute 502658 "SYNC_TYPE_ONCE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Specify that this is a one-time sync. "
	end

	attribute 502786 "SYNC_TARGET_UNKNOWN"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Unknown sync target. "
	end

	attribute 502914 "SYNC_TARGET_SERVICE"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 1"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Specify that this is an anonymous sync. "
	end

	attribute 503042 "SYNC_TARGET_ADAPTER"
	  class_attribute const_attribute private explicit_type "int"
	  init_value " 2"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Specify that this is a sync with a provider. "
	end

	attribute 503170 "mSyncFlexTimeSecs"
	  private explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Earliest point of displacement into the future at which this sync can occur. "
	end

	attribute 503298 "mSyncRunTimeSecs"
	  private explicit_type "long"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Latest point of displacement into the future at which this sync must occur. "
	end

	classrelation 221058 // mCustomExtras (<unidirectional association>)
	  relation 221058 --->
	    a role_name "mCustomExtras" private
	      comment "
Sync configuration information - custom user data explicitly provided by the developer.
This data is handed over to the sync operation.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 221058 // mCustomExtras (<unidirectional association>)
	    b parent class_ref 174082 // Bundle
	end

	classrelation 221186 // mSyncConfigExtras (<unidirectional association>)
	  relation 221186 --->
	    a role_name "mSyncConfigExtras" private
	      comment "
Sync system configuration -  used to store system sync configuration. Corresponds to
ContentResolver.SYNC_EXTRAS_* flags.
TODO: Use this instead of dumping into one bundle. Need to decide if these flags should
discriminate between equivalent syncs.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 221186 // mSyncConfigExtras (<unidirectional association>)
	    b parent class_ref 174082 // Bundle
	end

	attribute 503426 "mTxBytes"
	  private explicit_type "long"
	  init_value " -1L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Expected upload transfer in bytes. "
	end

	attribute 503554 "mRxBytes"
	  private explicit_type "long"
	  init_value " -1L"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Expected download transfer in bytes. "
	end

	attribute 503682 "mDisallowMetered"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Whether or not this sync can occur on metered networks. Default false. "
	end

	attribute 503810 "mPriority"
	  private explicit_type "int"
	  init_value " 0"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Priority of this sync relative to others from calling app [-2, 2]. Default 0. "
	end

	attribute 503938 "mSyncType"
	  private explicit_type "int"
	  init_value " SYNC_TYPE_UNKNOWN"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Whether this builder is building a periodic sync, or a one-time sync.
"
	end

	attribute 504066 "mSyncTarget"
	  private explicit_type "int"
	  init_value " SYNC_TARGET_UNKNOWN"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Whether this will go to a sync adapter or to a sync service. "
	end

	attribute 504194 "mIsManual"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Whether this is a user-activated sync. "
	end

	attribute 504322 "mNoRetry"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Whether to retry this one-time sync if the sync fails. Not valid for
periodic syncs. See {@link ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY}.
"
	end

	attribute 504450 "mIgnoreBackoff"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "Whether to respect back-off for this one-time sync. Not valid for
periodic syncs. See
{@link ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF};
"
	end

	attribute 504578 "mIgnoreSettings"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Ignore sync system settings and perform sync anyway. "
	end

	attribute 504706 "mExpedited"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " This sync will run in preference to other non-expedited syncs. "
	end

	classrelation 221314 // mComponentName (<unidirectional association>)
	  relation 221314 --->
	    a role_name "mComponentName" private
	      comment "
The sync component that contains the sync logic if this is a provider-less sync,
otherwise null.

"
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 221314 // mComponentName (<unidirectional association>)
	    b parent class_ref 196738 // ComponentName
	end

	attribute 504834 "mAccount"
	  private explicit_type "Account"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The Account object that together with an Authority name define the SyncAdapter (if
this sync is bound to a provider), otherwise null.
"
	end

	attribute 504962 "mAuthority"
	  private explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment "The Authority name that together with an Account define the SyncAdapter (if
this sync is bound to a provider), otherwise null.
"
	end

	operation 776322 "Builder"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 776450 "syncOnce"
	  public return_type class_ref 207874 // Builder
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Request that a sync occur immediately.

Example
<pre>
    SyncRequest.Builder builder = (new SyncRequest.Builder()).syncOnce();
</pre>"
	end

	operation 776578 "syncPeriodic"
	  public return_type class_ref 207874 // Builder
	  nparams 2
	    param in name "pollFrequency" explicit_type "long"
	    param in name "beforeSeconds" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Build a periodic sync. Either this or syncOnce() <b>must</b> be called for this builder.
Syncs are identified by target {@link android.provider}/{@link android.accounts.Account}
and by the contents of the extras bundle.
You cannot reuse the same builder for one-time syncs (by calling this function) after
having specified a periodic sync. If you do, an <code>IllegalArgumentException</code>
will be thrown.

Example usage.

<pre>
    Request a periodic sync every 5 hours with 20 minutes of flex.
    SyncRequest.Builder builder =
        (new SyncRequest.Builder()).syncPeriodic(5 * HOUR_IN_SECS, 20 * MIN_IN_SECS);

    Schedule a periodic sync every hour at any point in time during that hour.
    SyncRequest.Builder builder =
        (new SyncRequest.Builder()).syncPeriodic(1 * HOUR_IN_SECS, 1 * HOUR_IN_SECS);
</pre>

N.B.: Periodic syncs are not allowed to have any of
{@link ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY},
{@link ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF},
{@link ContentResolver#SYNC_EXTRAS_IGNORE_SETTINGS},
{@link ContentResolver#SYNC_EXTRAS_INITIALIZE},
{@link ContentResolver#SYNC_EXTRAS_FORCE},
{@link ContentResolver#SYNC_EXTRAS_EXPEDITED},
{@link ContentResolver#SYNC_EXTRAS_MANUAL}
set to true. If any are supplied then an <code>IllegalArgumentException</code> will
be thrown.

@param pollFrequency the amount of time in seconds that you wish
           to elapse between periodic syncs.
@param beforeSeconds the amount of flex time in seconds before
           {@code pollFrequency} that you permit for the sync to take
           place. Must be less than {@code pollFrequency}."
	end

	operation 776706 "setupInterval"
	  private explicit_return_type "void"
	  nparams 2
	    param in name "at" explicit_type "long"
	    param in name "before" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment " {@hide} "
	end

	operation 776834 "setTransferSize"
	  public return_type class_ref 207874 // Builder
	  nparams 2
	    param in name "rxBytes" explicit_type "long"
	    param in name "txBytes" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@hide}
Developer can provide insight into their payload size; optional. -1 specifies unknown,
so that you are not restricted to defining both fields.

@param rxBytes Bytes expected to be downloaded.
@param txBytes Bytes expected to be uploaded."
	end

	operation 776962 "setDisallowMetered"
	  public return_type class_ref 207874 // Builder
	  nparams 1
	    param inout name "disallow" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "@see android.net.ConnectivityManager#isActiveNetworkMetered()
@param disallow true to enforce that this transfer not occur on metered networks.
                Default false."
	end

	operation 777090 "setSyncAdapter"
	  public return_type class_ref 207874 // Builder
	  nparams 2
	    param inout name "account" explicit_type "Account"
	    param in name "authority" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Specify an authority and account for this transfer.

@param authority String identifying which content provider to sync.
@param account Account to sync. Can be null unless this is a periodic sync."
	end

	operation 777218 "setExtras"
	  public return_type class_ref 207874 // Builder
	  nparams 1
	    param inout name "bundle" type class_ref 174082 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Optional developer-provided extras handed back in
{@link AbstractThreadedSyncAdapter#onPerformSync(Account, Bundle, String,
ContentProviderClient, SyncResult)} occurs. This bundle is copied into the SyncRequest
returned by {@link #build()}.

Example:
<pre>
  String[] syncItems = {\"dog\", \"cat\", \"frog\", \"child\"};
  SyncRequest.Builder builder =
    new SyncRequest.Builder()
      .setSyncAdapter(dummyAccount, dummyProvider)
      .syncOnce(5 * MINUTES_IN_SECS);

  for (String syncData : syncItems) {
    Bundle extras = new Bundle();
    extras.setString(\"data\", syncData);
    builder.setExtras(extras);
    ContentResolver.sync(builder.build()); // Each sync() request is for a unique sync.
  }
</pre>
Only values of the following types may be used in the extras bundle:
<ul>
<li>Integer</li>
<li>Long</li>
<li>Boolean</li>
<li>Float</li>
<li>Double</li>
<li>String</li>
<li>Account</li>
<li>null</li>
</ul>
If any data is present in the bundle not of this type, build() will
throw a runtime exception.

@param bundle extras bundle to set."
	end

	operation 777346 "setNoRetry"
	  public return_type class_ref 207874 // Builder
	  nparams 1
	    param inout name "noRetry" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience function for setting {@link ContentResolver#SYNC_EXTRAS_DO_NOT_RETRY}.

A one-off sync operation that fails will be retried with exponential back-off unless
this is set to false. Not valid for periodic sync and will throw an
<code>IllegalArgumentException</code> in build().

@param noRetry true to not retry a failed sync. Default false."
	end

	operation 777474 "setIgnoreSettings"
	  public return_type class_ref 207874 // Builder
	  nparams 1
	    param inout name "ignoreSettings" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience function for setting {@link ContentResolver#SYNC_EXTRAS_IGNORE_SETTINGS}.

A sync can specify that system sync settings be ignored (user has turned sync off). Not
valid for periodic sync and will throw an <code>IllegalArgumentException</code> in
{@link #build()}.

@param ignoreSettings true to ignore the sync automatically settings. Default false."
	end

	operation 777602 "setIgnoreBackoff"
	  public return_type class_ref 207874 // Builder
	  nparams 1
	    param inout name "ignoreBackoff" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience function for setting {@link ContentResolver#SYNC_EXTRAS_IGNORE_BACKOFF}.

Force the sync scheduling process to ignore any back-off that was the result of a failed
sync, as well as to invalidate any {@link SyncResult#delayUntil} value that may have
been set by the adapter. Successive failures will not honor this flag. Not valid for
periodic sync and will throw an <code>IllegalArgumentException</code> in
{@link #build()}.

@param ignoreBackoff ignore back-off settings. Default false."
	end

	operation 777730 "setManual"
	  public return_type class_ref 207874 // Builder
	  nparams 1
	    param inout name "isManual" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Convenience function for setting {@link ContentResolver#SYNC_EXTRAS_MANUAL}.

A manual sync is functionally equivalent to calling {@link #setIgnoreBackoff(boolean)}
and {@link #setIgnoreSettings(boolean)}. Not valid for periodic sync and will throw an
<code>IllegalArgumentException</code> in {@link #build()}.

@param isManual User-initiated sync or not. Default false."
	end

	operation 777858 "setExpedited"
	  public return_type class_ref 207874 // Builder
	  nparams 1
	    param inout name "expedited" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "An expedited sync runs immediately and will preempt another non-expedited running sync.

Not valid for periodic sync and will throw an <code>IllegalArgumentException</code> in
{@link #build()}.

@param expedited whether to run expedited. Default false."
	end

	operation 777986 "setPriority"
	  public return_type class_ref 207874 // Builder
	  nparams 1
	    param in name "priority" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "{@hide}
@param priority the priority of this request among all requests from the calling app.
Range of [-2,2] similar to how this is done with notifications."
	end

	operation 778114 "build"
	  public return_type class_ref 199554 // SyncRequest
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Performs validation over the request and throws the runtime exception
<code>IllegalArgumentException</code> if this validation fails.

@return a SyncRequest with the information contained within this
        builder."
	end

	operation 778242 "validatePeriodicExtras"
	  private explicit_return_type "void"
	  nparams 1
	    param inout name "extras" type class_ref 174082 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Helper function to throw an <code>IllegalArgumentException</code> if any illegal
extras were set for a periodic sync.

@param extras bundle to validate."
	end
      end
    end

    class 199682 "SyncAdapterType"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Value type that represents a SyncAdapterType. This object overrides {@link #equals} and
{@link #hashCode}, making it suitable for use as the key of a {@link java.util.Map}"
      classrelation 220034 // <realization>
	relation 220034 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 220034 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 499074 "authority"
	const_attribute public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 499202 "accountType"
	const_attribute public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 499330 "isKey"
	const_attribute public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 499458 "userVisible"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 499586 "supportsUploading"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 499714 "isAlwaysSyncable"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 499842 "allowParallelSyncs"
	const_attribute private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 499970 "settingsActivity"
	const_attribute private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 771586 "SyncAdapterType"
	public explicit_return_type ""
	nparams 4
	  param in name "authority" explicit_type "String"
	  param in name "accountType" explicit_type "String"
	  param inout name "userVisible" explicit_type "boolean"
	  param inout name "supportsUploading" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 771714 "SyncAdapterType"
	public explicit_return_type ""
	nparams 7
	  param in name "authority" explicit_type "String"
	  param in name "accountType" explicit_type "String"
	  param inout name "userVisible" explicit_type "boolean"
	  param inout name "supportsUploading" explicit_type "boolean"
	  param inout name "isAlwaysSyncable" explicit_type "boolean"
	  param inout name "allowParallelSyncs" explicit_type "boolean"
	  param in name "settingsActivity" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 771842 "SyncAdapterType"
	private explicit_return_type ""
	nparams 2
	  param in name "authority" explicit_type "String"
	  param in name "accountType" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 771970 "supportsUploading"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 772098 "isUserVisible"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 772226 "allowParallelSyncs"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return True if this SyncAdapter supports syncing multiple accounts simultaneously.
If false then the SyncManager will take care to only start one sync at a time
using this SyncAdapter."
      end

      operation 772354 "isAlwaysSyncable"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "If true then the SyncManager will never issue an initialization sync to the SyncAdapter
and will instead automatically call
{@link ContentResolver#setIsSyncable(android.accounts.Account, String, int)} with a
value of 1 for each account and provider that this sync adapter supports.
@return true if the SyncAdapter does not require initialization and if it is ok for the
SyncAdapter to treat it as syncable automatically."
      end

      operation 772482 "getSettingsActivity"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return The activity to use to invoke this SyncAdapter's settings activity.
May be null."
      end

      operation 772610 "newKey"
	class_operation public return_type class_ref 199682 // SyncAdapterType
	nparams 2
	  param in name "authority" explicit_type "String"
	  param in name "accountType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 772738 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 772866 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 772994 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 773122 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 773250 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 773378 "SyncAdapterType"
	public explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 220162 // CREATOR (<unidirectional association>)
	relation 220162 --->
	  a role_name "CREATOR" init_value " new Creator<SyncAdapterType>() {
        public SyncAdapterType createFromParcel(Parcel source) {
            return new SyncAdapterType(source);
        }

        public SyncAdapterType[] newArray(int size) {
            return new SyncAdapterType[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncAdapterType> ${name}${value};
"
	    classrelation_ref 220162 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end
    end

    class 199810 "PeriodicSync"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Value type that contains information about a periodic sync."
      classrelation 216962 // <realization>
	relation 216962 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 216962 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 492418 "account"
	const_attribute public explicit_type "Account"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The account to be synced. Can be null. "
      end

      attribute 492546 "authority"
	const_attribute public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The authority of the sync. Can be null. "
      end

      classrelation 217090 // extras (<unidirectional association>)
	relation 217090 --->
	  a role_name "extras" const_relation public
	    comment " Any extras that parameters that are to be passed to the sync adapter. 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 217090 // extras (<unidirectional association>)
	  b parent class_ref 174082 // Bundle
      end

      attribute 492674 "period"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " How frequently the sync should be scheduled, in seconds. Kept around for API purposes. "
      end

      attribute 492802 "flexTime"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "{@hide}
How much flexibility can be taken in scheduling the sync, in seconds.
"
      end

      operation 758274 "PeriodicSync"
	public explicit_return_type ""
	nparams 4
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	  param in name "periodInSeconds" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a new PeriodicSync, copying the Bundle. SM no longer uses this ctor - kept around
becuse it is part of the API.
Note - even calls to the old API will not use this ctor, as
they are given a default flex time."
      end

      operation 758402 "PeriodicSync"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 199810 // PeriodicSync
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
Create a copy of a periodic sync."
      end

      operation 758530 "PeriodicSync"
	public explicit_return_type ""
	nparams 5
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	  param inout name "extras" type class_ref 174082 // Bundle
	  param in name "period" explicit_type "long"
	  param in name "flexTime" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "{@hide}
A PeriodicSync for a sync with a specified provider."
      end

      operation 758658 "PeriodicSync"
	private explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 758786 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 758914 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 217218 // CREATOR (<unidirectional association>)
	relation 217218 --->
	  a role_name "CREATOR" init_value " new Creator<PeriodicSync>() {
        @Override
        public PeriodicSync createFromParcel(Parcel source) {
            return new PeriodicSync(source);
        }

        @Override
        public PeriodicSync[] newArray(int size) {
            return new PeriodicSync[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<PeriodicSync> ${name}${value};
"
	    classrelation_ref 217218 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 759042 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 759170 "syncExtrasEquals"
	class_operation public explicit_return_type "boolean"
	nparams 2
	  param inout name "b1" type class_ref 174082 // Bundle
	  param inout name "b2" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Periodic sync extra comparison function.
{@hide}"
      end

      operation 759298 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 199938 "SyncInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Information about the sync operation that is currently underway."
      classrelation 220290 // <realization>
	relation 220290 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 220290 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 500482 "authorityId"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " @hide "
      end

      attribute 500610 "account"
	const_attribute public explicit_type "Account"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The {@link Account} that is currently being synced.
"
      end

      attribute 500738 "authority"
	const_attribute public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The authority of the provider that is currently being synced.
"
      end

      attribute 500866 "startTime"
	const_attribute public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The start time of the current sync operation in milliseconds since boot.
This is represented in elapsed real time.
See {@link android.os.SystemClock#elapsedRealtime()}.
"
      end

      operation 774146 "SyncInfo"
	public explicit_return_type ""
	nparams 4
	  param in name "authorityId" explicit_type "int"
	  param inout name "account" explicit_type "Account"
	  param in name "authority" explicit_type "String"
	  param in name "startTime" explicit_type "long"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 774274 "SyncInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 199938 // SyncInfo
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 774402 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 774530 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 774658 "SyncInfo"
	package explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      classrelation 220418 // CREATOR (<unidirectional association>)
	relation 220418 --->
	  a role_name "CREATOR" init_value " new Creator<SyncInfo>() {
        public SyncInfo createFromParcel(Parcel in) {
            return new SyncInfo(in);
        }

        public SyncInfo[] newArray(int size) {
            return new SyncInfo[size];
        }
    }" class_relation const_relation public
	    comment " @hide 
"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncInfo> ${name}${value};
"
	    classrelation_ref 220418 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end
    end

    class 200066 "SyncStatusInfo"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " @hide "
      classrelation 222210 // <realization>
	relation 222210 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 222210 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 507266 "VERSION"
	class_attribute const_attribute package explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 507394 "authorityId"
	const_attribute public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 507522 "totalElapsedTime"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 507650 "numSyncs"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 507778 "numSourcePoll"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 507906 "numSourceServer"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 508034 "numSourceLocal"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 508162 "numSourceUser"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 508290 "numSourcePeriodic"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 508418 "lastSuccessTime"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 508546 "lastSuccessSource"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 508674 "lastFailureTime"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 508802 "lastFailureSource"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 508930 "lastFailureMesg"
	public explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 509058 "initialFailureTime"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 509186 "pending"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 509314 "initialize"
	public explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 509442 "periodicSyncTimes"
	private explicit_type "Long"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Warning: It is up to the external caller to ensure there are
 no race conditions when accessing this list"
      end

      attribute 509570 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Sync\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 780674 "SyncStatusInfo"
	public explicit_return_type ""
	nparams 1
	  param in name "authorityId" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 780802 "getLastFailureMesgAsInt"
	public explicit_return_type "int"
	nparams 1
	  param in name "def" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 780930 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 781058 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "parcel" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 781186 "SyncStatusInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "parcel" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 781314 "SyncStatusInfo"
	public explicit_return_type ""
	nparams 1
	  param inout name "other" type class_ref 200066 // SyncStatusInfo
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 781442 "setPeriodicSyncTime"
	public explicit_return_type "void"
	nparams 2
	  param in name "index" explicit_type "int"
	  param in name "when" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 781570 "getPeriodicSyncTime"
	public explicit_return_type "long"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 781698 "removePeriodicSyncTime"
	public explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 222338 // CREATOR (<unidirectional association>)
	relation 222338 --->
	  a role_name "CREATOR" init_value " new Creator<SyncStatusInfo>() {
        public SyncStatusInfo createFromParcel(Parcel in) {
            return new SyncStatusInfo(in);
        }

        public SyncStatusInfo[] newArray(int size) {
            return new SyncStatusInfo[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncStatusInfo> ${name}${value};
"
	    classrelation_ref 222338 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 781826 "ensurePeriodicSyncTimeSize"
	private explicit_return_type "void"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 200194 "SyncStatusObserver"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 781954 "onStatusChanged"
	public explicit_return_type "void"
	nparams 1
	  param in name "which" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 200706 "ContentUris"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility methods useful for working with {@link android.net.Uri} objects
that use the &quot;content&quot; (content://) scheme.

<p>
  Content URIs have the syntax
</p>
<p>
  <code>content://<em>authority</em>/<em>path</em>/<em>id</em></code>
</p>
<dl>
  <dt>
      <code>content:</code>
  </dt>
  <dd>
      The scheme portion of the URI. This is always set to {@link
      android.content.ContentResolver#SCHEME_CONTENT ContentResolver.SCHEME_CONTENT} (value
      <code>content://</code>).
  </dd>
  <dt>
      <em>authority</em>
  </dt>
  <dd>
      A string that identifies the entire content provider. All the content URIs for the provider
      start with this string. To guarantee a unique authority, providers should consider
      using an authority that is the same as the provider class' package identifier.
  </dd>
  <dt>
      <em>path</em>
  </dt>
  <dd>
      Zero or more segments, separated by a forward slash (<code>/</code>), that identify
      some subset of the provider's data. Most providers use the path part to identify
      individual tables. Individual segments in the path are often called
      &quot;directories&quot; although they do not refer to file directories. The right-most
      segment in a path is often called a &quot;twig&quot;
  </dd>
  <dt>
      <em>id</em>
  </dt>
  <dd>
      A unique numeric identifier for a single row in the subset of data identified by the
      preceding path part. Most providers recognize content URIs that contain an id part
      and give them special handling. A table that contains a column named <code>_ID</code>
      often expects the id part to be a particular value for that column.
  </dd>
</dl>
"
      operation 684802 "parseId"
	class_operation public explicit_return_type "long"
	nparams 1
	  param inout name "contentUri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Converts the last path segment to a long.

<p>This supports a common convention for content URIs where an ID is
stored in the last segment.

@throws UnsupportedOperationException if this isn't a hierarchical URI
@throws NumberFormatException if the last segment isn't a number

@return the long conversion of the last segment or -1 if the path is
 empty"
      end

      operation 684930 "appendId"
	class_operation public return_type class_ref 149506 // Builder
	nparams 2
	  param inout name "builder" type class_ref 149506 // Builder
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the given ID to the end of the path.

@param builder to append the ID to
@param id to append

@return the given builder"
      end

      operation 685058 "withAppendedId"
	class_operation public return_type class_ref 145410 // Uri
	nparams 2
	  param inout name "contentUri" type class_ref 145410 // Uri
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Appends the given ID to the end of the path.

@param contentUri to start with
@param id to append

@return a new URI with the given ID appended to the end of the path"
      end
    end

    class 201602 "SharedPreferences"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for accessing and modifying preference data returned by {@link
Context#getSharedPreferences}.  For any particular set of preferences,
there is a single instance of this class that all clients share.
Modifications to the preferences must go through an {@link Editor} object
to ensure the preference values remain in a consistent state and control
when they are committed to storage.  Objects that are returned from the
various <code>get</code> methods must be treated as immutable by the application.

<p><em>Note: currently this class does not support use across multiple
processes.  This will be added later.</em>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For more information about using SharedPreferences, read the
<a href=\"{@docRoot}guide/topics/data/data-storage.html#pref\">Data Storage</a>
developer guide.</p></div>

@see Context#getSharedPreferences"
      class 206210 "OnSharedPreferenceChangeListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 765058 "onSharedPreferenceChanged"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "sharedPreferences" type class_ref 201602 // SharedPreferences
	    param in name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a shared preference is changed, added, or removed. This
may be called even if a preference is set to its existing value.

<p>This callback will be run on your main thread.

@param sharedPreferences The {@link SharedPreferences} that received
           the change.
@param key The key of the preference that was changed, added, or
           removed."
	end
      end

      class 206338 "Editor"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 765186 "putString"
	  public return_type class_ref 206338 // Editor
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a String value in the preferences editor, to be written back once
{@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.  Supplying {@code null}
   as the value is equivalent to calling {@link #remove(String)} with
   this key.

@return Returns a reference to the same Editor object, so you can
chain put calls together."
	end

	operation 765314 "putStringSet"
	  public return_type class_ref 206338 // Editor
	  nparams 2
	    param in name "key" explicit_type "String"
	    param inout name "values" explicit_type "Set<String>"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a set of String values in the preferences editor, to be written
back once {@link #commit} is called.

@param key The name of the preference to modify.
@param values The set of new values for the preference.  Passing {@code null}
   for this argument is equivalent to calling {@link #remove(String)} with
   this key.
@return Returns a reference to the same Editor object, so you can
chain put calls together."
	end

	operation 765442 "putInt"
	  public return_type class_ref 206338 // Editor
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set an int value in the preferences editor, to be written back once
{@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together."
	end

	operation 765570 "putLong"
	  public return_type class_ref 206338 // Editor
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "long"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a long value in the preferences editor, to be written back once
{@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together."
	end

	operation 765698 "putFloat"
	  public return_type class_ref 206338 // Editor
	  nparams 2
	    param in name "key" explicit_type "String"
	    param in name "value" explicit_type "float"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a float value in the preferences editor, to be written back once
{@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together."
	end

	operation 765826 "putBoolean"
	  public return_type class_ref 206338 // Editor
	  nparams 2
	    param in name "key" explicit_type "String"
	    param inout name "value" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Set a boolean value in the preferences editor, to be written back
once {@link #commit} or {@link #apply} are called.

@param key The name of the preference to modify.
@param value The new value for the preference.

@return Returns a reference to the same Editor object, so you can
chain put calls together."
	end

	operation 765954 "remove"
	  public return_type class_ref 206338 // Editor
	  nparams 1
	    param in name "key" explicit_type "String"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Mark in the editor that a preference value should be removed, which
will be done in the actual preferences once {@link #commit} is
called.

<p>Note that when committing back to the preferences, all removals
are done first, regardless of whether you called remove before
or after put methods on this editor.

@param key The name of the preference to remove.

@return Returns a reference to the same Editor object, so you can
chain put calls together."
	end

	operation 766082 "clear"
	  public return_type class_ref 206338 // Editor
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Mark in the editor to remove <em>all</em> values from the
preferences.  Once commit is called, the only remaining preferences
will be any that you have defined in this editor.

<p>Note that when committing back to the preferences, the clear
is done first, regardless of whether you called clear before
or after put methods on this editor.

@return Returns a reference to the same Editor object, so you can
chain put calls together."
	end

	operation 766210 "commit"
	  public explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Commit your preferences changes back from this Editor to the
{@link SharedPreferences} object it is editing.  This atomically
performs the requested modifications, replacing whatever is currently
in the SharedPreferences.

<p>Note that when two editors are modifying preferences at the same
time, the last one to call commit wins.

<p>If you don't care about the return value and you're
using this from your application's main thread, consider
using {@link #apply} instead.

@return Returns true if the new values were successfully written
to persistent storage."
	end

	operation 766338 "apply"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Commit your preferences changes back from this Editor to the
{@link SharedPreferences} object it is editing.  This atomically
performs the requested modifications, replacing whatever is currently
in the SharedPreferences.

<p>Note that when two editors are modifying preferences at the same
time, the last one to call apply wins.

<p>Unlike {@link #commit}, which writes its preferences out
to persistent storage synchronously, {@link #apply}
commits its changes to the in-memory
{@link SharedPreferences} immediately but starts an
asynchronous commit to disk and you won't be notified of
any failures.  If another editor on this
{@link SharedPreferences} does a regular {@link #commit}
while a {@link #apply} is still outstanding, the
{@link #commit} will block until all async commits are
completed as well as the commit itself.

<p>As {@link SharedPreferences} instances are singletons within
a process, it's safe to replace any instance of {@link #commit} with
{@link #apply} if you were already ignoring the return value.

<p>You don't need to worry about Android component
lifecycles and their interaction with <code>apply()</code>
writing to disk.  The framework makes sure in-flight disk
writes from <code>apply()</code> complete before switching
states.

<p class='note'>The SharedPreferences.Editor interface
isn't expected to be implemented directly.  However, if you
previously did implement it and are now getting errors
about missing <code>apply()</code>, you can simply call
{@link #commit} from <code>apply()</code>."
	end
      end

      operation 766466 "getAll"
	public explicit_return_type "Map<String, ?>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve all values from the preferences.

<p>Note that you <em>must not</em> modify the collection returned
by this method, or alter any of its contents.  The consistency of your
stored data is not guaranteed if you do.

@return Returns a map containing a list of pairs key/value representing
the preferences.

@throws NullPointerException"
      end

      operation 766594 "getString"
	public explicit_return_type "String"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "defValue" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a String value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
a String.

@throws ClassCastException"
      end

      operation 766722 "getStringSet"
	public explicit_return_type "Set<String>"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "defValues" explicit_type "Set<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a set of String values from the preferences.

<p>Note that you <em>must not</em> modify the set instance returned
by this call.  The consistency of the stored data is not guaranteed
if you do, nor is your ability to modify the instance at all.

@param key The name of the preference to retrieve.
@param defValues Values to return if this preference does not exist.

@return Returns the preference values if they exist, or defValues.
Throws ClassCastException if there is a preference with this name
that is not a Set.

@throws ClassCastException"
      end

      operation 766850 "getInt"
	public explicit_return_type "int"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "defValue" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve an int value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
an int.

@throws ClassCastException"
      end

      operation 766978 "getLong"
	public explicit_return_type "long"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "defValue" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a long value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
a long.

@throws ClassCastException"
      end

      operation 767106 "getFloat"
	public explicit_return_type "float"
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "defValue" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a float value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
a float.

@throws ClassCastException"
      end

      operation 767234 "getBoolean"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "defValue" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Retrieve a boolean value from the preferences.

@param key The name of the preference to retrieve.
@param defValue Value to return if this preference does not exist.

@return Returns the preference value if it exists, or defValue.  Throws
ClassCastException if there is a preference with this name that is not
a boolean.

@throws ClassCastException"
      end

      operation 767362 "contains"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "key" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Checks whether the preferences contains a preference.

@param key The name of the preference to check.
@return Returns true if the preference exists in the preferences,
        otherwise false."
      end

      operation 767490 "edit"
	public return_type class_ref 206338 // Editor
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new Editor for these preferences, through which you can make
modifications to the data in the preferences and atomically commit those
changes back to the SharedPreferences object.

<p>Note that you <em>must</em> call {@link Editor#commit} to have any
changes you perform in the Editor actually show up in the
SharedPreferences.

@return Returns a new instance of the {@link Editor} interface, allowing
you to modify the values in this SharedPreferences object."
      end

      operation 767618 "registerOnSharedPreferenceChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 206210 // OnSharedPreferenceChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Registers a callback to be invoked when a change happens to a preference.

@param listener The callback that will run.
@see #unregisterOnSharedPreferenceChangeListener"
      end

      operation 767746 "unregisterOnSharedPreferenceChangeListener"
	public explicit_return_type "void"
	nparams 1
	  param inout name "listener" type class_ref 206210 // OnSharedPreferenceChangeListener
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Unregisters a previous callback.

@param listener The callback that should be unregistered.
@see #registerOnSharedPreferenceChangeListener"
      end
    end

    class 201730 "IntentSender"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A description of an Intent and target action to perform with it.
The returned object can be
handed to other applications so that they can perform the action you
described on your behalf at a later time.

<p>By giving a IntentSender to another application,
you are granting it the right to perform the operation you have specified
as if the other application was yourself (with the same permissions and
identity).  As such, you should be careful about how you build the IntentSender:
often, for example, the base Intent you supply will have the component
name explicitly set to one of your own components, to ensure it is ultimately
sent there and nowhere else.

<p>A IntentSender itself is simply a reference to a token maintained by
the system describing the original data used to retrieve it.  This means
that, even if its owning application's process is killed, the
IntentSender itself will remain usable from other processes that
have been given it.  If the creating application later re-retrieves the
same kind of IntentSender (same operation, same Intent action, data,
categories, and components, and same flags), it will receive a IntentSender
representing the same token if that is still valid.

<p>Instances of this class can not be made directly, but rather must be
created from an existing {@link android.app.PendingIntent} with
{@link android.app.PendingIntent#getIntentSender() PendingIntent.getIntentSender()}."
      class 201858 "SendIntentException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 215554 // <generalisation>
	  relation 215554 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 215554 // <generalisation>
	    b parent class_ref 176130 // AndroidException
	end

	operation 754178 "SendIntentException"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 754306 "SendIntentException"
	  public explicit_return_type ""
	  nparams 1
	    param in name "name" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 754434 "SendIntentException"
	  public explicit_return_type ""
	  nparams 1
	    param inout name "cause" explicit_type "Exception"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 215426 // <realization>
	relation 215426 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 215426 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 491906 "mTarget"
	const_attribute private explicit_type "IIntentSender"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 204930 "OnFinished"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 754562 "onSendFinished"
	  public explicit_return_type "void"
	  nparams 5
	    param inout name "IntentSender" type class_ref 201730 // IntentSender
	    param inout name "intent" type class_ref 195458 // Intent
	    param in name "resultCode" explicit_type "int"
	    param in name "resultData" explicit_type "String"
	    param inout name "resultExtras" type class_ref 174082 // Bundle
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a send operation as completed.

@param IntentSender The IntentSender this operation was sent through.
@param intent The original Intent that was sent.
@param resultCode The final result code determined by the send.
@param resultData The final data collected by a broadcast.
@param resultExtras The final extras collected by a broadcast."
	end
      end

      class 205058 "FinishedDispatcher"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 215682 // <generalisation>
	  relation 215682 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 215682 // <generalisation>
	    b parent class_ref 205186 // Stub
	end

	classrelation 215810 // <realization>
	  relation 215810 -_-|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 215810 // <realization>
	    b parent class_ref 167426 // Runnable
	end

	classrelation 215938 // mIntentSender (<unidirectional association>)
	  relation 215938 --->
	    a role_name "mIntentSender" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 215938 // mIntentSender (<unidirectional association>)
	    b parent class_ref 201730 // IntentSender
	end

	classrelation 216066 // mWho (<unidirectional association>)
	  relation 216066 --->
	    a role_name "mWho" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 216066 // mWho (<unidirectional association>)
	    b parent class_ref 204930 // OnFinished
	end

	classrelation 216194 // mHandler (<unidirectional association>)
	  relation 216194 --->
	    a role_name "mHandler" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 216194 // mHandler (<unidirectional association>)
	    b parent class_ref 168578 // Handler
	end

	classrelation 216322 // mIntent (<unidirectional association>)
	  relation 216322 --->
	    a role_name "mIntent" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 216322 // mIntent (<unidirectional association>)
	    b parent class_ref 195458 // Intent
	end

	attribute 492034 "mResultCode"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 492162 "mResultData"
	  private explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 216450 // mResultExtras (<unidirectional association>)
	  relation 216450 --->
	    a role_name "mResultExtras" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 216450 // mResultExtras (<unidirectional association>)
	    b parent class_ref 174082 // Bundle
	end

	operation 754690 "FinishedDispatcher"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "pi" type class_ref 201730 // IntentSender
	    param inout name "who" type class_ref 204930 // OnFinished
	    param inout name "handler" type class_ref 168578 // Handler
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 754818 "performReceive"
	  public explicit_return_type "void"
	  nparams 7
	    param inout name "intent" type class_ref 195458 // Intent
	    param in name "resultCode" explicit_type "int"
	    param in name "data" explicit_type "String"
	    param inout name "extras" type class_ref 174082 // Bundle
	    param inout name "serialized" explicit_type "boolean"
	    param inout name "sticky" explicit_type "boolean"
	    param in name "sendingUser" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 754946 "run"
	  public explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 755074 "sendIntent"
	public explicit_return_type "void"
	nparams 5
	  param inout name "context" type class_ref 192770 // Context
	  param in name "code" explicit_type "int"
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "onFinished" type class_ref 204930 // OnFinished
	  param inout name "handler" type class_ref 168578 // Handler
	nexceptions 1
	  exception class_ref 201858 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform the operation associated with this IntentSender, allowing the
caller to specify information about the Intent to use and be notified
when the send has completed.

@param context The Context of the caller.  This may be null if
<var>intent</var> is also null.
@param code Result code to supply back to the IntentSender's target.
@param intent Additional Intent data.  See {@link Intent#fillIn
Intent.fillIn()} for information on how this is applied to the
original Intent.  Use null to not modify the original Intent.
@param onFinished The object to call back on when the send has
completed, or null for no callback.
@param handler Handler identifying the thread on which the callback
should happen.  If null, the callback will happen from the thread
pool of the process.


@throws SendIntentException Throws CanceledIntentException if the IntentSender
is no longer allowing more intents to be sent through it."
      end

      operation 755202 "sendIntent"
	public explicit_return_type "void"
	nparams 6
	  param inout name "context" type class_ref 192770 // Context
	  param in name "code" explicit_type "int"
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "onFinished" type class_ref 204930 // OnFinished
	  param inout name "handler" type class_ref 168578 // Handler
	  param in name "requiredPermission" explicit_type "String"
	nexceptions 1
	  exception class_ref 201858 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform the operation associated with this IntentSender, allowing the
caller to specify information about the Intent to use and be notified
when the send has completed.

@param context The Context of the caller.  This may be null if
<var>intent</var> is also null.
@param code Result code to supply back to the IntentSender's target.
@param intent Additional Intent data.  See {@link Intent#fillIn
Intent.fillIn()} for information on how this is applied to the
original Intent.  Use null to not modify the original Intent.
@param onFinished The object to call back on when the send has
completed, or null for no callback.
@param handler Handler identifying the thread on which the callback
should happen.  If null, the callback will happen from the thread
pool of the process.
@param requiredPermission Name of permission that a recipient of the PendingIntent
is required to hold.  This is only valid for broadcast intents, and
corresponds to the permission argument in
{@link Context#sendBroadcast(Intent, String) Context.sendOrderedBroadcast(Intent, String)}.
If null, no permission is required.


@throws SendIntentException Throws CanceledIntentException if the IntentSender
is no longer allowing more intents to be sent through it."
      end

      operation 755330 "getTargetPackage"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Deprecated
"
	
	
	
	comment "@deprecated Renamed to {@link #getCreatorPackage()}."
      end

      operation 755458 "getCreatorPackage"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the package name of the application that created this
IntentSender, that is the identity under which you will actually be
sending the Intent.  The returned string is supplied by the system, so
that an application can not spoof its package.

@return The package name of the PendingIntent, or null if there is
none associated with it."
      end

      operation 755586 "getCreatorUid"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the uid of the application that created this
PendingIntent, that is the identity under which you will actually be
sending the Intent.  The returned integer is supplied by the system, so
that an application can not spoof its uid.

@return The uid of the PendingIntent, or -1 if there is
none associated with it."
      end

      operation 755714 "getCreatorUserHandle"
	public return_type class_ref 173186 // UserHandle
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the user handle of the application that created this
PendingIntent, that is the user under which you will actually be
sending the Intent.  The returned UserHandle is supplied by the system, so
that an application can not spoof its user.  See
{@link android.os.Process#myUserHandle() Process.myUserHandle()} for
more explanation of user handles.

@return The user handle of the PendingIntent, or null if there is
none associated with it."
      end

      operation 755842 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "otherObj" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Comparison operator on two IntentSender objects, such that true
is returned then they both represent the same operation from the
same package."
      end

      operation 755970 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 756098 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 756226 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 756354 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "out" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 216578 // CREATOR (<unidirectional association>)
	relation 216578 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<IntentSender>() {
        public IntentSender createFromParcel(Parcel in) {
            IBinder target = in.readStrongBinder();
            return target != null ? new IntentSender(target) : null;
        }

        public IntentSender[] newArray(int size) {
            return new IntentSender[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IntentSender> ${name}${value};
"
	    classrelation_ref 216578 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 756482 "writeIntentSenderOrNullToParcel"
	class_operation public explicit_return_type "void"
	nparams 2
	  param inout name "sender" type class_ref 201730 // IntentSender
	  param inout name "out" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for writing either a IntentSender or null pointer to
a Parcel.  You must use this with {@link #readIntentSenderOrNullFromParcel}
for later reading it.

@param sender The IntentSender to write, or null.
@param out Where to write the IntentSender."
      end

      operation 756610 "readIntentSenderOrNullFromParcel"
	class_operation public return_type class_ref 201730 // IntentSender
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Convenience function for reading either a Messenger or null pointer from
a Parcel.  You must have previously written the Messenger with
{@link #writeIntentSenderOrNullToParcel}.

@param in The Parcel containing the written Messenger.

@return Returns the Messenger read from the Parcel, or null if null had
been written."
      end

      operation 756738 "getTarget"
	public explicit_return_type "IIntentSender"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 756866 "IntentSender"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" explicit_type "IIntentSender"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 756994 "IntentSender"
	public explicit_return_type ""
	nparams 1
	  param inout name "target" type class_ref 172674 // IBinder
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end
    end

    class 201986 "IntentFilter"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Structured description of Intent values to be matched.  An IntentFilter can
match against actions, categories, and data (either via its type, scheme,
and/or path) in an Intent.  It also includes a \"priority\" value which is
used to order multiple matching filters.

<p>IntentFilter objects are often created in XML as part of a package's
{@link android.R.styleable#AndroidManifest AndroidManifest.xml} file,
using {@link android.R.styleable#AndroidManifestIntentFilter intent-filter}
tags.

<p>There are three Intent characteristics you can filter on: the
<em>action</em>, <em>data</em>, and <em>categories</em>.  For each of these
characteristics you can provide
multiple possible matching values (via {@link #addAction},
{@link #addDataType}, {@link #addDataScheme}, {@link #addDataSchemeSpecificPart},
{@link #addDataAuthority}, {@link #addDataPath}, and {@link #addCategory}, respectively).
For actions, the field
will not be tested if no values have been given (treating it as a wildcard);
if no data characteristics are specified, however, then the filter will
only match intents that contain no data.

<p>The data characteristic is
itself divided into three attributes: type, scheme, authority, and path.
Any that are
specified must match the contents of the Intent.  If you specify a scheme
but no type, only Intent that does not have a type (such as mailto:) will
match; a content: URI will never match because they always have a MIME type
that is supplied by their content provider.  Specifying a type with no scheme
has somewhat special meaning: it will match either an Intent with no URI
field, or an Intent with a content: or file: URI.  If you specify neither,
then only an Intent with no data or type will match.  To specify an authority,
you must also specify one or more schemes that it is associated with.
To specify a path, you also must specify both one or more authorities and
one or more schemes it is associated with.

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For information about how to create and resolve intents, read the
<a href=\"{@docRoot}guide/topics/intents/intents-filters.html\">Intents and Intent Filters</a>
developer guide.</p>
</div>

<h3>Filter Rules</h3>
<p>A match is based on the following rules.  Note that
for an IntentFilter to match an Intent, three conditions must hold:
the <strong>action</strong> and <strong>category</strong> must match, and
the data (both the <strong>data type</strong> and
<strong>data scheme+authority+path</strong> if specified) must match
(see {@link #match(ContentResolver, Intent, boolean, String)} for more details
on how the data fields match).

<p><strong>Action</strong> matches if any of the given values match the
Intent action; if the filter specifies no actions, then it will only match
Intents that do not contain an action.

<p><strong>Data Type</strong> matches if any of the given values match the
Intent type.  The Intent
type is determined by calling {@link Intent#resolveType}.  A wildcard can be
used for the MIME sub-type, in both the Intent and IntentFilter, so that the
type \"audio/*\" will match \"audio/mpeg\", \"audio/aiff\", \"audio/*\", etc.
<em>Note that MIME type matching here is <b>case sensitive</b>, unlike
formal RFC MIME types!</em>  You should thus always use lower case letters
for your MIME types.

<p><strong>Data Scheme</strong> matches if any of the given values match the
Intent data's scheme.
The Intent scheme is determined by calling {@link Intent#getData}
and {@link android.net.Uri#getScheme} on that URI.
<em>Note that scheme matching here is <b>case sensitive</b>, unlike
formal RFC schemes!</em>  You should thus always use lower case letters
for your schemes.

<p><strong>Data Scheme Specific Part</strong> matches if any of the given values match
the Intent's data scheme specific part <em>and</em> one of the data schemes in the filter
has matched the Intent, <em>or</em> no scheme specific parts were supplied in the filter.
The Intent scheme specific part is determined by calling
{@link Intent#getData} and {@link android.net.Uri#getSchemeSpecificPart} on that URI.
<em>Note that scheme specific part matching is <b>case sensitive</b>.</em>

<p><strong>Data Authority</strong> matches if any of the given values match
the Intent's data authority <em>and</em> one of the data schemes in the filter
has matched the Intent, <em>or</em> no authories were supplied in the filter.
The Intent authority is determined by calling
{@link Intent#getData} and {@link android.net.Uri#getAuthority} on that URI.
<em>Note that authority matching here is <b>case sensitive</b>, unlike
formal RFC host names!</em>  You should thus always use lower case letters
for your authority.

<p><strong>Data Path</strong> matches if any of the given values match the
Intent's data path <em>and</em> both a scheme and authority in the filter
has matched against the Intent, <em>or</em> no paths were supplied in the
filter.  The Intent authority is determined by calling
{@link Intent#getData} and {@link android.net.Uri#getPath} on that URI.

<p><strong>Categories</strong> match if <em>all</em> of the categories in
the Intent match categories given in the filter.  Extra categories in the
filter that are not in the Intent will not cause the match to fail.  Note
that unlike the action, an IntentFilter with no categories
will only match an Intent that does not have any categories."
      classrelation 214658 // <realization>
	relation 214658 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 214658 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 486914 "SGLOB_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"sglob\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 487042 "PREFIX_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"prefix\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 487170 "LITERAL_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"literal\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 487298 "PATH_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"path\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 487426 "PORT_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"port\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 487554 "HOST_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"host\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 487682 "AUTH_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"auth\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 487810 "SSP_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"ssp\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 487938 "SCHEME_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"scheme\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 488066 "TYPE_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"type\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 488194 "CAT_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"cat\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 488322 "NAME_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"name\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 488450 "ACTION_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"action\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 488578 "SYSTEM_HIGH_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter {@link #setPriority} value at which system high-priority
receivers are placed; that is, receivers that should execute before
application code. Applications should never use filters with this or
higher priorities.

@see #setPriority
"
      end

      attribute 488706 "SYSTEM_LOW_PRIORITY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter {@link #setPriority} value at which system low-priority
receivers are placed; that is, receivers that should execute after
application code. Applications should never use filters with this or
lower priorities.

@see #setPriority
"
      end

      attribute 488834 "MATCH_CATEGORY_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0xfff0000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The part of a match constant that describes the category of match
that occurred.  May be either {@link #MATCH_CATEGORY_EMPTY},
{@link #MATCH_CATEGORY_SCHEME}, {@link #MATCH_CATEGORY_SCHEME_SPECIFIC_PART},
{@link #MATCH_CATEGORY_HOST}, {@link #MATCH_CATEGORY_PORT},
{@link #MATCH_CATEGORY_PATH}, or {@link #MATCH_CATEGORY_TYPE}.  Higher
values indicate a better match.
"
      end

      attribute 488962 "MATCH_ADJUSTMENT_MASK"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x000ffff"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The part of a match constant that applies a quality adjustment to the
basic category of match.  The value {@link #MATCH_ADJUSTMENT_NORMAL}
is no adjustment; higher numbers than that improve the quality, while
lower numbers reduce it.
"
      end

      attribute 489090 "MATCH_ADJUSTMENT_NORMAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x8000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Quality adjustment applied to the category of match that signifies
the default, base value; higher numbers improve the quality while
lower numbers reduce it.
"
      end

      attribute 489218 "MATCH_CATEGORY_EMPTY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0100000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter matched an intent that had no data specified.
"
      end

      attribute 489346 "MATCH_CATEGORY_SCHEME"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0200000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter matched an intent with the same data URI scheme.
"
      end

      attribute 489474 "MATCH_CATEGORY_HOST"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0300000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter matched an intent with the same data URI scheme and
authority host.
"
      end

      attribute 489602 "MATCH_CATEGORY_PORT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0400000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter matched an intent with the same data URI scheme and
authority host and port.
"
      end

      attribute 489730 "MATCH_CATEGORY_PATH"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0500000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter matched an intent with the same data URI scheme,
authority, and path.
"
      end

      attribute 489858 "MATCH_CATEGORY_SCHEME_SPECIFIC_PART"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0580000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter matched an intent with the same data URI scheme and
scheme specific part.
"
      end

      attribute 489986 "MATCH_CATEGORY_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0x0600000"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter matched an intent with the same data MIME type.
"
      end

      attribute 490114 "NO_MATCH_TYPE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter didn't match due to different MIME types.
"
      end

      attribute 490242 "NO_MATCH_DATA"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter didn't match due to different data URIs.
"
      end

      attribute 490370 "NO_MATCH_ACTION"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter didn't match due to different actions.
"
      end

      attribute 490498 "NO_MATCH_CATEGORY"
	class_attribute const_attribute public explicit_type "int"
	init_value " -4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The filter didn't match because it required one or more categories
that were not in the Intent.
"
      end

      attribute 490626 "mPriority"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 490754 "mActions"
	const_attribute private explicit_type "String"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 490882 "mCategories"
	private explicit_type "String"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 491010 "mDataSchemes"
	private explicit_type "String"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 214786 // mDataSchemeSpecificParts (<unidirectional association>)
	relation 214786 --->
	  stereotype "ArrayList"
	  a role_name "mDataSchemeSpecificParts" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 214786 // mDataSchemeSpecificParts (<unidirectional association>)
	  b parent class_ref 180866 // PatternMatcher
      end

      class 204674 "AuthorityEntry"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 491394 "mOrigHost"
	  const_attribute private explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 491522 "mHost"
	  const_attribute private explicit_type "String"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 491650 "mWild"
	  const_attribute private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 491778 "mPort"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 748802 "AuthorityEntry"
	  public explicit_return_type ""
	  nparams 2
	    param in name "host" explicit_type "String"
	    param in name "port" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 748930 "AuthorityEntry"
	  package explicit_return_type ""
	  nparams 1
	    param inout name "src" type class_ref 170242 // Parcel
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 749058 "writeToParcel"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "dest" type class_ref 170242 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 749186 "getHost"
	  public explicit_return_type "String"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 749314 "getPort"
	  public explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 749442 "match"
	  public explicit_return_type "int"
	  nparams 1
	    param inout name "data" type class_ref 145410 // Uri
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Determine whether this AuthorityEntry matches the given data Uri.
<em>Note that this comparison is case-sensitive, unlike formal
RFC host names.  You thus should always normalize to lower-case.</em>

@param data The Uri to match.
@return Returns either {@link IntentFilter#NO_MATCH_DATA},
{@link IntentFilter#MATCH_CATEGORY_PORT}, or
{@link IntentFilter#MATCH_CATEGORY_HOST}."
	end
      end

      classrelation 214914 // mDataAuthorities (<unidirectional association>)
	relation 214914 --->
	  stereotype "ArrayList"
	  a role_name "mDataAuthorities" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 214914 // mDataAuthorities (<unidirectional association>)
	  b parent class_ref 204674 // AuthorityEntry
      end

      classrelation 215042 // mDataPaths (<unidirectional association>)
	relation 215042 --->
	  stereotype "ArrayList"
	  a role_name "mDataPaths" init_value " null" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 215042 // mDataPaths (<unidirectional association>)
	  b parent class_ref 180866 // PatternMatcher
      end

      attribute 491138 "mDataTypes"
	private explicit_type "String"
	init_value " null"
	stereotype "ArrayList"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 491266 "mHasPartialTypes"
	private explicit_type "boolean"
	init_value " false"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 745218 "findStringInSet"
	class_operation private explicit_return_type "int"
	nparams 4
	  param inout name "set" explicit_type "String"
	  param in name "string" explicit_type "String"
	  param inout name "lengths" explicit_type "int"
	  param in name "lenPos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " These functions are the start of more optimized code for managing
 the string sets...  not yet implemented."
      end

      operation 745346 "addStringToSet"
	class_operation private explicit_return_type "String"
	nparams 4
	  param inout name "set" explicit_type "String"
	  param in name "string" explicit_type "String"
	  param inout name "lengths" explicit_type "int"
	  param in name "lenPos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 745474 "removeStringFromSet"
	class_operation private explicit_return_type "String"
	nparams 4
	  param inout name "set" explicit_type "String"
	  param in name "string" explicit_type "String"
	  param inout name "lengths" explicit_type "int"
	  param in name "lenPos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 204802 "MalformedMimeTypeException"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 215170 // <generalisation>
	  relation 215170 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 215170 // <generalisation>
	    b parent class_ref 176130 // AndroidException
	end

	operation 745602 "MalformedMimeTypeException"
	  public explicit_return_type ""
	  nparams 0
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 745730 "MalformedMimeTypeException"
	  public explicit_return_type ""
	  nparams 1
	    param in name "name" explicit_type "String"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      operation 745858 "create"
	class_operation public return_type class_ref 201986 // IntentFilter
	nparams 2
	  param in name "action" explicit_type "String"
	  param in name "dataType" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new IntentFilter instance with a specified action and MIME
type, where you know the MIME type is correctly formatted.  This catches
the {@link MalformedMimeTypeException} exception that the constructor
can call and turns it into a runtime exception.

@param action The action to match, i.e. Intent.ACTION_VIEW.
@param dataType The type to match, i.e. \"vnd.android.cursor.dir/person\".

@return A new IntentFilter for the given action and type.

@see #IntentFilter(String, String)"
      end

      operation 745986 "IntentFilter"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New empty IntentFilter."
      end

      operation 746114 "IntentFilter"
	public explicit_return_type ""
	nparams 1
	  param in name "action" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New IntentFilter that matches a single action with no data.  If
no data characteristics are subsequently specified, then the
filter will only match intents that contain no data.

@param action The action to match, i.e. Intent.ACTION_MAIN."
      end

      operation 746242 "IntentFilter"
	public explicit_return_type ""
	nparams 2
	  param in name "action" explicit_type "String"
	  param in name "dataType" explicit_type "String"
	nexceptions 1
	  exception class_ref 204802 // MalformedMimeTypeException
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New IntentFilter that matches a single action and data type.

<p><em>Note: MIME type matching in the Android framework is
case-sensitive, unlike formal RFC MIME types.  As a result,
you should always write your MIME types with lower case letters,
and any MIME types you receive from outside of Android should be
converted to lower case before supplying them here.</em></p>

<p>Throws {@link MalformedMimeTypeException} if the given MIME type is
not syntactically correct.

@param action The action to match, i.e. Intent.ACTION_VIEW.
@param dataType The type to match, i.e. \"vnd.android.cursor.dir/person\".
"
      end

      operation 746370 "IntentFilter"
	public explicit_return_type ""
	nparams 1
	  param inout name "o" type class_ref 201986 // IntentFilter
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "New IntentFilter containing a copy of an existing filter.

@param o The original filter to copy."
      end

      operation 746498 "setPriority"
	public explicit_return_type "void"
	nparams 1
	  param in name "priority" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Modify priority of this filter.  The default priority is 0. Positive
values will be before the default, lower values will be after it.
Applications must use a value that is larger than
{@link #SYSTEM_LOW_PRIORITY} and smaller than
{@link #SYSTEM_HIGH_PRIORITY} .

@param priority The new priority value.

@see #getPriority
@see #SYSTEM_LOW_PRIORITY
@see #SYSTEM_HIGH_PRIORITY"
      end

      operation 746626 "getPriority"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the priority of this filter.

@return The priority of the filter.

@see #setPriority"
      end

      operation 746754 "addAction"
	public explicit_return_type "void"
	nparams 1
	  param in name "action" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent action to match against.  If any actions are included
in the filter, then an Intent's action must be one of those values for
it to match.  If no actions are included, the Intent action is ignored.

@param action Name of the action to match, i.e. Intent.ACTION_VIEW."
      end

      operation 746882 "countActions"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of actions in the filter."
      end

      operation 747010 "getAction"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an action in the filter."
      end

      operation 747138 "hasAction"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "action" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given action included in the filter?  Note that if the filter
does not include any actions, false will <em>always</em> be returned.

@param action The action to look for.

@return True if the action is explicitly mentioned in the filter."
      end

      operation 747266 "matchAction"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "action" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match this filter against an Intent's action.  If the filter does not
specify any actions, the match will always fail.

@param action The desired action to look for.

@return True if the action is listed in the filter."
      end

      operation 747394 "actionsIterator"
	public explicit_return_type "Iterator<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's actions.  If there are no actions,
returns null."
      end

      operation 747522 "addDataType"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "String"
	nexceptions 1
	  exception class_ref 204802 // MalformedMimeTypeException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data type to match against.  If any types are
included in the filter, then an Intent's data must be <em>either</em>
one of these types <em>or</em> a matching scheme.  If no data types
are included, then an Intent will only match if it specifies no data.

<p><em>Note: MIME type matching in the Android framework is
case-sensitive, unlike formal RFC MIME types.  As a result,
you should always write your MIME types with lower case letters,
and any MIME types you receive from outside of Android should be
converted to lower case before supplying them here.</em></p>

<p>Throws {@link MalformedMimeTypeException} if the given MIME type is
not syntactically correct.

@param type Name of the data type to match, i.e. \"vnd.android.cursor.dir/person\".

@see #matchData"
      end

      operation 747650 "hasDataType"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data type included in the filter?  Note that if the filter
does not include any type, false will <em>always</em> be returned.

@param type The data type to look for.

@return True if the type is explicitly mentioned in the filter."
      end

      operation 747778 "countDataTypes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data types in the filter."
      end

      operation 747906 "getDataType"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data type in the filter."
      end

      operation 748034 "typesIterator"
	public explicit_return_type "Iterator<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data types."
      end

      operation 748162 "addDataScheme"
	public explicit_return_type "void"
	nparams 1
	  param in name "scheme" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data scheme to match against.  If any schemes are
included in the filter, then an Intent's data must be <em>either</em>
one of these schemes <em>or</em> a matching data type.  If no schemes
are included, then an Intent will match only if it includes no data.

<p><em>Note: scheme matching in the Android framework is
case-sensitive, unlike formal RFC schemes.  As a result,
you should always write your schemes with lower case letters,
and any schemes you receive from outside of Android should be
converted to lower case before supplying them here.</em></p>

@param scheme Name of the scheme to match, i.e. \"http\".

@see #matchData"
      end

      operation 748290 "countDataSchemes"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data schemes in the filter."
      end

      operation 748418 "getDataScheme"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data scheme in the filter."
      end

      operation 748546 "hasDataScheme"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "scheme" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data scheme included in the filter?  Note that if the
filter does not include any scheme, false will <em>always</em> be
returned.

@param scheme The data scheme to look for.

@return True if the scheme is explicitly mentioned in the filter."
      end

      operation 748674 "schemesIterator"
	public explicit_return_type "Iterator<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data schemes."
      end

      operation 749570 "addDataSchemeSpecificPart"
	public explicit_return_type "void"
	nparams 2
	  param in name "ssp" explicit_type "String"
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data \"scheme specific part\" to match against.  The filter must
include one or more schemes (via {@link #addDataScheme}) for the
scheme specific part to be considered.  If any scheme specific parts are
included in the filter, then an Intent's data must match one of
them.  If no scheme specific parts are included, then only the scheme must match.

<p>The \"scheme specific part\" that this matches against is the string returned
by {@link android.net.Uri#getSchemeSpecificPart() Uri.getSchemeSpecificPart}.
For Uris that contain a path, this kind of matching is not generally of interest,
since {@link #addDataAuthority(String, String)} and
{@link #addDataPath(String, int)} can provide a better mechanism for matching
them.  However, for Uris that do not contain a path, the authority and path
are empty, so this is the only way to match against the non-scheme part.</p>

@param ssp Either a raw string that must exactly match the scheme specific part
path, or a simple pattern, depending on <var>type</var>.
@param type Determines how <var>ssp</var> will be compared to
determine a match: either {@link PatternMatcher#PATTERN_LITERAL},
{@link PatternMatcher#PATTERN_PREFIX}, or
{@link PatternMatcher#PATTERN_SIMPLE_GLOB}.

@see #matchData
@see #addDataScheme"
      end

      operation 749698 "addDataSchemeSpecificPart"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ssp" type class_ref 180866 // PatternMatcher
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 749826 "countDataSchemeSpecificParts"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data scheme specific parts in the filter."
      end

      operation 749954 "getDataSchemeSpecificPart"
	public return_type class_ref 180866 // PatternMatcher
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data scheme specific part in the filter."
      end

      operation 750082 "hasDataSchemeSpecificPart"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "data" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data scheme specific part included in the filter?  Note that if the
filter does not include any scheme specific parts, false will <em>always</em> be
returned.

@param data The scheme specific part that is being looked for.

@return Returns true if the data string matches a scheme specific part listed in the
        filter."
      end

      operation 750210 "schemeSpecificPartsIterator"
	public return_type class_ref 180866 // PatternMatcher
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data scheme specific parts."
      end

      operation 750338 "addDataAuthority"
	public explicit_return_type "void"
	nparams 2
	  param in name "host" explicit_type "String"
	  param in name "port" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data authority to match against.  The filter must
include one or more schemes (via {@link #addDataScheme}) for the
authority to be considered.  If any authorities are
included in the filter, then an Intent's data must match one of
them.  If no authorities are included, then only the scheme must match.

<p><em>Note: host name in the Android framework is
case-sensitive, unlike formal RFC host names.  As a result,
you should always write your host names with lower case letters,
and any host names you receive from outside of Android should be
converted to lower case before supplying them here.</em></p>

@param host The host part of the authority to match.  May start with a
            single '*' to wildcard the front of the host name.
@param port Optional port part of the authority to match.  If null, any
            port is allowed.

@see #matchData
@see #addDataScheme"
      end

      operation 750466 "addDataAuthority"
	public explicit_return_type "void"
	nparams 1
	  param inout name "ent" type class_ref 204674 // AuthorityEntry
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 750594 "countDataAuthorities"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data authorities in the filter."
      end

      operation 750722 "getDataAuthority"
	public return_type class_ref 204674 // AuthorityEntry
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data authority in the filter."
      end

      operation 750850 "hasDataAuthority"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "data" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data authority included in the filter?  Note that if the
filter does not include any authorities, false will <em>always</em> be
returned.

@param data The data whose authority is being looked for.

@return Returns true if the data string matches an authority listed in the
        filter."
      end

      operation 750978 "authoritiesIterator"
	public return_type class_ref 204674 // AuthorityEntry
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data authorities."
      end

      operation 751106 "addDataPath"
	public explicit_return_type "void"
	nparams 2
	  param in name "path" explicit_type "String"
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent data path to match against.  The filter must
include one or more schemes (via {@link #addDataScheme}) <em>and</em>
one or more authorities (via {@link #addDataAuthority}) for the
path to be considered.  If any paths are
included in the filter, then an Intent's data must match one of
them.  If no paths are included, then only the scheme/authority must
match.

<p>The path given here can either be a literal that must directly
match or match against a prefix, or it can be a simple globbing pattern.
If the latter, you can use '*' anywhere in the pattern to match zero
or more instances of the previous character, '.' as a wildcard to match
any character, and '\\' to escape the next character.

@param path Either a raw string that must exactly match the file
path, or a simple pattern, depending on <var>type</var>.
@param type Determines how <var>path</var> will be compared to
determine a match: either {@link PatternMatcher#PATTERN_LITERAL},
{@link PatternMatcher#PATTERN_PREFIX}, or
{@link PatternMatcher#PATTERN_SIMPLE_GLOB}.

@see #matchData
@see #addDataScheme
@see #addDataAuthority"
      end

      operation 751234 "addDataPath"
	public explicit_return_type "void"
	nparams 1
	  param inout name "path" type class_ref 180866 // PatternMatcher
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " @hide "
      end

      operation 751362 "countDataPaths"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of data paths in the filter."
      end

      operation 751490 "getDataPath"
	public return_type class_ref 180866 // PatternMatcher
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a data path in the filter."
      end

      operation 751618 "hasDataPath"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "data" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given data path included in the filter?  Note that if the
filter does not include any paths, false will <em>always</em> be
returned.

@param data The data path to look for.  This is without the scheme
            prefix.

@return True if the data string matches a path listed in the
        filter."
      end

      operation 751746 "pathsIterator"
	public return_type class_ref 180866 // PatternMatcher
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}Iterator<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's data paths."
      end

      operation 751874 "matchDataAuthority"
	public explicit_return_type "int"
	nparams 1
	  param inout name "data" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match this intent filter against the given Intent data.  This ignores
the data scheme -- unlike {@link #matchData}, the authority will match
regardless of whether there is a matching scheme.

@param data The data whose authority is being looked for.

@return Returns either {@link #MATCH_CATEGORY_HOST},
{@link #MATCH_CATEGORY_PORT}, {@link #NO_MATCH_DATA}."
      end

      operation 752002 "matchData"
	public explicit_return_type "int"
	nparams 3
	  param in name "type" explicit_type "String"
	  param in name "scheme" explicit_type "String"
	  param inout name "data" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match this filter against an Intent's data (type, scheme and path). If
the filter does not specify any types and does not specify any
schemes/paths, the match will only succeed if the intent does not
also specify a type or data.  If the filter does not specify any schemes,
it will implicitly match intents with no scheme, or the schemes \"content:\"
or \"file:\" (basically performing a MIME-type only match).  If the filter
does not specify any MIME types, the Intent also must not specify a MIME
type.

<p>Be aware that to match against an authority, you must also specify a base
scheme the authority is in.  To match against a data path, both a scheme
and authority must be specified.  If the filter does not specify any
types or schemes that it matches against, it is considered to be empty
(any authority or data path given is ignored, as if it were empty as
well).

<p><em>Note: MIME type, Uri scheme, and host name matching in the
Android framework is case-sensitive, unlike the formal RFC definitions.
As a result, you should always write these elements with lower case letters,
and normalize any MIME types or Uris you receive from
outside of Android to ensure these elements are lower case before
supplying them here.</em></p>

@param type The desired data type to look for, as returned by
            Intent.resolveType().
@param scheme The desired data scheme to look for, as returned by
              Intent.getScheme().
@param data The full data string to match against, as supplied in
            Intent.data.

@return Returns either a valid match constant (a combination of
{@link #MATCH_CATEGORY_MASK} and {@link #MATCH_ADJUSTMENT_MASK}),
or one of the error codes {@link #NO_MATCH_TYPE} if the type didn't match
or {@link #NO_MATCH_DATA} if the scheme/path didn't match.

@see #match"
      end

      operation 752130 "addCategory"
	public explicit_return_type "void"
	nparams 1
	  param in name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new Intent category to match against.  The semantics of
categories is the opposite of actions -- an Intent includes the
categories that it requires, all of which must be included in the
filter in order to match.  In other words, adding a category to the
filter has no impact on matching unless that category is specified in
the intent.

@param category Name of category to match, i.e. Intent.CATEGORY_EMBED."
      end

      operation 752258 "countCategories"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of categories in the filter."
      end

      operation 752386 "getCategory"
	public explicit_return_type "String"
	nparams 1
	  param in name "index" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return a category in the filter."
      end

      operation 752514 "hasCategory"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "category" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Is the given category included in the filter?

@param category The category that the filter supports.

@return True if the category is explicitly mentioned in the filter."
      end

      operation 752642 "categoriesIterator"
	public explicit_return_type "Iterator<String>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return an iterator over the filter's categories.

@return Iterator if this filter has categories or {@code null} if none."
      end

      operation 752770 "matchCategories"
	public explicit_return_type "String"
	nparams 1
	  param inout name "categories" explicit_type "Set<String>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Match this filter against an Intent's categories.  Each category in
the Intent must be specified by the filter; if any are not in the
filter, the match fails.

@param categories The categories included in the intent, as returned by
                  Intent.getCategories().

@return If all categories match (success), null; else the name of the
        first category that didn't match."
      end

      operation 752898 "match"
	public explicit_return_type "int"
	nparams 4
	  param inout name "resolver" type class_ref 193922 // ContentResolver
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "resolve" explicit_type "boolean"
	  param in name "logTag" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether this filter matches the given <var>intent</var>.

@param intent The Intent to compare against.
@param resolve If true, the intent's type will be resolved by calling
               Intent.resolveType(); otherwise a simple match against
               Intent.type will be performed.
@param logTag Tag to use in debugging messages.

@return Returns either a valid match constant (a combination of
{@link #MATCH_CATEGORY_MASK} and {@link #MATCH_ADJUSTMENT_MASK}),
or one of the error codes {@link #NO_MATCH_TYPE} if the type didn't match,
{@link #NO_MATCH_DATA} if the scheme/path didn't match,
{@link #NO_MATCH_ACTION if the action didn't match, or
{@link #NO_MATCH_CATEGORY} if one or more categories didn't match.

@return How well the filter matches.  Negative if it doesn't match,
        zero or positive positive value if it does with a higher
        value representing a better match.

@see #match(String, String, String, android.net.Uri , Set, String)"
      end

      operation 753026 "match"
	public explicit_return_type "int"
	nparams 6
	  param in name "action" explicit_type "String"
	  param in name "type" explicit_type "String"
	  param in name "scheme" explicit_type "String"
	  param inout name "data" type class_ref 145410 // Uri
	  param inout name "categories" explicit_type "Set<String>"
	  param in name "logTag" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Test whether this filter matches the given intent data.  A match is
only successful if the actions and categories in the Intent match
against the filter, as described in {@link IntentFilter}; in that case,
the match result returned will be as per {@link #matchData}.

@param action The intent action to match against (Intent.getAction).
@param type The intent type to match against (Intent.resolveType()).
@param scheme The data scheme to match against (Intent.getScheme()).
@param data The data URI to match against (Intent.getData()).
@param categories The categories to match against
                  (Intent.getCategories()).
@param logTag Tag to use in debugging messages.

@return Returns either a valid match constant (a combination of
{@link #MATCH_CATEGORY_MASK} and {@link #MATCH_ADJUSTMENT_MASK}),
or one of the error codes {@link #NO_MATCH_TYPE} if the type didn't match,
{@link #NO_MATCH_DATA} if the scheme/path didn't match,
{@link #NO_MATCH_ACTION if the action didn't match, or
{@link #NO_MATCH_CATEGORY} if one or more categories didn't match.

@see #matchData
@see Intent#getAction
@see Intent#resolveType
@see Intent#getScheme
@see Intent#getData
@see Intent#getCategories"
      end

      operation 753154 "writeToXml"
	public explicit_return_type "void"
	nparams 1
	  param inout name "serializer" explicit_type "XmlSerializer"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Write the contents of the IntentFilter as an XML stream."
      end

      operation 753282 "readFromXml"
	public explicit_return_type "void"
	nparams 1
	  param inout name "parser" explicit_type "XmlPullParser"
	nexceptions 2
	  explicit_exception "XmlPullParserException"
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 753410 "dump"
	public explicit_return_type "void"
	nparams 2
	  param inout name "du" explicit_type "Printer"
	  param in name "prefix" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 215298 // CREATOR (<unidirectional association>)
	relation 215298 --->
	  a role_name "CREATOR" init_value " new Parcelable.Creator<IntentFilter>() {
        public IntentFilter createFromParcel(Parcel source) {
            return new IntentFilter(source);
        }

        public IntentFilter[] newArray(int size) {
            return new IntentFilter[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<IntentFilter> ${name}${value};
"
	    classrelation_ref 215298 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 753538 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 753666 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 753794 "debugCheck"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "For debugging -- perform a check on the filter, return true if it passed
or false if it failed.

{@hide}"
      end

      operation 753922 "IntentFilter"
	private explicit_return_type ""
	nparams 1
	  param inout name "source" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 754050 "findMimeType"
	private explicit_return_type "boolean"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 202114 "ServiceConnection"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Interface for monitoring the state of an application service.  See
{@link android.app.Service} and
{@link Context#bindService Context.bindService()} for more information.
<p>Like many callbacks from the system, the methods on this class are called
from the main thread of your process."
      operation 764802 "onServiceConnected"
	public explicit_return_type "void"
	nparams 2
	  param inout name "name" type class_ref 196738 // ComponentName
	  param inout name "service" type class_ref 172674 // IBinder
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a connection to the Service has been established, with
the {@link android.os.IBinder} of the communication channel to the
Service.

@param name The concrete component name of the service that has
been connected.

@param service The IBinder of the Service's communication channel,
which you can now make calls on."
      end

      operation 764930 "onServiceDisconnected"
	public explicit_return_type "void"
	nparams 1
	  param inout name "name" type class_ref 196738 // ComponentName
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when a connection to the Service has been lost.  This typically
happens when the process hosting the service has crashed or been killed.
This does <em>not</em> remove the ServiceConnection itself -- this
binding to the service will remain active, and you will receive a call
to {@link #onServiceConnected} when the Service is next running.

@param name The concrete component name of the service whose
connection has been lost."
      end
    end

    class 202370 "ContextWrapper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Proxying implementation of Context that simply delegates all of its calls to
another Context.  Can be subclassed to modify behavior without changing
the original Context."
      classrelation 211202 // <generalisation>
	relation 211202 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 211202 // <generalisation>
	  b parent class_ref 192770 // Context
      end

      classrelation 211330 // mBase (<unidirectional association>)
	relation 211330 --->
	  a role_name "mBase" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 211330 // mBase (<unidirectional association>)
	  b parent class_ref 192770 // Context
      end

      operation 704514 "ContextWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "base" type class_ref 192770 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 704642 "attachBaseContext"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "base" type class_ref 192770 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the base context for this ContextWrapper.  All calls will then be
delegated to the base context.  Throws
IllegalStateException if a base context has already been set.

@param base The new base context for this wrapper."
      end

      operation 704770 "getBaseContext"
	public return_type class_ref 192770 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "@return the base context as set by the constructor or setBaseContext"
      end

      operation 704898 "getAssets"
	public return_type class_ref 200834 // AssetManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 705026 "getResources"
	public return_type class_ref 199298 // Resources
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 705154 "getPackageManager"
	public return_type class_ref 200962 // PackageManager
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 705282 "getContentResolver"
	public return_type class_ref 193922 // ContentResolver
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 705410 "getMainLooper"
	public return_type class_ref 168834 // Looper
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 705538 "getApplicationContext"
	public return_type class_ref 192770 // Context
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 705666 "setTheme"
	public explicit_return_type "void"
	nparams 1
	  param in name "resid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 705794 "getThemeResId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 705922 "getTheme"
	public return_type class_ref 201090 // Theme
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 706050 "getClassLoader"
	public explicit_return_type "ClassLoader"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 706178 "getPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 706306 "getBasePackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 706434 "getOpPackageName"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 706562 "getApplicationInfo"
	public return_type class_ref 201474 // ApplicationInfo
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 706690 "getPackageResourcePath"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 706818 "getPackageCodePath"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 706946 "getSharedPrefsFile"
	public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 707074 "getSharedPreferences"
	public return_type class_ref 201602 // SharedPreferences
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 707202 "openFileInput"
	public explicit_return_type "FileInputStream"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 707330 "openFileOutput"
	public explicit_return_type "FileOutputStream"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	nexceptions 1
	  explicit_exception "FileNotFoundException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 707458 "deleteFile"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 707586 "getFileStreamPath"
	public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 707714 "fileList"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 707842 "getFilesDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 707970 "getExternalFilesDir"
	public explicit_return_type "File"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 708098 "getExternalFilesDirs"
	public explicit_return_type "File"
	nparams 1
	  param in name "type" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 708226 "getObbDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 708354 "getObbDirs"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 708482 "getCacheDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 708610 "getExternalCacheDir"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 708738 "getExternalCacheDirs"
	public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 708866 "getDir"
	public explicit_return_type "File"
	nparams 2
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 708994 "openOrCreateDatabase"
	public explicit_return_type "SQLiteDatabase"
	nparams 3
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param inout name "factory" explicit_type "CursorFactory"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 709122 "openOrCreateDatabase"
	public explicit_return_type "SQLiteDatabase"
	nparams 4
	  param in name "name" explicit_type "String"
	  param in name "mode" explicit_type "int"
	  param inout name "factory" explicit_type "CursorFactory"
	  param inout name "errorHandler" explicit_type "DatabaseErrorHandler"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 709250 "deleteDatabase"
	public explicit_return_type "boolean"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 709378 "getDatabasePath"
	public explicit_return_type "File"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 709506 "databaseList"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 709634 "getWallpaper"
	public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 709762 "peekWallpaper"
	public explicit_return_type "Drawable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 709890 "getWallpaperDesiredMinimumWidth"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 710018 "getWallpaperDesiredMinimumHeight"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 710146 "setWallpaper"
	public explicit_return_type "void"
	nparams 1
	  param inout name "bitmap" explicit_type "Bitmap"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 710274 "setWallpaper"
	public explicit_return_type "void"
	nparams 1
	  param inout name "data" explicit_type "InputStream"
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 710402 "clearWallpaper"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "IOException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 710530 "startActivity"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 710658 "startActivityAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 710786 "startActivity"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "options" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 710914 "startActivityAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "options" type class_ref 174082 // Bundle
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 711042 "startActivities"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intents" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 711170 "startActivities"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intents" type class_ref 195458 // Intent
	  param inout name "options" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 711298 "startActivitiesAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intents" type class_ref 195458 // Intent
	  param inout name "options" type class_ref 174082 // Bundle
	  param inout name "userHandle" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 711426 "startIntentSender"
	public explicit_return_type "void"
	nparams 5
	  param inout name "intent" type class_ref 201730 // IntentSender
	  param inout name "fillInIntent" type class_ref 195458 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	nexceptions 1
	  exception class_ref 201858 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 711554 "startIntentSender"
	public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 201730 // IntentSender
	  param inout name "fillInIntent" type class_ref 195458 // Intent
	  param in name "flagsMask" explicit_type "int"
	  param in name "flagsValues" explicit_type "int"
	  param in name "extraFlags" explicit_type "int"
	  param inout name "options" type class_ref 174082 // Bundle
	nexceptions 1
	  exception class_ref 201858 // SendIntentException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 711682 "sendBroadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 711810 "sendBroadcast"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 711938 "sendBroadcast"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 712066 "sendOrderedBroadcast"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 712194 "sendOrderedBroadcast"
	public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 712322 "sendOrderedBroadcast"
	public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 195458 // Intent
	  param in name "receiverPermission" explicit_type "String"
	  param in name "appOp" explicit_type "int"
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 712450 "sendBroadcastAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 712578 "sendBroadcastAsUser"
	public explicit_return_type "void"
	nparams 3
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 712706 "sendOrderedBroadcastAsUser"
	public explicit_return_type "void"
	nparams 8
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	  param in name "receiverPermission" explicit_type "String"
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}, ${t7} ${p7}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 712834 "sendStickyBroadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 712962 "sendStickyOrderedBroadcast"
	public explicit_return_type "void"
	nparams 6
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 713090 "removeStickyBroadcast"
	public explicit_return_type "void"
	nparams 1
	  param inout name "intent" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 713218 "sendStickyBroadcastAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 713346 "sendStickyOrderedBroadcastAsUser"
	public explicit_return_type "void"
	nparams 7
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	  param inout name "resultReceiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "scheduler" type class_ref 168578 // Handler
	  param in name "initialCode" explicit_type "int"
	  param in name "initialData" explicit_type "String"
	  param inout name "initialExtras" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 713474 "removeStickyBroadcastAsUser"
	public explicit_return_type "void"
	nparams 2
	  param inout name "intent" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 713602 "registerReceiver"
	public return_type class_ref 195458 // Intent
	nparams 2
	  param inout name "receiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "filter" type class_ref 201986 // IntentFilter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 713730 "registerReceiver"
	public return_type class_ref 195458 // Intent
	nparams 4
	  param inout name "receiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "filter" type class_ref 201986 // IntentFilter
	  param in name "broadcastPermission" explicit_type "String"
	  param inout name "scheduler" type class_ref 168578 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 713858 "registerReceiverAsUser"
	public return_type class_ref 195458 // Intent
	nparams 5
	  param inout name "receiver" type class_ref 195202 // BroadcastReceiver
	  param inout name "user" type class_ref 173186 // UserHandle
	  param inout name "filter" type class_ref 201986 // IntentFilter
	  param in name "broadcastPermission" explicit_type "String"
	  param inout name "scheduler" type class_ref 168578 // Handler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 713986 "unregisterReceiver"
	public explicit_return_type "void"
	nparams 1
	  param inout name "receiver" type class_ref 195202 // BroadcastReceiver
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 714114 "startService"
	public return_type class_ref 196738 // ComponentName
	nparams 1
	  param inout name "service" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 714242 "stopService"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "name" type class_ref 195458 // Intent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 714370 "startServiceAsUser"
	public return_type class_ref 196738 // ComponentName
	nparams 2
	  param inout name "service" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 714498 "stopServiceAsUser"
	public explicit_return_type "boolean"
	nparams 2
	  param inout name "name" type class_ref 195458 // Intent
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 714626 "bindService"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "service" type class_ref 195458 // Intent
	  param inout name "conn" type class_ref 202114 // ServiceConnection
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 714754 "bindServiceAsUser"
	public explicit_return_type "boolean"
	nparams 4
	  param inout name "service" type class_ref 195458 // Intent
	  param inout name "conn" type class_ref 202114 // ServiceConnection
	  param in name "flags" explicit_type "int"
	  param inout name "user" type class_ref 173186 // UserHandle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 714882 "unbindService"
	public explicit_return_type "void"
	nparams 1
	  param inout name "conn" type class_ref 202114 // ServiceConnection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 715010 "startInstrumentation"
	public explicit_return_type "boolean"
	nparams 3
	  param inout name "className" type class_ref 196738 // ComponentName
	  param in name "profileFile" explicit_type "String"
	  param inout name "arguments" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 715138 "getSystemService"
	public explicit_return_type "Object"
	nparams 1
	  param in name "name" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 715266 "checkPermission"
	public explicit_return_type "int"
	nparams 3
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 715394 "checkCallingPermission"
	public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 715522 "checkCallingOrSelfPermission"
	public explicit_return_type "int"
	nparams 1
	  param in name "permission" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 715650 "enforcePermission"
	public explicit_return_type "void"
	nparams 4
	  param in name "permission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 715778 "enforceCallingPermission"
	public explicit_return_type "void"
	nparams 2
	  param in name "permission" explicit_type "String"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 715906 "enforceCallingOrSelfPermission"
	public explicit_return_type "void"
	nparams 2
	  param in name "permission" explicit_type "String"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 716034 "grantUriPermission"
	public explicit_return_type "void"
	nparams 3
	  param in name "toPackage" explicit_type "String"
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 716162 "revokeUriPermission"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 716290 "checkUriPermission"
	public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 716418 "checkCallingUriPermission"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 716546 "checkCallingOrSelfUriPermission"
	public explicit_return_type "int"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 716674 "checkUriPermission"
	public explicit_return_type "int"
	nparams 6
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 716802 "enforceUriPermission"
	public explicit_return_type "void"
	nparams 5
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 716930 "enforceCallingUriPermission"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 717058 "enforceCallingOrSelfUriPermission"
	public explicit_return_type "void"
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 717186 "enforceUriPermission"
	public explicit_return_type "void"
	nparams 7
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "readPermission" explicit_type "String"
	  param in name "writePermission" explicit_type "String"
	  param in name "pid" explicit_type "int"
	  param in name "uid" explicit_type "int"
	  param in name "modeFlags" explicit_type "int"
	  param in name "message" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}, ${t6} ${p6}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 717314 "createPackageContext"
	public return_type class_ref 192770 // Context
	nparams 2
	  param in name "packageName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	nexceptions 1
	  exception class_ref 202242 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 717442 "createPackageContextAsUser"
	public return_type class_ref 192770 // Context
	nparams 3
	  param in name "packageName" explicit_type "String"
	  param in name "flags" explicit_type "int"
	  param inout name "user" type class_ref 173186 // UserHandle
	nexceptions 1
	  exception class_ref 202242 // NameNotFoundException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 717570 "getUserId"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end

      operation 717698 "createConfigurationContext"
	public return_type class_ref 192770 // Context
	nparams 1
	  param inout name "overrideConfiguration" type class_ref 196482 // Configuration
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 717826 "createDisplayContext"
	public return_type class_ref 192770 // Context
	nparams 1
	  param inout name "display" explicit_type "Display"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 717954 "isRestricted"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 718082 "getDisplayAdjustments"
	public explicit_return_type "DisplayAdjustments"
	nparams 1
	  param in name "displayId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " @hide "
      end
    end

    class 202498 "CursorEntityIterator"
      abstract visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Abstract implementation of EntityIterator that makes it easy to wrap a cursor
that can contain several consecutive rows for an entity.
@hide"
      classrelation 211586 // <realization>
	relation 211586 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 211586 // <realization>
	  b parent class_ref 202626 // EntityIterator
      end

      attribute 448130 "mCursor"
	const_attribute private explicit_type "Cursor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 448258 "mIsClosed"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 718466 "CursorEntityIterator"
	public explicit_return_type ""
	nparams 1
	  param inout name "cursor" explicit_type "Cursor"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor that makes initializes the cursor such that the iterator points to the
first Entity, if there are any.
@param cursor the cursor that contains the rows that make up the entities"
      end

      operation 718594 "getEntityAndIncrementCursor"
	abstract public return_type class_ref 202754 // Entity
	nparams 1
	  param inout name "cursor" explicit_type "Cursor"
	nexceptions 1
	  exception class_ref 172802 // RemoteException
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the entity that the cursor is currently pointing to. This must take care to advance
the cursor past this entity. This will never be called if the cursor is at the end.
@param cursor the cursor that contains the entity rows
@return the entity that the cursor is currently pointing to
@throws RemoteException if a RemoteException is caught while attempting to build the Entity"
      end

      operation 718722 "hasNext"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns whether there are more elements to iterate, i.e. whether the
iterator is positioned in front of an element.

@return {@code true} if there are more elements, {@code false} otherwise.
@see EntityIterator#next()"
      end

      operation 718850 "next"
	public return_type class_ref 202754 // Entity
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the next object in the iteration, i.e. returns the element in
front of the iterator and advances the iterator by one position.

@return the next object.
@throws java.util.NoSuchElementException
            if there are no more elements.
@see EntityIterator#hasNext()"
      end

      operation 718978 "remove"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 719106 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 719234 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent final java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that this iterator is no longer needed and that any associated resources
may be released (such as a SQLite cursor)."
      end
    end

    class 202626 "EntityIterator"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A specialization of {@link Iterator} that allows iterating over a collection of
{@link Entity} objects. In addition to the iteration functionality it also allows
resetting the iterator back to the beginning and provides for an explicit {@link #close()}
method to indicate that the iterator is no longer needed and that its resources
can be released."
      classrelation 211458 // <realization>
	relation 211458 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}<Entity>"
	    classrelation_ref 211458 // <realization>
	  b parent class_ref 202882 // Iterator
      end

      operation 718210 "reset"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset the iterator back to the beginning."
      end

      operation 718338 "close"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Indicates that this iterator is no longer needed and that any associated resources
may be released (such as a SQLite cursor)."
      end
    end

    class 202754 "Entity"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A representation of a item using ContentValues. It contains one top level ContentValue
plus a collection of Uri, ContentValues tuples as subvalues. One example of its use
is in Contacts, where the top level ContentValue contains the columns from the RawContacts
table and the subvalues contain a ContentValues object for each row from the Data table that
corresponds to that RawContact. The uri refers to the Data table uri for each row."
      classrelation 212738 // mValues (<unidirectional association>)
	relation 212738 --->
	  a role_name "mValues" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 212738 // mValues (<unidirectional association>)
	  b parent class_ref 194178 // ContentValues
      end

      class 204162 "NamedContentValues"
	visibility public 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 212994 // uri (<unidirectional association>)
	  relation 212994 --->
	    a role_name "uri" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 212994 // uri (<unidirectional association>)
	    b parent class_ref 145410 // Uri
	end

	classrelation 213122 // values (<unidirectional association>)
	  relation 213122 --->
	    a role_name "values" const_relation public
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 213122 // values (<unidirectional association>)
	    b parent class_ref 194178 // ContentValues
	end

	operation 725378 "NamedContentValues"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "uri" type class_ref 145410 // Uri
	    param inout name "values" type class_ref 194178 // ContentValues
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 212866 // mSubValues (<unidirectional association>)
	relation 212866 --->
	  stereotype "ArrayList"
	  a role_name "mSubValues" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 212866 // mSubValues (<unidirectional association>)
	  b parent class_ref 204162 // NamedContentValues
      end

      operation 724866 "Entity"
	public explicit_return_type ""
	nparams 1
	  param inout name "values" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 724994 "getEntityValues"
	public return_type class_ref 194178 // ContentValues
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 725122 "getSubValues"
	public return_type class_ref 204162 // NamedContentValues
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}ArrayList<${type}> ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 725250 "addSubValue"
	public explicit_return_type "void"
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 725506 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 203010 "CursorLoader"
      visibility public 
      nactuals 1
      actual class class_ref 194434 // AsyncTaskLoader
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A loader that queries the {@link ContentResolver} and returns a {@link Cursor}.
This class implements the {@link Loader} protocol in a standard way for
querying cursors, building on {@link AsyncTaskLoader} to perform the cursor
query on a background thread so that it does not block the application's UI.

<p>A CursorLoader must be built with the full information for the query to
perform, either through the
{@link #CursorLoader(Context, Uri, String[], String, String[], String)} or
creating an empty instance with {@link #CursorLoader(Context)} and filling
in the desired paramters with {@link #setUri(Uri)}, {@link #setSelection(String)},
{@link #setSelectionArgs(String[])}, {@link #setSortOrder(String)},
and {@link #setProjection(String[])}."
      classrelation 211714 // <realization>
	relation 211714 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 211714 // <realization>
	  b parent class_ref 194434 // AsyncTaskLoader
      end

      classrelation 211842 // mObserver (<unidirectional association>)
	relation 211842 --->
	  a role_name "mObserver" const_relation package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 211842 // mObserver (<unidirectional association>)
	  b parent class_ref 194946 // ForceLoadContentObserver
      end

      classrelation 211970 // mUri (<unidirectional association>)
	relation 211970 --->
	  a role_name "mUri" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 211970 // mUri (<unidirectional association>)
	  b parent class_ref 145410 // Uri
      end

      attribute 448386 "mProjection"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 448514 "mSelection"
	package explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 448642 "mSelectionArgs"
	package explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 448770 "mSortOrder"
	package explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 448898 "mCursor"
	package explicit_type "Cursor"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 212098 // mCancellationSignal (<unidirectional association>)
	relation 212098 --->
	  a role_name "mCancellationSignal" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 212098 // mCancellationSignal (<unidirectional association>)
	  b parent class_ref 174338 // CancellationSignal
      end

      operation 719362 "loadInBackground"
	public explicit_return_type "Cursor"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Runs on a worker thread "
      end

      operation 719490 "cancelLoadInBackground"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 719618 "deliverResult"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursor" explicit_type "Cursor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment " Runs on the UI thread "
      end

      operation 719746 "CursorLoader"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 192770 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates an empty unspecified CursorLoader.  You must follow this with
calls to {@link #setUri(Uri)}, {@link #setSelection(String)}, etc
to specify the query to perform."
      end

      operation 719874 "CursorLoader"
	public explicit_return_type ""
	nparams 6
	  param inout name "context" type class_ref 192770 // Context
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}, ${t3} ${p3}, ${t4}[] ${p4}, ${t5} ${p5}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates a fully-specified CursorLoader.  See
{@link ContentResolver#query(Uri, String[], String, String[], String)
ContentResolver.query()} for documentation on the meaning of the
parameters.  These will be passed as-is to that call."
      end

      operation 720002 "onStartLoading"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Starts an asynchronous load of the contacts list data. When the result is ready the callbacks
will be called on the UI thread. If a previous load has been completed and is still valid
the result may be passed to the callbacks immediately.

Must be called from the UI thread"
      end

      operation 720130 "onStopLoading"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "Must be called from the UI thread"
      end

      operation 720258 "onCanceled"
	public explicit_return_type "void"
	nparams 1
	  param inout name "cursor" explicit_type "Cursor"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 720386 "onReset"
	protected explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 720514 "getUri"
	public return_type class_ref 145410 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 720642 "setUri"
	public explicit_return_type "void"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 720770 "getProjection"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 720898 "setProjection"
	public explicit_return_type "void"
	nparams 1
	  param inout name "projection" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 721026 "getSelection"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 721154 "setSelection"
	public explicit_return_type "void"
	nparams 1
	  param in name "selection" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 721282 "getSelectionArgs"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 721410 "setSelectionArgs"
	public explicit_return_type "void"
	nparams 1
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 721538 "getSortOrder"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 721666 "setSortOrder"
	public explicit_return_type "void"
	nparams 1
	  param in name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 721794 "dump"
	public explicit_return_type "void"
	nparams 4
	  param in name "prefix" explicit_type "String"
	  param inout name "fd" explicit_type "FileDescriptor"
	  param inout name "writer" explicit_type "PrintWriter"
	  param inout name "args" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 203138 "DefaultDataHandler"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Inserts default data from InputStream, should be in XML format.
If the provider syncs data to the server, the imported data will be synced to the server.
<p>Samples:</p>
<br/>
 Insert one row:
<pre>
&lt;row uri=\"content://contacts/people\">
 &lt;Col column = \"name\" value = \"foo feebe \"/>
 &lt;Col column = \"addr\" value = \"Tx\"/>
&lt;/row></pre>
<br/>
Delete, it must be in order of uri, select, and arg:
<pre>
&lt;del uri=\"content://contacts/people\" select=\"name=? and addr=?\" 
 arg1 = \"foo feebe\" arg2 =\"Tx\"/></pre>
<br/>
 Use first row's uri to insert into another table,
 content://contacts/people/1/phones:
<pre>
&lt;row uri=\"content://contacts/people\">
 &lt;col column = \"name\" value = \"foo feebe\"/>
 &lt;col column = \"addr\" value = \"Tx\"/>
 &lt;row postfix=\"phones\">
   &lt;col column=\"number\" value=\"512-514-6535\"/>
 &lt;/row>
 &lt;row postfix=\"phones\">
   &lt;col column=\"cell\" value=\"512-514-6535\"/>
 &lt;/row>  
&lt;/row></pre>
<br/>
 Insert multiple rows in to same table and same attributes:
<pre>
&lt;row uri=\"content://contacts/people\" >
 &lt;row>
  &lt;col column= \"name\" value = \"foo feebe\"/>
  &lt;col column= \"addr\" value = \"Tx\"/>
 &lt;/row>
 &lt;row>
 &lt;/row>
&lt;/row></pre>

@hide"
      classrelation 212226 // <realization>
	relation 212226 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 212226 // <realization>
	  b parent class_ref 196866 // ContentInsertHandler
      end

      attribute 449026 "ROW"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"row\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 449154 "COL"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"col\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 449282 "URI_STR"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"uri\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 449410 "POSTFIX"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"postfix\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 449538 "DEL"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"del\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 449666 "SELECT"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"select\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 449794 "ARG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"arg\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 212354 // mUris (<unidirectional association>)
	relation 212354 --->
	  stereotype "Stack"
	  a role_name "mUris" init_value " new Stack<Uri>()" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 212354 // mUris (<unidirectional association>)
	  b parent class_ref 145410 // Uri
      end

      classrelation 212482 // mValues (<unidirectional association>)
	relation 212482 --->
	  a role_name "mValues" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 212482 // mValues (<unidirectional association>)
	  b parent class_ref 194178 // ContentValues
      end

      classrelation 212610 // mContentResolver (<unidirectional association>)
	relation 212610 --->
	  a role_name "mContentResolver" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 212610 // mContentResolver (<unidirectional association>)
	  b parent class_ref 193922 // ContentResolver
      end

      operation 721922 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "contentResolver" type class_ref 193922 // ContentResolver
	  param inout name "in" explicit_type "InputStream"
	nexceptions 2
	  explicit_exception "IOException"
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 722050 "insert"
	public explicit_return_type "void"
	nparams 2
	  param inout name "contentResolver" type class_ref 193922 // ContentResolver
	  param in name "in" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 722178 "parseRow"
	private explicit_return_type "void"
	nparams 1
	  param inout name "atts" explicit_type "Attributes"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 722306 "insertRow"
	private return_type class_ref 145410 // Uri
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 722434 "startElement"
	public explicit_return_type "void"
	nparams 4
	  param in name "uri" explicit_type "String"
	  param in name "localName" explicit_type "String"
	  param in name "name" explicit_type "String"
	  param inout name "atts" explicit_type "Attributes"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 722562 "endElement"
	public explicit_return_type "void"
	nparams 3
	  param in name "uri" explicit_type "String"
	  param in name "localName" explicit_type "String"
	  param in name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 722690 "characters"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 722818 "endDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 722946 "endPrefixMapping"
	public explicit_return_type "void"
	nparams 1
	  param in name "prefix" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 723074 "ignorableWhitespace"
	public explicit_return_type "void"
	nparams 3
	  param inout name "ch" explicit_type "char"
	  param in name "start" explicit_type "int"
	  param in name "length" explicit_type "int"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 723202 "processingInstruction"
	public explicit_return_type "void"
	nparams 2
	  param in name "target" explicit_type "String"
	  param in name "data" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 723330 "setDocumentLocator"
	public explicit_return_type "void"
	nparams 1
	  param inout name "locator" explicit_type "Locator"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 723458 "skippedEntity"
	public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 723586 "startDocument"
	public explicit_return_type "void"
	nparams 0
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 723714 "startPrefixMapping"
	public explicit_return_type "void"
	nparams 2
	  param in name "prefix" explicit_type "String"
	  param in name "uri" explicit_type "String"
	nexceptions 1
	  explicit_exception "SAXException"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 203266 "DialogInterface"
      visibility public stereotype "interface"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      attribute 449922 "BUTTON_POSITIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier for the positive button.
"
      end

      attribute 450050 "BUTTON_NEGATIVE"
	class_attribute const_attribute public explicit_type "int"
	init_value " -2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier for the negative button. 
"
      end

      attribute 450178 "BUTTON_NEUTRAL"
	class_attribute const_attribute public explicit_type "int"
	init_value " -3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The identifier for the neutral button. 
"
      end

      attribute 450306 "BUTTON1"
	class_attribute const_attribute public explicit_type "int"
	init_value " BUTTON_POSITIVE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use {@link #BUTTON_POSITIVE}
"
      end

      attribute 450434 "BUTTON2"
	class_attribute const_attribute public explicit_type "int"
	init_value " BUTTON_NEGATIVE"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use {@link #BUTTON_NEGATIVE}
"
      end

      attribute 450562 "BUTTON3"
	class_attribute const_attribute public explicit_type "int"
	init_value " BUTTON_NEUTRAL"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	java_annotation "@Deprecated
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "@deprecated Use {@link #BUTTON_NEUTRAL}
"
      end

      operation 723842 "cancel"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 723970 "dismiss"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      class 203394 "OnCancelListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 724098 "onCancel"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dialog" type class_ref 203266 // DialogInterface
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when the dialog is canceled.

@param dialog The dialog that was canceled will be passed into the
           method."
	end
      end

      class 203522 "OnDismissListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 724226 "onDismiss"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dialog" type class_ref 203266 // DialogInterface
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when the dialog is dismissed.

@param dialog The dialog that was dismissed will be passed into the
           method."
	end
      end

      class 203650 "OnShowListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 724354 "onShow"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "dialog" type class_ref 203266 // DialogInterface
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when the dialog is shown.

@param dialog The dialog that was shown will be passed into the
           method."
	end
      end

      class 203778 "OnClickListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 724482 "onClick"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "dialog" type class_ref 203266 // DialogInterface
	    param in name "which" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when a button in the dialog is clicked.

@param dialog The dialog that received the click.
@param which The button that was clicked (e.g.
           {@link DialogInterface#BUTTON1}) or the position
           of the item clicked.

 TODO: Change to use BUTTON_POSITIVE after API council "
	end
      end

      class 203906 "OnMultiChoiceClickListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 724610 "onClick"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "dialog" type class_ref 203266 // DialogInterface
	    param in name "which" explicit_type "int"
	    param inout name "isChecked" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "This method will be invoked when an item in the dialog is clicked.

@param dialog The dialog where the selection was made.
@param which The position of the item in the list that was clicked.
@param isChecked True if the click checked the item, else false."
	end
      end

      class 204034 "OnKeyListener"
	visibility public stereotype "interface"
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}interface ${name}${extends} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	operation 724738 "onKey"
	  public explicit_return_type "boolean"
	  nparams 3
	    param inout name "dialog" type class_ref 203266 // DialogInterface
	    param in name "keyCode" explicit_type "int"
	    param inout name "event" explicit_type "KeyEvent"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	  comment "Called when a key is dispatched to a dialog. This allows listeners to
get a chance to respond before the dialog.

@param dialog The dialog the key has been dispatched to.
@param keyCode The code for the physical key that was pressed
@param event The KeyEvent object containing full information about
           the event.
@return True if the listener has consumed the event, false otherwise."
	end
      end
    end

    class 205314 "MutableContextWrapper"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Special version of {@link ContextWrapper} that allows the base context to
be modified after it is initially set."
      classrelation 216706 // <generalisation>
	relation 216706 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 216706 // <generalisation>
	  b parent class_ref 202370 // ContextWrapper
      end

      operation 757122 "MutableContextWrapper"
	public explicit_return_type ""
	nparams 1
	  param inout name "base" type class_ref 192770 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 757250 "setBaseContext"
	public explicit_return_type "void"
	nparams 1
	  param inout name "base" type class_ref 192770 // Context
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Change the base context for this ContextWrapper. All calls will then be
delegated to the base context.  Unlike ContextWrapper, the base context
can be changed even after one is already set.

@param base The new base context for this wrapper."
      end
    end

    class 205442 "ReceiverCallNotAllowedException"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This exception is thrown from {@link Context#registerReceiver} and
{@link Context#bindService} when these methods are being used from
an {@link BroadcastReceiver} component.  In this case, the component will no
longer be active upon returning from receiving the Intent, so it is
not valid to use asynchronous APIs."
      classrelation 217346 // <generalisation>
	relation 217346 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 217346 // <generalisation>
	  b parent class_ref 169730 // AndroidRuntimeException
      end

      operation 759426 "ReceiverCallNotAllowedException"
	public explicit_return_type ""
	nparams 1
	  param in name "msg" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 205570 "RestrictionEntry"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Applications can expose restrictions for a restricted user on a
multiuser device. The administrator can configure these restrictions that will then be
applied to the restricted user. Each RestrictionsEntry is one configurable restriction.
<p/>
Any application that chooses to expose such restrictions does so by implementing a
receiver that handles the {@link Intent#ACTION_GET_RESTRICTION_ENTRIES} action.
The receiver then returns a result bundle that contains an entry called \"restrictions\", whose
value is an ArrayList<RestrictionsEntry>."
      classrelation 217474 // <realization>
	relation 217474 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 217474 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 492930 "TYPE_NULL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A type of restriction. Use this type for information that needs to be transferred across
but shouldn't be presented to the user in the UI. Stores a single String value.
"
      end

      attribute 493058 "TYPE_BOOLEAN"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A type of restriction. Use this for storing a boolean value, typically presented as
a checkbox in the UI.
"
      end

      attribute 493186 "TYPE_CHOICE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A type of restriction. Use this for storing a string value, typically presented as
a single-select list. Call {@link #setChoiceEntries(String[])} and
{@link #setChoiceValues(String[])} to set the localized list entries to present to the user
and the corresponding values, respectively.
"
      end

      attribute 493314 "TYPE_CHOICE_LEVEL"
	class_attribute const_attribute public explicit_type "int"
	init_value " 3"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A type of restriction. Use this for storing a string value, typically presented as
a single-select list. Call {@link #setChoiceEntries(String[])} and
{@link #setChoiceValues(String[])} to set the localized list entries to present to the user
and the corresponding values, respectively.
The presentation could imply that values in lower array indices are included when a
particular value is chosen.
@hide
"
      end

      attribute 493442 "TYPE_MULTI_SELECT"
	class_attribute const_attribute public explicit_type "int"
	init_value " 4"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "A type of restriction. Use this for presenting a multi-select list where more than one
entry can be selected, such as for choosing specific titles to white-list.
Call {@link #setChoiceEntries(String[])} and
{@link #setChoiceValues(String[])} to set the localized list entries to present to the user
and the corresponding values, respectively.
Use {@link #getAllSelectedStrings()} and {@link #setAllSelectedStrings(String[])} to
manipulate the selections.
"
      end

      attribute 493570 "type"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The type of restriction. "
      end

      attribute 493698 "key"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The unique key that identifies the restriction. "
      end

      attribute 493826 "title"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The user-visible title of the restriction. "
      end

      attribute 493954 "description"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The user-visible secondary description of the restriction. "
      end

      attribute 494082 "choices"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The user-visible set of choices used for single-select and multi-select lists. "
      end

      attribute 494210 "values"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The values corresponding to the user-visible choices. The value(s) of this entry will
one or more of these, returned by {@link #getAllSelectedStrings()} and
{@link #getSelectedString()}.
"
      end

      attribute 494338 "currentValue"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " The chosen value, whose content depends on the type of the restriction. "
      end

      attribute 494466 "currentValues"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " List of selected choices in the multi-select case. "
      end

      operation 759554 "RestrictionEntry"
	public explicit_return_type ""
	nparams 2
	  param in name "key" explicit_type "String"
	  param in name "selectedString" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for {@link #TYPE_CHOICE} type.
@param key the unique key for this restriction
@param selectedString the current value"
      end

      operation 759682 "RestrictionEntry"
	public explicit_return_type ""
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "selectedState" explicit_type "boolean"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for {@link #TYPE_BOOLEAN} type.
@param key the unique key for this restriction
@param selectedState whether this restriction is selected or not"
      end

      operation 759810 "RestrictionEntry"
	public explicit_return_type ""
	nparams 2
	  param in name "key" explicit_type "String"
	  param inout name "selectedStrings" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Constructor for {@link #TYPE_MULTI_SELECT} type.
@param key the unique key for this restriction
@param selectedStrings the list of values that are currently selected"
      end

      operation 759938 "setType"
	public explicit_return_type "void"
	nparams 1
	  param in name "type" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the type for this restriction.
@param type the type for this restriction."
      end

      operation 760066 "getType"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the type for this restriction.
@return the type for this restriction"
      end

      operation 760194 "getSelectedString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the currently selected string value.
@return the currently selected value, which can be null for types that aren't for holding
single string values."
      end

      operation 760322 "getAllSelectedStrings"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of currently selected values.
@return the list of current selections, if type is {@link #TYPE_MULTI_SELECT},
 null otherwise."
      end

      operation 760450 "getSelectedState"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the current selected state for an entry of type {@link #TYPE_BOOLEAN}.
@return the current selected state of the entry."
      end

      operation 760578 "setSelectedString"
	public explicit_return_type "void"
	nparams 1
	  param in name "selectedString" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the string value to use as the selected value for this restriction. This value will
be persisted by the system for later use by the application.
@param selectedString the string value to select."
      end

      operation 760706 "setSelectedState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" explicit_type "boolean"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current selected state for an entry of type {@link #TYPE_BOOLEAN}. This value will
be persisted by the system for later use by the application.
@param state the current selected state"
      end

      operation 760834 "setAllSelectedStrings"
	public explicit_return_type "void"
	nparams 1
	  param inout name "allSelectedStrings" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the current list of selected values for an entry of type {@link #TYPE_MULTI_SELECT}.
These values will be persisted by the system for later use by the application.
@param allSelectedStrings the current list of selected values."
      end

      operation 760962 "setChoiceValues"
	public explicit_return_type "void"
	nparams 1
	  param inout name "choiceValues" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a list of string values that can be selected by the user. If no user-visible entries
are set by a call to {@link #setChoiceEntries(String[])}, these values will be the ones
shown to the user. Values will be chosen from this list as the user's selection and the
selected values can be retrieved by a call to {@link #getAllSelectedStrings()}, or
{@link #getSelectedString()}, depending on whether it is a multi-select type or choice type.
This method is not relevant for types other than
{@link #TYPE_CHOICE}, and {@link #TYPE_MULTI_SELECT}.
@param choiceValues an array of Strings which will be the selected values for the user's
selections.
@see #getChoiceValues()
@see #getAllSelectedStrings()"
      end

      operation 761090 "setChoiceValues"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 192770 // Context
	  param in name "stringArrayResId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a list of string values that can be selected by the user, similar to
{@link #setChoiceValues(String[])}.
@param context the application context for retrieving the resources.
@param stringArrayResId the resource id for a string array containing the possible values.
@see #setChoiceValues(String[])"
      end

      operation 761218 "getChoiceValues"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of possible string values set earlier.
@return the list of possible values."
      end

      operation 761346 "setChoiceEntries"
	public explicit_return_type "void"
	nparams 1
	  param inout name "choiceEntries" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets a list of strings that will be presented as choices to the user. When the
user selects one or more of these choices, the corresponding value from the possible values
are stored as the selected strings. The size of this array must match the size of the array
set in {@link #setChoiceValues(String[])}. This method is not relevant for types other
than {@link #TYPE_CHOICE}, and {@link #TYPE_MULTI_SELECT}.
@param choiceEntries the list of user-visible choices.
@see #setChoiceValues(String[])"
      end

      operation 761474 "setChoiceEntries"
	public explicit_return_type "void"
	nparams 2
	  param inout name "context" type class_ref 192770 // Context
	  param in name "stringArrayResId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Sets a list of strings that will be presented as choices to the user. This is similar to
{@link #setChoiceEntries(String[])}.
@param context the application context, used for retrieving the resources.
@param stringArrayResId the resource id of a string array containing the possible entries."
      end

      operation 761602 "getChoiceEntries"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the list of strings, set earlier, that will be presented as choices to the user.
@return the list of choices presented to the user."
      end

      operation 761730 "getDescription"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the provided user-visible description of the entry, if any.
@return the user-visible description, null if none was set earlier."
      end

      operation 761858 "setDescription"
	public explicit_return_type "void"
	nparams 1
	  param in name "description" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the user-visible description of the entry, as a possible sub-text for the title.
You can use this to describe the entry in more detail or to display the current state of
the restriction.
@param description the user-visible description string."
      end

      operation 761986 "getKey"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "This is the unique key for the restriction entry.
@return the key for the restriction."
      end

      operation 762114 "getTitle"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns the user-visible title for the entry, if any.
@return the user-visible title for the entry, null if none was set earlier."
      end

      operation 762242 "setTitle"
	public explicit_return_type "void"
	nparams 1
	  param in name "title" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Sets the user-visible title for the entry.
@param title the user-visible title for the entry."
      end

      operation 762370 "equalArrays"
	private explicit_return_type "boolean"
	nparams 2
	  param inout name "one" explicit_type "String"
	  param inout name "other" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 762498 "equals"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "o" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 762626 "hashCode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 762754 "readArray"
	private explicit_return_type "String"
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}[] ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 762882 "RestrictionEntry"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 763010 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 763138 "writeArray"
	private explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param inout name "values" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 763266 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      classrelation 217602 // CREATOR (<unidirectional association>)
	relation 217602 --->
	  a role_name "CREATOR" init_value " new Creator<RestrictionEntry>() {
        public RestrictionEntry createFromParcel(Parcel source) {
            return new RestrictionEntry(source);
        }

        public RestrictionEntry[] newArray(int size) {
            return new RestrictionEntry[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<RestrictionEntry> ${name}${value};
"
	    classrelation_ref 217602 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end

      operation 763394 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end
    end

    class 205698 "SearchRecentSuggestionsProvider"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "This superclass can be used to create a simple search suggestions provider for your application.
It creates suggestions (as the user types) based on recent queries and/or recent views.

<p>In order to use this class, you must do the following.

<ul>
<li>Implement and test query search, as described in {@link android.app.SearchManager}.  (This
provider will send any suggested queries via the standard 
{@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} Intent, which you'll already
support once you have implemented and tested basic searchability.)</li>
<li>Create a Content Provider within your application by extending 
{@link android.content.SearchRecentSuggestionsProvider}.  The class you create will be
very simple - typically, it will have only a constructor.  But the constructor has a very 
important responsibility:  When it calls {@link #setupSuggestions(String, int)}, it
<i>configures</i> the provider to match the requirements of your searchable activity.</li>
<li>Create a manifest entry describing your provider.  Typically this would be as simple
as adding the following lines:
<pre class=\"prettyprint\">
    &lt;!-- Content provider for search suggestions --&gt;
    &lt;provider android:name=\"YourSuggestionProviderClass\"
              android:authorities=\"your.suggestion.authority\" /&gt;</pre>
</li>
<li>Please note that you <i>do not</i> instantiate this content provider directly from within
your code.  This is done automatically by the system Content Resolver, when the search dialog
looks for suggestions.</li>
<li>In order for the Content Resolver to do this, you must update your searchable activity's 
XML configuration file with information about your content provider.  The following additions 
are usually sufficient:
<pre class=\"prettyprint\">
    android:searchSuggestAuthority=\"your.suggestion.authority\"
    android:searchSuggestSelection=\" ? \"</pre>
</li>
<li>In your searchable activities, capture any user-generated queries and record them
for future searches by calling {@link android.provider.SearchRecentSuggestions#saveRecentQuery
SearchRecentSuggestions.saveRecentQuery()}.</li>
</ul>

<div class=\"special reference\">
<h3>Developer Guides</h3>
<p>For information about using search suggestions in your application, read the
<a href=\"{@docRoot}guide/topics/search/index.html\">Search</a> developer guide.</p>
</div>

@see android.provider.SearchRecentSuggestions"
      classrelation 217730 // <generalisation>
	relation 217730 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 217730 // <generalisation>
	  b parent class_ref 197122 // ContentProvider
      end

      attribute 494594 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"SuggestionsProvider\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " debugging support"
      end

      attribute 494722 "mAuthority"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " client-provided configuration values"
      end

      attribute 494850 "mMode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 494978 "mTwoLineDisplay"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 495106 "mOpenHelper"
	private explicit_type "SQLiteOpenHelper"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " general database configuration and tables"
      end

      attribute 495234 "sDatabaseName"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"suggestions.db\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 495362 "sSuggestions"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"suggestions\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 495490 "ORDER_BY"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"date DESC\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 495618 "NULL_COLUMN"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"query\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 495746 "DATABASE_VERSION"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2 * 256"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Table of database versions.  Don't forget to update!
 NOTE:  These version values are shifted left 8 bits (x 256) in order to create space for
 a small set of mode bitflags in the version int.

 1      original implementation with queries, and 1 or 2 display columns
 1->2   added UNIQUE constraint to display1 column"
      end

      attribute 495874 "DATABASE_MODE_QUERIES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode bit configures the database to record recent queries.  <i>required</i>

@see #setupSuggestions(String, int)
"
      end

      attribute 496002 "DATABASE_MODE_2LINES"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "This mode bit configures the database to include a 2nd annotation line with each entry.
<i>optional</i>

@see #setupSuggestions(String, int)
"
      end

      attribute 496130 "URI_MATCH_SUGGEST"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " Uri and query support"
      end

      classrelation 217858 // mSuggestionsUri (<unidirectional association>)
	relation 217858 --->
	  a role_name "mSuggestionsUri" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 217858 // mSuggestionsUri (<unidirectional association>)
	  b parent class_ref 145410 // Uri
      end

      classrelation 217986 // mUriMatcher (<unidirectional association>)
	relation 217986 --->
	  a role_name "mUriMatcher" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 217986 // mUriMatcher (<unidirectional association>)
	  b parent class_ref 205826 // UriMatcher
      end

      attribute 496258 "mSuggestSuggestionClause"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 496386 "mSuggestionProjection"
	private explicit_type "String"
	multiplicity "[]"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 205954 "DatabaseHelper"
	visibility private 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 218114 // <generalisation>
	  relation 218114 ---|>
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 218114 // <generalisation>
	    b parent class_ref 206082 // SQLiteOpenHelper
	end

	attribute 496514 "mNewVersion"
	  private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 763522 "DatabaseHelper"
	  public explicit_return_type ""
	  nparams 2
	    param inout name "context" type class_ref 192770 // Context
	    param in name "newVersion" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 763650 "onCreate"
	  public explicit_return_type "void"
	  nparams 1
	    param inout name "db" explicit_type "SQLiteDatabase"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end

	operation 763778 "onUpgrade"
	  public explicit_return_type "void"
	  nparams 3
	    param inout name "db" explicit_type "SQLiteDatabase"
	    param in name "oldVersion" explicit_type "int"
	    param in name "newVersion" explicit_type "int"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  java_annotation "@Override
"
	  
	  
	  
	end
      end

      operation 763906 "setupSuggestions"
	protected explicit_return_type "void"
	nparams 2
	  param in name "authority" explicit_type "String"
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "In order to use this class, you must extend it, and call this setup function from your
constructor.  In your application or activities, you must provide the same values when 
you create the {@link android.provider.SearchRecentSuggestions} helper.

@param authority This must match the authority that you've declared in your manifest.
@param mode You can use mode flags here to determine certain functional aspects of your
database.  Note, this value should not change from run to run, because when it does change,
your suggestions database may be wiped.

@see #DATABASE_MODE_QUERIES
@see #DATABASE_MODE_2LINES"
      end

      operation 764034 "delete"
	public explicit_return_type "int"
	nparams 3
	  param inout name "uri" type class_ref 145410 // Uri
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2}[] ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code."
      end

      operation 764162 "getType"
	public explicit_return_type "String"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code."
      end

      operation 764290 "insert"
	public return_type class_ref 145410 // Uri
	nparams 2
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code."
      end

      operation 764418 "onCreate"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code."
      end

      operation 764546 "query"
	public explicit_return_type "Cursor"
	nparams 5
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "projection" explicit_type "String"
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	  param in name "sortOrder" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}, ${t3}[] ${p3}, ${t4} ${p4}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code.

 TODO: Confirm no injection attacks here, or rewrite."
      end

      operation 764674 "update"
	public explicit_return_type "int"
	nparams 4
	  param inout name "uri" type class_ref 145410 // Uri
	  param inout name "values" type class_ref 194178 // ContentValues
	  param in name "selection" explicit_type "String"
	  param inout name "selectionArgs" explicit_type "String"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3}[] ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
	comment "This method is provided for use by the ContentResolver.  Do not override, or directly
call from your own code."
      end
    end

    class 205826 "UriMatcher"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Utility class to aid in matching URIs in content providers.

<p>To use this class, build up a tree of <code>UriMatcher</code> objects.
For example:
<pre>
private static final int PEOPLE = 1;
private static final int PEOPLE_ID = 2;
private static final int PEOPLE_PHONES = 3;
private static final int PEOPLE_PHONES_ID = 4;
private static final int PEOPLE_CONTACTMETHODS = 7;
private static final int PEOPLE_CONTACTMETHODS_ID = 8;

private static final int DELETED_PEOPLE = 20;

private static final int PHONES = 9;
private static final int PHONES_ID = 10;
private static final int PHONES_FILTER = 14;

private static final int CONTACTMETHODS = 18;
private static final int CONTACTMETHODS_ID = 19;

private static final int CALLS = 11;
private static final int CALLS_ID = 12;
private static final int CALLS_FILTER = 15;

private static final UriMatcher sURIMatcher = new UriMatcher(UriMatcher.NO_MATCH);

static
{
sURIMatcher.addURI(\"contacts\", \"people\", PEOPLE);
sURIMatcher.addURI(\"contacts\", \"people/#\", PEOPLE_ID);
sURIMatcher.addURI(\"contacts\", \"people/#/phones\", PEOPLE_PHONES);
sURIMatcher.addURI(\"contacts\", \"people/#/phones/#\", PEOPLE_PHONES_ID);
sURIMatcher.addURI(\"contacts\", \"people/#/contact_methods\", PEOPLE_CONTACTMETHODS);
sURIMatcher.addURI(\"contacts\", \"people/#/contact_methods/#\", PEOPLE_CONTACTMETHODS_ID);
sURIMatcher.addURI(\"contacts\", \"deleted_people\", DELETED_PEOPLE);
sURIMatcher.addURI(\"contacts\", \"phones\", PHONES);
sURIMatcher.addURI(\"contacts\", \"phones/filter/*\", PHONES_FILTER);
sURIMatcher.addURI(\"contacts\", \"phones/#\", PHONES_ID);
sURIMatcher.addURI(\"contacts\", \"contact_methods\", CONTACTMETHODS);
sURIMatcher.addURI(\"contacts\", \"contact_methods/#\", CONTACTMETHODS_ID);
sURIMatcher.addURI(\"call_log\", \"calls\", CALLS);
sURIMatcher.addURI(\"call_log\", \"calls/filter/*\", CALLS_FILTER);
sURIMatcher.addURI(\"call_log\", \"calls/#\", CALLS_ID);
}
</pre>
<p>Starting from API level {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR2}, paths can start
with a leading slash.  For example:
<pre>
sURIMatcher.addURI(\"contacts\", \"/people\", PEOPLE);
</pre>
<p>Then when you need to match against a URI, call {@link #match}, providing
the URL that you have been given.  You can use the result to build a query,
return a type, insert or delete a row, or whatever you need, without duplicating
all of the if-else logic that you would otherwise need.  For example:
<pre>
public String getType(Uri url)
{
int match = sURIMatcher.match(url);
switch (match)
{
case PEOPLE:
return \"vnd.android.cursor.dir/person\";
case PEOPLE_ID:
return \"vnd.android.cursor.item/person\";
... snip ...
return \"vnd.android.cursor.dir/snail-mail\";
case PEOPLE_ADDRESS_ID:
return \"vnd.android.cursor.item/snail-mail\";
default:
return null;
}
}
</pre>
instead of:
<pre>
public String getType(Uri url)
{
List<String> pathSegments = url.getPathSegments();
if (pathSegments.size() >= 2) {
if (\"people\".equals(pathSegments.get(1))) {
if (pathSegments.size() == 2) {
return \"vnd.android.cursor.dir/person\";
} else if (pathSegments.size() == 3) {
return \"vnd.android.cursor.item/person\";
... snip ...
return \"vnd.android.cursor.dir/snail-mail\";
} else if (pathSegments.size() == 3) {
return \"vnd.android.cursor.item/snail-mail\";
}
}
}
return null;
}
</pre>"
      attribute 512130 "NO_MATCH"
	class_attribute const_attribute public explicit_type "int"
	init_value " -1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 791298 "UriMatcher"
	public explicit_return_type ""
	nparams 1
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Creates the root node of the URI tree.

@param code the code to match for the root URI"
      end

      operation 791426 "UriMatcher"
	private explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 791554 "addURI"
	public explicit_return_type "void"
	nparams 3
	  param in name "authority" explicit_type "String"
	  param in name "path" explicit_type "String"
	  param in name "code" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a URI to match, and the code to return when this URI is
matched. URI nodes may be exact match string, the token \"*\"
that matches any text, or the token \"#\" that matches only
numbers.
<p>
Starting from API level {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR2},
this method will accept leading slash in the path.

@param authority the authority to match
@param path the path to match. * may be used as a wild card for
any text, and # may be used as a wild card for numbers.
@param code the code that is returned when a URI is matched
against the given components. Must be positive."
      end

      attribute 512258 "PATH_SPLIT_PATTERN"
	class_attribute const_attribute package explicit_type "Pattern"
	init_value " Pattern.compile(\"/\")"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 791682 "match"
	public explicit_return_type "int"
	nparams 1
	  param inout name "uri" type class_ref 145410 // Uri
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Try to match against the path in a url.

@param uri       The url whose path we will match against.

@return  The code for the matched node (added using addURI), 
or -1 if there is no matched node."
      end

      attribute 512386 "EXACT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 512514 "NUMBER"
	class_attribute const_attribute private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 512642 "TEXT"
	class_attribute const_attribute private explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 512770 "mCode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 512898 "mWhich"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 513026 "mText"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 223874 // mChildren (<unidirectional association>)
	relation 223874 --->
	  stereotype "ArrayList"
	  a role_name "mChildren" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 223874 // mChildren (<unidirectional association>)
	  b parent class_ref 205826 // UriMatcher
      end
    end

    class 206466 "SyncActivityTooManyDeletes"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Presents multiple options for handling the case where a sync was aborted because there
were too many pending deletes. One option is to force the delete, another is to rollback
the deletes, the third is to do nothing.
@hide"
      classrelation 218242 // <generalisation>
	relation 218242 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 218242 // <generalisation>
	  b parent class_ref 206594 // Activity
      end

      classrelation 218370 // <realization>
	relation 218370 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 218370 // <realization>
	  b parent class_ref 206722 // OnItemClickListener
      end

      attribute 496642 "mNumDeletes"
	private explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 496770 "mAccount"
	private explicit_type "Account"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 496898 "mAuthority"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 497026 "mProvider"
	private explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 767874 "onCreate"
	protected explicit_return_type "void"
	nparams 1
	  param inout name "savedInstanceState" type class_ref 174082 // Bundle
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 768002 "onItemClick"
	public explicit_return_type "void"
	nparams 4
	  param inout name "parent" explicit_type "AdapterView<?>"
	  param inout name "view" explicit_type "View"
	  param in name "position" explicit_type "int"
	  param in name "id" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 768130 "startSyncReallyDelete"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 768258 "startSyncUndoDeletes"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 206850 "SyncAdaptersCache"
      visibility public 
      nactuals 1
      actual class class_ref 206978 // RegisteredServicesCache
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A cache of services that export the {@link android.content.ISyncAdapter} interface.
@hide"
      classrelation 219650 // <realization>
	relation 219650 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 219650 // <realization>
	  b parent class_ref 206978 // RegisteredServicesCache
      end

      attribute 498562 "TAG"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"Account\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 498690 "SERVICE_INTERFACE"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android.content.SyncAdapter\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 498818 "SERVICE_META_DATA"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"android.content.SyncAdapter\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 498946 "ATTRIBUTES_NAME"
	class_attribute const_attribute private explicit_type "String"
	init_value " \"sync-adapter\""
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      class 207746 "MySerializer"
	visibility package 
	nactuals 1
	actual class class_ref 207106 // XmlSerializerAndParser
	  rank 0 explicit_value ""
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 219906 // <realization>
	  relation 219906 -_-|>
	    stereotype "bind"
	    a public
	      cpp default "${type}"
	      java "${type}"
	      classrelation_ref 219906 // <realization>
	    b parent class_ref 207106 // XmlSerializerAndParser
	end

	operation 771330 "writeAsXml"
	  public explicit_return_type "void"
	  nparams 2
	    param inout name "item" type class_ref 199682 // SyncAdapterType
	    param inout name "out" explicit_type "XmlSerializer"
	  nexceptions 1
	    explicit_exception "IOException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 771458 "createFromXml"
	  public return_type class_ref 199682 // SyncAdapterType
	  nparams 1
	    param inout name "parser" explicit_type "XmlPullParser"
	  nexceptions 2
	    explicit_exception "IOException"
	    explicit_exception "XmlPullParserException"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 219778 // sSerializer (<unidirectional association>)
	relation 219778 --->
	  a role_name "sSerializer" init_value " new MySerializer()" class_relation const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 219778 // sSerializer (<unidirectional association>)
	  b parent class_ref 207746 // MySerializer
      end

      operation 770818 "SyncAdaptersCache"
	public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 192770 // Context
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 770946 "parseServiceAttributes"
	public return_type class_ref 199682 // SyncAdapterType
	nparams 3
	  param inout name "res" type class_ref 199298 // Resources
	  param in name "packageName" explicit_type "String"
	  param inout name "attrs" explicit_type "AttributeSet"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 208002 "SyncStats"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Used to record various statistics about the result of a sync operation. The SyncManager
gets access to these via a {@link SyncResult} and uses some of them to determine the
disposition of the sync. See {@link SyncResult} for further dicussion on how the
SyncManager uses these values."
      classrelation 221954 // <realization>
	relation 221954 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 221954 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      attribute 506114 "numAuthExceptions"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The SyncAdapter was unable to authenticate the {@link android.accounts.Account}
that was specified in the request. The user needs to take some action to resolve
before a future request can expect to succeed. This is considered a hard error.
"
      end

      attribute 506242 "numIoExceptions"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The SyncAdapter had a problem, most likely with the network connectivity or a timeout
while waiting for a network response. The request may succeed if it is tried again
later. This is considered a soft error.
"
      end

      attribute 506370 "numParseExceptions"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The SyncAdapter had a problem with the data it received from the server or the storage
later. This problem will likely repeat if the request is tried again. The problem
will need to be cleared up by either the server or the storage layer (likely with help
from the user). If the SyncAdapter cleans up the data itself then it typically won't
increment this value although it may still do so in order to record that it had to
perform some cleanup. E.g., if the SyncAdapter received a bad entry from the server
when processing a feed of entries, it may choose to drop the entry and thus make
progress and still increment this value just so the SyncAdapter can record that an
error occurred. This is considered a hard error.
"
      end

      attribute 506498 "numConflictDetectedExceptions"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "The SyncAdapter detected that there was an unrecoverable version conflict when it
attempted to update or delete a version of a resource on the server. This is expected
to clear itself automatically once the new state is retrieved from the server,
though it may remain until the user intervenes manually, perhaps by clearing the
local storage and starting over frmo scratch. This is considered a hard error.
"
      end

      attribute 506626 "numInserts"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Counter for tracking how many inserts were performed by the sync operation, as defined
by the SyncAdapter.
"
      end

      attribute 506754 "numUpdates"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Counter for tracking how many updates were performed by the sync operation, as defined
by the SyncAdapter.
"
      end

      attribute 506882 "numDeletes"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Counter for tracking how many deletes were performed by the sync operation, as defined
by the SyncAdapter.
"
      end

      attribute 507010 "numEntries"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Counter for tracking how many entries were affected by the sync operation, as defined
by the SyncAdapter.
"
      end

      attribute 507138 "numSkippedEntries"
	public explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Counter for tracking how many entries, either from the server or the local store, were
ignored during the sync operation. This could happen if the SyncAdapter detected some
unparsable data but decided to skip it and move on rather than failing immediately.
"
      end

      operation 779906 "SyncStats"
	public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 780034 "SyncStats"
	public explicit_return_type ""
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 780162 "toString"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	java_annotation "@Override
"
	
	
	
      end

      operation 780290 "clear"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Reset all the counters to 0."
      end

      operation 780418 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 780546 "writeToParcel"
	public explicit_return_type "void"
	nparams 2
	  param inout name "dest" type class_ref 170242 // Parcel
	  param in name "flags" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      classrelation 222082 // CREATOR (<unidirectional association>)
	relation 222082 --->
	  a role_name "CREATOR" init_value " new Creator<SyncStats>() {
        public SyncStats createFromParcel(Parcel in) {
            return new SyncStats(in);
        }

        public SyncStats[] newArray(int size) {
            return new SyncStats[size];
        }
    }" class_relation const_relation public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}<SyncStats> ${name}${value};
"
	    classrelation_ref 222082 // CREATOR (<unidirectional association>)
	  b parent class_ref 170370 // Creator
      end
    end

    class 208130 "UndoManager"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Top-level class for managing and interacting with the global undo state for
a document or application.  This class supports both undo and redo and has
helpers for merging undoable operations together as they are performed.

<p>A single undoable operation is represented by {@link UndoOperation} which
apps implement to define their undo/redo behavior.  The UndoManager keeps
a stack of undo states; each state can have one or more undo operations
inside of it.</p>

<p>Updates to the stack must be done inside of a {@link #beginUpdate}/{@link #endUpdate()}
pair.  During this time you can add new operations to the stack with
{@link #addOperation}, retrieve and modify existing operations with
{@link #getLastOperation}, control the label shown to the user for this operation
with {@link #setUndoLabel} and {@link #suggestUndoLabel}, etc.</p>

<p>Every {link UndoOperation} is associated with an {@link UndoOwner}, which identifies
the data it belongs to.  The owner is used to indicate how operations are dependent
on each other -- operations with the same owner are dependent on others with the
same owner.  For example, you may have a document with multiple embedded objects.  If the
document itself and each embedded object use different owners, then you
can provide undo semantics appropriate to the user's context: while within
an embedded object, only edits to that object are seen and the user can
undo/redo them without needing to impact edits in other objects; while
within the larger document, all edits can be seen and the user must
undo/redo them as a single stream.</p>

@hide"
      classrelation 222466 // mOwners (<unidirectional association>)
	relation 222466 --->
	  stereotype "HashMap"
	  a role_name "mOwners" init_value " new HashMap<String, UndoOwner>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<String, ${type}> ${name}${value};
"
	    classrelation_ref 222466 // mOwners (<unidirectional association>)
	  b parent class_ref 208258 // UndoOwner
      end

      class 208386 "UndoState"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	final java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 223106 // mManager (<unidirectional association>)
	  relation 223106 --->
	    a role_name "mManager" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	      classrelation_ref 223106 // mManager (<unidirectional association>)
	    b parent class_ref 208130 // UndoManager
	end

	attribute 510978 "mCommitId"
	  const_attribute private explicit_type "int"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	classrelation 223234 // mOperations (<unidirectional association>)
	  relation 223234 --->
	    stereotype "ArrayList"
	    a role_name "mOperations" init_value " new ArrayList<UndoOperation<?>>()" const_relation private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<?>> ${name}${value};
"
	      classrelation_ref 223234 // mOperations (<unidirectional association>)
	    b parent class_ref 208514 // UndoOperation
	end

	classrelation 223362 // mRecent (<unidirectional association>)
	  relation 223362 --->
	    stereotype "ArrayList"
	    a role_name "mRecent" private
	      cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	      java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}<?>> ${name}${value};
"
	      classrelation_ref 223362 // mRecent (<unidirectional association>)
	    b parent class_ref 208514 // UndoOperation
	end

	attribute 511106 "mLabel"
	  private explicit_type "CharSequence"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 511234 "mCanMerge"
	  private explicit_type "boolean"
	  init_value " true"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 511362 "mExecuted"
	  private explicit_type "boolean"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	operation 786818 "UndoState"
	  package explicit_return_type ""
	  nparams 2
	    param inout name "manager" type class_ref 208130 // UndoManager
	    param in name "commitId" explicit_type "int"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 786946 "UndoState"
	  package explicit_return_type ""
	  nparams 3
	    param inout name "manager" type class_ref 208130 // UndoManager
	    param inout name "p" type class_ref 170242 // Parcel
	    param inout name "loader" explicit_type "ClassLoader"
	  cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	  cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 787074 "writeToParcel"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "p" type class_ref 170242 // Parcel
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 787202 "getCommitId"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 787330 "setLabel"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "label" explicit_type "CharSequence"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 787458 "updateLabel"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "label" explicit_type "CharSequence"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 787586 "getLabel"
	  package explicit_return_type "CharSequence"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 787714 "setCanMerge"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "state" explicit_type "boolean"
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 787842 "makeExecuted"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 787970 "canMerge"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 788098 "countOperations"
	  package explicit_return_type "int"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 788226 "hasOperation"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "owner" type class_ref 208258 // UndoOwner
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 788354 "hasMultipleOwners"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 788482 "addOperation"
	  package explicit_return_type "void"
	  nparams 1
	    param inout name "op" type class_ref 208514 // UndoOperation
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 788610 "getLastOperation"
	  package explicit_return_type "T"
	  nparams 2
	    param inout name "clazz" explicit_type "Class<T>"
	    param inout name "owner" type class_ref 208258 // UndoOwner
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends UndoOperation> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 788738 "matchOwner"
	  package explicit_return_type "boolean"
	  nparams 1
	    param inout name "owner" type class_ref 208258 // UndoOwner
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 788866 "hasData"
	  package explicit_return_type "boolean"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 788994 "commit"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 789122 "undo"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 789250 "redo"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end

	operation 789378 "destroy"
	  package explicit_return_type "void"
	  nparams 0
	  cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	  cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	  preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	  
	  
	  
	end
      end

      classrelation 222594 // mUndos (<unidirectional association>)
	relation 222594 --->
	  stereotype "ArrayList"
	  a role_name "mUndos" init_value " new ArrayList<UndoState>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 222594 // mUndos (<unidirectional association>)
	  b parent class_ref 208386 // UndoState
      end

      classrelation 222722 // mRedos (<unidirectional association>)
	relation 222722 --->
	  stereotype "ArrayList"
	  a role_name "mRedos" init_value " new ArrayList<UndoState>()" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 222722 // mRedos (<unidirectional association>)
	  b parent class_ref 208386 // UndoState
      end

      attribute 509698 "mUpdateCount"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 509826 "mHistorySize"
	private explicit_type "int"
	init_value " 20"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 222850 // mWorking (<unidirectional association>)
	relation 222850 --->
	  a role_name "mWorking" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 222850 // mWorking (<unidirectional association>)
	  b parent class_ref 208386 // UndoState
      end

      attribute 509954 "mCommitId"
	private explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 510082 "mInUndo"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 510210 "mMerged"
	private explicit_type "boolean"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 510338 "mStateSeq"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 510466 "mNextSavedIdx"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 222978 // mStateOwners (<unidirectional association>)
	relation 222978 --->
	  a role_name "mStateOwners" multiplicity "[]" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type}${multiplicity} ${name}${value};
"
	    classrelation_ref 222978 // mStateOwners (<unidirectional association>)
	  b parent class_ref 208258 // UndoOwner
      end

      attribute 510594 "MERGE_MODE_NONE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Never merge with the last undo state.
"
      end

      attribute 510722 "MERGE_MODE_UNIQUE"
	class_attribute const_attribute public explicit_type "int"
	init_value " 1"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Allow merge with the last undo state only if it contains
operations with the caller's owner.
"
      end

      attribute 510850 "MERGE_MODE_ANY"
	class_attribute const_attribute public explicit_type "int"
	init_value " 2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment "Always allow merge with the last undo state, if possible.
"
      end

      operation 782082 "getOwner"
	public return_type class_ref 208258 // UndoOwner
	nparams 2
	  param in name "tag" explicit_type "String"
	  param inout name "data" explicit_type "Object"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 782210 "removeOwner"
	package explicit_return_type "void"
	nparams 1
	  param inout name "owner" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 782338 "saveInstanceState"
	public return_type class_ref 170114 // Parcelable
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Flatten the current undo state into a Parcelable object, which can later be restored
with {@link #restoreInstanceState(android.os.Parcelable)}."
      end

      operation 782466 "saveOwner"
	package explicit_return_type "void"
	nparams 2
	  param inout name "owner" type class_ref 208258 // UndoOwner
	  param inout name "out" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 782594 "restoreInstanceState"
	public explicit_return_type "void"
	nparams 1
	  param inout name "state" type class_ref 170114 // Parcelable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Restore an undo state previously created with {@link #saveInstanceState()}.  This will
restore the UndoManager's state to almost exactly what it was at the point it had
been previously saved; the only information not restored is the data object
associated with each {@link UndoOwner}, which requires separate calls to
{@link #getOwner(String, Object)} to re-associate the owner with its data."
      end

      operation 782722 "restoreOwner"
	package return_type class_ref 208258 // UndoOwner
	nparams 1
	  param inout name "in" type class_ref 170242 // Parcel
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 782850 "setHistorySize"
	public explicit_return_type "void"
	nparams 1
	  param in name "size" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set the maximum number of undo states that will be retained."
      end

      operation 782978 "getHistorySize"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the current maximum number of undo states."
      end

      operation 783106 "undo"
	public explicit_return_type "int"
	nparams 2
	  param inout name "owners" type class_ref 208258 // UndoOwner
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform undo of last/top <var>count</var> undo states.  The states impacted
by this can be limited through <var>owners</var>.
@param owners Optional set of owners that should be impacted.  If null, all
undo states will be visible and available for undo.  If non-null, only those
states that contain one of the owners specified here will be visible.
@param count Number of undo states to pop.
@return Returns the number of undo states that were actually popped."
      end

      operation 783234 "redo"
	public explicit_return_type "int"
	nparams 2
	  param inout name "owners" type class_ref 208258 // UndoOwner
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Perform redo of last/top <var>count</var> undo states in the transient redo stack.
The states impacted by this can be limited through <var>owners</var>.
@param owners Optional set of owners that should be impacted.  If null, all
undo states will be visible and available for undo.  If non-null, only those
states that contain one of the owners specified here will be visible.
@param count Number of undo states to pop.
@return Returns the number of undo states that were actually redone."
      end

      operation 783362 "isInUndo"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if we are currently inside of an undo/redo operation.  This is
useful for editors to know whether they should be generating new undo state
when they see edit operations happening."
      end

      operation 783490 "forgetUndos"
	public explicit_return_type "int"
	nparams 2
	  param inout name "owners" type class_ref 208258 // UndoOwner
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 783618 "forgetRedos"
	public explicit_return_type "int"
	nparams 2
	  param inout name "owners" type class_ref 208258 // UndoOwner
	  param in name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 783746 "countUndos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "owners" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of undo states on the undo stack.
@param owners If non-null, only those states containing an operation with one of
the owners supplied here will be counted."
      end

      operation 783874 "countRedos"
	public explicit_return_type "int"
	nparams 1
	  param inout name "owners" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of redo states on the undo stack.
@param owners If non-null, only those states containing an operation with one of
the owners supplied here will be counted."
      end

      operation 784002 "getUndoLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "owners" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the user-visible label for the top undo state on the stack.
@param owners If non-null, will select the top-most undo state containing an
operation with one of the owners supplied here."
      end

      operation 784130 "getRedoLabel"
	public explicit_return_type "CharSequence"
	nparams 1
	  param inout name "owners" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the user-visible label for the top redo state on the stack.
@param owners If non-null, will select the top-most undo state containing an
operation with one of the owners supplied here."
      end

      operation 784258 "beginUpdate"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Start creating a new undo state.  Multiple calls to this function will nest until
they are all matched by a later call to {@link #endUpdate}.
@param label Optional user-visible label for this new undo state."
      end

      operation 784386 "createWorkingState"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 784514 "isInUpdate"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Returns true if currently inside of a {@link #beginUpdate}."
      end

      operation 784642 "setUndoLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Forcibly set a new for the new undo state being built within a {@link #beginUpdate}.
Any existing label will be replaced with this one."
      end

      operation 784770 "suggestUndoLabel"
	public explicit_return_type "void"
	nparams 1
	  param inout name "label" explicit_type "CharSequence"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Set a new for the new undo state being built within a {@link #beginUpdate}, but
only if there is not a label currently set for it."
      end

      operation 784898 "getUpdateNestingLevel"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the number of times {@link #beginUpdate} has been called without a matching
{@link #endUpdate} call."
      end

      operation 785026 "hasOperation"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "owner" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Check whether there is an {@link UndoOperation} in the current {@link #beginUpdate}
undo state.
@param owner Optional owner of the operation to look for.  If null, will succeed
if there is any operation; if non-null, will only succeed if there is an operation
with the given owner.
@return Returns true if there is a matching operation in the current undo state."
      end

      operation 785154 "getLastOperation"
	public return_type class_ref 208514 // UndoOperation
	nparams 1
	  param in name "mergeMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the most recent {@link UndoOperation} that was added to the update.
@param mergeMode May be either {@link #MERGE_MODE_NONE} or {@link #MERGE_MODE_ANY}."
      end

      operation 785282 "getLastOperation"
	public return_type class_ref 208514 // UndoOperation
	nparams 2
	  param inout name "owner" type class_ref 208258 // UndoOwner
	  param in name "mergeMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type}<?> ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the most recent {@link UndoOperation} that was added to the update and
has the given owner.
@param owner Optional owner of last operation to retrieve.  If null, the last
operation regardless of owner will be retrieved; if non-null, the last operation
matching the given owner will be retrieved.
@param mergeMode May be either {@link #MERGE_MODE_NONE}, {@link #MERGE_MODE_UNIQUE},
or {@link #MERGE_MODE_ANY}."
      end

      operation 785410 "getLastOperation"
	public explicit_return_type "T"
	nparams 3
	  param inout name "clazz" explicit_type "Class<T>"
	  param inout name "owner" type class_ref 208258 // UndoOwner
	  param in name "mergeMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}<T extends UndoOperation> ${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the most recent {@link UndoOperation} that was added to the update and
has the given owner.
@param clazz Optional class of the last operation to retrieve.  If null, the
last operation regardless of class will be retrieved; if non-null, the last
operation whose class is the same as the given class will be retrieved.
@param owner Optional owner of last operation to retrieve.  If null, the last
operation regardless of owner will be retrieved; if non-null, the last operation
matching the given owner will be retrieved.
@param mergeMode May be either {@link #MERGE_MODE_NONE}, {@link #MERGE_MODE_UNIQUE},
or {@link #MERGE_MODE_ANY}."
      end

      operation 785538 "addOperation"
	public explicit_return_type "void"
	nparams 2
	  param inout name "op" type class_ref 208514 // UndoOperation
	  param in name "mergeMode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}<?> ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Add a new UndoOperation to the current update.
@param op The new operation to add.
@param mergeMode May be either {@link #MERGE_MODE_NONE}, {@link #MERGE_MODE_UNIQUE},
or {@link #MERGE_MODE_ANY}."
      end

      operation 785666 "endUpdate"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Finish the creation of an undo state, matching a previous call to
{@link #beginUpdate}."
      end

      operation 785794 "pushWorkingState"
	private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 785922 "commitState"
	public explicit_return_type "int"
	nparams 1
	  param inout name "owner" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Commit the last finished undo state.  This undo state can no longer be
modified with further {@link #MERGE_MODE_UNIQUE} or
{@link #MERGE_MODE_ANY} merge modes.  If called while inside of an update,
this will push any changes in the current update on to the undo stack
and result with a fresh undo state, behaving as if {@link #endUpdate()}
had been called enough to unwind the current update, then the last state
committed, and {@link #beginUpdate} called to restore the update nesting.
@param owner The optional owner to determine whether to perform the commit.
If this is non-null, the commit will only execute if the current top undo
state contains an operation with the given owner.
@return Returns an integer identifier for the committed undo state, which
can later be used to try to uncommit the state to perform further edits on it."
      end

      operation 786050 "uncommitState"
	public explicit_return_type "boolean"
	nparams 2
	  param in name "commitId" explicit_type "int"
	  param inout name "owner" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Attempt to undo a previous call to {@link #commitState}.  This will work
if the undo state at the top of the stack has the given id, and has not been
involved in an undo operation.  Otherwise false is returned.
@param commitId The identifier for the state to be uncommitted, as returned
by {@link #commitState}.
@param owner Optional owner that must appear in the committed state.
@return Returns true if the uncommit is successful, else false."
      end

      operation 786178 "getTopUndo"
	package return_type class_ref 208386 // UndoState
	nparams 1
	  param inout name "owners" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 786306 "getTopRedo"
	package return_type class_ref 208386 // UndoState
	nparams 1
	  param inout name "owners" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0}[] ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 786434 "matchOwners"
	package explicit_return_type "boolean"
	nparams 2
	  param inout name "state" type class_ref 208386 // UndoState
	  param inout name "owners" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 786562 "findPrevState"
	package explicit_return_type "int"
	nparams 3
	  param inout name "states" explicit_type "ArrayList<UndoState>"
	  param inout name "owners" type class_ref 208258 // UndoOwner
	  param in name "from" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 786690 "findNextState"
	package explicit_return_type "int"
	nparams 3
	  param inout name "states" explicit_type "ArrayList<UndoState>"
	  param inout name "owners" type class_ref 208258 // UndoOwner
	  param in name "from" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}, ${t1}[] ${p1}, ${t2} ${p2}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 208258 "UndoOwner"
      visibility public 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Representation of an owner of {@link UndoOperation} objects in an {@link UndoManager}.

@hide"
      attribute 511490 "mTag"
	const_attribute package explicit_type "String"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 223746 // mManager (<unidirectional association>)
	relation 223746 --->
	  a role_name "mManager" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 223746 // mManager (<unidirectional association>)
	  b parent class_ref 208130 // UndoManager
      end

      attribute 511618 "mData"
	package explicit_type "Object"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 511746 "mOpCount"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 511874 "mStateSeq"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " For saving/restoring state."
      end

      attribute 512002 "mSavedIdx"
	package explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 790914 "UndoOwner"
	package explicit_return_type ""
	nparams 1
	  param in name "tag" explicit_type "String"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 791042 "getTag"
	public explicit_return_type "String"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the unique tag name identifying this owner.  This is the tag
supplied to {@link UndoManager#getOwner(String, Object) UndoManager.getOwner}
and is immutable."
      end

      operation 791170 "getData"
	public explicit_return_type "Object"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return the actual data object of the owner.  This is the data object
supplied to {@link UndoManager#getOwner(String, Object) UndoManager.getOwner}.  An
owner may have a null data if it was restored from a previously saved state with
no getOwner call to associate it with its data."
      end
    end

    class 208514 "UndoOperation"
      abstract visibility public 
      nformals 1
      formal name "DATA" type "" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "A single undoable operation.  You must subclass this to implement the state
and behavior for your operation.  Instances of this class are placed and
managed in an {@link UndoManager}.

@hide"
      classrelation 223490 // <realization>
	relation 223490 -_-|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 223490 // <realization>
	  b parent class_ref 170114 // Parcelable
      end

      classrelation 223618 // mOwner (<unidirectional association>)
	relation 223618 --->
	  a role_name "mOwner" package
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 223618 // mOwner (<unidirectional association>)
	  b parent class_ref 208258 // UndoOwner
      end

      operation 789506 "UndoOperation"
	public explicit_return_type ""
	nparams 1
	  param inout name "owner" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Create a new instance of the operation.
@param owner Who owns the data being modified by this undo state; must be
returned by {@link UndoManager#getOwner(String, Object) UndoManager.getOwner}."
      end

      operation 789634 "UndoOperation"
	protected explicit_return_type ""
	nparams 2
	  param inout name "src" type class_ref 170242 // Parcel
	  param inout name "loader" explicit_type "ClassLoader"
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${volatile}${throw} {
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${synchronized}${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Construct from a Parcel."
      end

      operation 789762 "getOwner"
	public return_type class_ref 208258 // UndoOwner
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Owning object as given to {@link #UndoOperation(UndoOwner)}."
      end

      operation 789890 "getOwnerData"
	public explicit_return_type "DATA"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Synonym for {@link #getOwner()}.{@link android.content.UndoOwner#getData()}."
      end

      operation 790018 "matchOwner"
	public explicit_return_type "boolean"
	nparams 1
	  param inout name "owner" type class_ref 208258 // UndoOwner
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${t0} ${p0}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this undo operation is a member of the given owner.
The default implementation is <code>owner == getOwner()</code>.  You
can override this to provide more sophisticated dependencies between
owners."
      end

      operation 790146 "hasData"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this operation actually contains modification data.  The
default implementation always returns true.  If you return false, the
operation will be dropped when the final undo state is being built."
      end

      operation 790274 "allowMerge"
	public explicit_return_type "boolean"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Return true if this operation can be merged with a later operation.
The default implementation always returns true."
      end

      operation 790402 "commit"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when this undo state is being committed to the undo stack.
The implementation should perform the initial edits and save any state that
may be needed to undo them."
      end

      operation 790530 "undo"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when this undo state is being popped off the undo stack (in to
the temporary redo stack).  The implementation should remove the original
edits and thus restore the target object to its prior value."
      end

      operation 790658 "redo"
	abstract public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment "Called when this undo state is being pushed back from the transient
redo stack to the main undo stack.  The implementation should re-apply
the edits that were previously removed by {@link #undo}."
      end

      operation 790786 "describeContents"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	preserve_java_body_indent java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end
  end

  deploymentview 142082 "content"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 164226 "AbstractThreadedSyncAdapter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accounts.Account;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Process;
import android.os.RemoteException;
import android.os.Trace;
import java.util.HashMap;
import java.util.concurrent.atomic.AtomicInteger;
${definition}"
      associated_classes
	class_ref 192642 // AbstractThreadedSyncAdapter
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 164354 "ActivityNotFoundException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 193666 // ActivityNotFoundException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 164482 "AsyncQueryHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.Cursor;
import android.net.Uri;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
import java.lang.ref.WeakReference;
${definition}"
      associated_classes
	class_ref 193794 // AsyncQueryHandler
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 164610 "Loader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.ContentObserver;
import android.os.Handler;
import android.util.DebugUtils;
import java.io.FileDescriptor;
import java.io.PrintWriter;
${definition}"
      associated_classes
	class_ref 194562 // Loader
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 164738 "AsyncTaskLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.AsyncTask;
import android.os.Handler;
import android.os.OperationCanceledException;
import android.os.SystemClock;
import android.util.Slog;
import android.util.TimeUtils;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Executor;
${definition}"
      associated_classes
	class_ref 194434 // AsyncTaskLoader
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 164866 "BroadcastReceiver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ActivityManagerNative;
import android.app.ActivityThread;
import android.app.IActivityManager;
import android.app.QueuedWork;
import android.os.Bundle;
import android.os.IBinder;
import android.os.RemoteException;
import android.util.Log;
import android.util.Slog;
${definition}"
      associated_classes
	class_ref 195202 // BroadcastReceiver
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 164994 "ClipboardManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.Context;
import android.os.Message;
import android.os.RemoteException;
import android.os.Handler;
import android.os.IBinder;
import android.os.ServiceManager;
import android.os.StrictMode;
import android.util.Log;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 195586 // ClipboardManager
      end
      comment "Copyright (c) 2010, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 165122 "ClipData"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.AssetFileDescriptor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.StrictMode;
import android.text.Html;
import android.text.Spannable;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.TextUtils;
import android.text.style.URLSpan;
import android.util.Log;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 195970 // ClipData
      end
      comment "Copyright (c) 2010, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 165250 "ClipDescription"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 196098 // ClipDescription
      end
      comment "Copyright (c) 2010, The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 165378 "ComponentCallbacks"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.Configuration;
${definition}"
      associated_classes
	class_ref 196354 // ComponentCallbacks
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 165506 "ComponentCallbacks2"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 196610 // ComponentCallbacks2
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 165634 "ComponentName"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import java.io.PrintWriter;
import java.lang.Comparable;
${definition}"
      associated_classes
	class_ref 196738 // ComponentName
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 165762 "ContentInsertHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 196866 // ContentInsertHandler
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 165890 "IContentProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.AssetFileDescriptor;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.IBinder;
import android.os.ICancellationSignal;
import android.os.IInterface;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import java.io.FileNotFoundException;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 197506 // IContentProvider
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166018 "ContentProviderNative"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.AssetFileDescriptor;
import android.database.BulkCursorDescriptor;
import android.database.BulkCursorToCursorAdaptor;
import android.database.Cursor;
import android.database.CursorToBulkCursorAdaptor;
import android.database.DatabaseUtils;
import android.database.IContentObserver;
import android.net.Uri;
import android.os.Binder;
import android.os.Bundle;
import android.os.IBinder;
import android.os.ICancellationSignal;
import android.os.Parcel;
import android.os.ParcelFileDescriptor;
import android.os.Parcelable;
import android.os.RemoteException;
import java.io.FileNotFoundException;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 197634 // ContentProviderNative
	class_ref 198146 // ContentProviderProxy
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166146 "ContentProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.AppOpsManager;
import android.content.pm.PathPermission;
import android.content.pm.ProviderInfo;
import android.content.res.AssetFileDescriptor;
import android.content.res.Configuration;
import android.database.Cursor;
import android.database.SQLException;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Binder;
import android.os.Bundle;
import android.os.CancellationSignal;
import android.os.ICancellationSignal;
import android.os.OperationCanceledException;
import android.os.ParcelFileDescriptor;
import android.os.Process;
import android.os.UserHandle;
import android.util.Log;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 197122 // ContentProvider
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166274 "ContentProviderClient"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.res.AssetFileDescriptor;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.CancellationSignal;
import android.os.DeadObjectException;
import android.os.Handler;
import android.os.ICancellationSignal;
import android.os.Looper;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.util.Log;
import com.android.internal.annotations.GuardedBy;
import dalvik.system.CloseGuard;
import java.io.FileNotFoundException;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 193410 // ContentProviderClient
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166402 "ContentProviderOperation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.Cursor;
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import android.util.Log;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
${definition}"
      associated_classes
	class_ref 198658 // ContentProviderOperation
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166530 "ContentProviderResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import android.os.Parcelable;
import android.os.Parcel;
${definition}"
      associated_classes
	class_ref 197890 // ContentProviderResult
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166658 "ContentQueryMap"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.ContentObserver;
import android.database.Cursor;
import android.os.Handler;
import java.util.HashMap;
import java.util.Map;
import java.util.Observable;
${definition}"
      associated_classes
	class_ref 198914 // ContentQueryMap
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166786 "ContentResolver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accounts.Account;
import android.app.ActivityManagerNative;
import android.app.ActivityThread;
import android.app.AppGlobals;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.AssetFileDescriptor;
import android.content.res.Resources;
import android.database.ContentObserver;
import android.database.CrossProcessCursorWrapper;
import android.database.Cursor;
import android.database.IContentObserver;
import android.net.Uri;
import android.os.Bundle;
import android.os.CancellationSignal;
import android.os.DeadObjectException;
import android.os.IBinder;
import android.os.ICancellationSignal;
import android.os.OperationCanceledException;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.os.ServiceManager;
import android.os.SystemClock;
import android.os.UserHandle;
import android.text.TextUtils;
import android.util.EventLog;
import android.util.Log;
import dalvik.system.CloseGuard;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import static libcore.io.OsConstants.AF_UNIX;
import static libcore.io.OsConstants.SEEK_SET;
import static libcore.io.OsConstants.SOCK_STREAM;
import static libcore.io.OsConstants.S_ISLNK;
import static libcore.io.OsConstants.S_ISREG;
${definition}"
      associated_classes
	class_ref 193922 // ContentResolver
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 166914 "ContentUris"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
${definition}"
      associated_classes
	class_ref 200706 // ContentUris
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167042 "ContentValues"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 194178 // ContentValues
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167170 "Context"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.res.AssetManager;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.database.DatabaseErrorHandler;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import android.media.MediaScannerConnection.OnScanCompletedListener;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.Looper;
import android.os.StatFs;
import android.os.UserHandle;
import android.os.UserManager;
import android.util.AttributeSet;
import android.view.DisplayAdjustments;
import android.view.Display;
import android.view.WindowManager;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 192770 // Context
      end
      comment "Copyright (c) 2012-2013 The Linux Foundation. All rights reserved.
Not a Contribution.
Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167298 "ContextWrapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.Activity;
import android.app.ActivityManagerNative;
import android.app.LoadedApk;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.res.AssetManager;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.database.DatabaseErrorHandler;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.os.RemoteException;
import android.os.UserHandle;
import android.view.DisplayAdjustments;
import android.view.Display;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
${definition}"
      associated_classes
	class_ref 202370 // ContextWrapper
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167426 "EntityIterator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Iterator;
${definition}"
      associated_classes
	class_ref 202626 // EntityIterator
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167554 "CursorEntityIterator"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.Cursor;
import android.os.RemoteException;
${definition}"
      associated_classes
	class_ref 202498 // CursorEntityIterator
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167682 "CursorLoader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.database.ContentObserver;
import android.database.Cursor;
import android.net.Uri;
import android.os.CancellationSignal;
import android.os.OperationCanceledException;
import java.io.FileDescriptor;
import java.io.PrintWriter;
import java.util.Arrays;
${definition}"
      associated_classes
	class_ref 203010 // CursorLoader
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167810 "DefaultDataHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import android.util.Xml;
import org.xml.sax.Attributes;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Stack;
${definition}"
      associated_classes
	class_ref 203138 // DefaultDataHandler
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 167938 "DialogInterface"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.view.KeyEvent;
${definition}"
      associated_classes
	class_ref 203266 // DialogInterface
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 168066 "Entity"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.os.Parcel;
import android.net.Uri;
import android.util.Log;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 202754 // Entity
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 168194 "Intent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.pm.ApplicationInfo;
import android.util.ArraySet;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import android.annotation.SdkConstant;
import android.annotation.SdkConstant.SdkConstantType;
import android.content.pm.ActivityInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Rect;
import android.net.Uri;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.StrictMode;
import android.provider.DocumentsContract;
import android.provider.DocumentsProvider;
import android.provider.OpenableColumns;
import android.util.AttributeSet;
import android.util.Log;
import com.android.internal.util.XmlUtils;
import java.io.IOException;
import java.io.Serializable;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 195458 // Intent
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 168322 "IntentFilter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.PatternMatcher;
import android.util.AndroidException;
import android.util.Log;
import android.util.Printer;
import com.android.internal.util.XmlUtils;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlSerializer;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 201986 // IntentFilter
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 168450 "IntentSender"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.ActivityManagerNative;
import android.content.Context;
import android.content.Intent;
import android.content.IIntentSender;
import android.content.IIntentReceiver;
import android.os.Bundle;
import android.os.RemoteException;
import android.os.Handler;
import android.os.IBinder;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.UserHandle;
import android.util.AndroidException;
${definition}"
      associated_classes
	class_ref 201730 // IntentSender
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 168578 "MutableContextWrapper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 205314 // MutableContextWrapper
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 168706 "OperationApplicationException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 198018 // OperationApplicationException
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 168834 "PeriodicSync"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.os.Bundle;
import android.os.Parcel;
import android.accounts.Account;
${definition}"
      associated_classes
	class_ref 199810 // PeriodicSync
      end
      comment "Copyright (C) 2010 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 168962 "ReceiverCallNotAllowedException"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.util.AndroidRuntimeException;
${definition}"
      associated_classes
	class_ref 205442 // ReceiverCallNotAllowedException
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169090 "RestrictionEntry"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import java.lang.annotation.Inherited;
${definition}"
      associated_classes
	class_ref 205570 // RestrictionEntry
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169218 "SearchRecentSuggestionsProvider"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.app.SearchManager;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.net.Uri;
import android.text.TextUtils;
import android.util.Log;
${definition}"
      associated_classes
	class_ref 205698 // SearchRecentSuggestionsProvider
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169346 "ServiceConnection"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.IBinder;
${definition}"
      associated_classes
	class_ref 202114 // ServiceConnection
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169474 "SharedPreferences"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import java.util.Map;
import java.util.Set;
${definition}"
      associated_classes
	class_ref 201602 // SharedPreferences
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169602 "SyncActivityTooManyDeletes"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import com.android.internal.R;
import android.accounts.Account;
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.LinearLayout;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;
${definition}"
      associated_classes
	class_ref 206466 // SyncActivityTooManyDeletes
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 169986 "SyncAdaptersCache"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.content.pm.RegisteredServicesCache;
import android.content.pm.XmlSerializerAndParser;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.util.AttributeSet;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.XmlPullParserException;
import java.io.IOException;
${definition}"
      associated_classes
	class_ref 206850 // SyncAdaptersCache
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170114 "SyncAdapterType"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.text.TextUtils;
import android.os.Parcelable;
import android.os.Parcel;
${definition}"
      associated_classes
	class_ref 199682 // SyncAdapterType
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170242 "SyncContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.RemoteException;
import android.os.SystemClock;
import android.os.IBinder;
${definition}"
      associated_classes
	class_ref 193282 // SyncContext
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170370 "SyncInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accounts.Account;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
${definition}"
      associated_classes
	class_ref 199938 // SyncInfo
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170498 "SyncRequest"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.accounts.Account;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 199554 // SyncRequest
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170626 "SyncResult"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 193538 // SyncResult
      end
      comment "Copyright (C) 2008 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170754 "SyncStats"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcelable;
import android.os.Parcel;
${definition}"
      associated_classes
	class_ref 208002 // SyncStats
      end
      comment "Copyright (C) 2007 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 170882 "SyncStatusInfo"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.util.Log;
import java.util.ArrayList;
${definition}"
      associated_classes
	class_ref 200066 // SyncStatusInfo
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 171010 "SyncStatusObserver"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 200194 // SyncStatusObserver
      end
      comment "Copyright (C) 2009 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 171138 "UndoManager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
import android.os.ParcelableParcel;
import android.text.TextUtils;
import java.util.ArrayList;
import java.util.HashMap;
${definition}"
      associated_classes
	class_ref 208130 // UndoManager
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 171266 "UndoOperation"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 208514 // UndoOperation
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 171394 "UndoOwner"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 208258 // UndoOwner
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 171522 "UriMatcher"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
${definition}"
      associated_classes
	class_ref 205826 // UriMatcher
      end
      comment "Copyright (C) 2006 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end

    artifact 171650 "UriPermission"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
import android.net.Uri;
import android.os.Parcel;
import android.os.Parcelable;
${definition}"
      associated_classes
	class_ref 199426 // UriPermission
      end
      comment "Copyright (C) 2013 The Android Open Source Project

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License."
    end
  end

  package_ref 144898 // res

  package_ref 145026 // pm
end
