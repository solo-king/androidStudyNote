class LinkAddress
!!!198786.java!!!	init(inout address : InetAddress, in prefixLength : int) : void
        if (address == null || prefixLength < 0 ||
                ((address instanceof Inet4Address) && prefixLength > 32) ||
                (prefixLength > 128)) {
            throw new IllegalArgumentException("Bad LinkAddress params " + address +
                    "/" + prefixLength);
        }
        this.address = address;
        this.prefixLength = prefixLength;
!!!198914.java!!!	LinkAddress(inout address : InetAddress, in prefixLength : int)
        init(address, prefixLength);
!!!199042.java!!!	LinkAddress(inout interfaceAddress : InterfaceAddress)
        init(interfaceAddress.getAddress(),
             interfaceAddress.getNetworkPrefixLength());
!!!199170.java!!!	LinkAddress(in address : String)
        InetAddress inetAddress = null;
        int prefixLength = -1;
        try {
            String [] pieces = address.split("/", 2);
            prefixLength = Integer.parseInt(pieces[1]);
            inetAddress = InetAddress.parseNumericAddress(pieces[0]);
        } catch (NullPointerException e) {            // Null string.
        } catch (ArrayIndexOutOfBoundsException e) {  // No prefix length.
        } catch (NumberFormatException e) {           // Non-numeric prefix.
        } catch (IllegalArgumentException e) {        // Invalid IP address.
        }

        if (inetAddress == null || prefixLength == -1) {
            throw new IllegalArgumentException("Bad LinkAddress params " + address);
        }

        init(inetAddress, prefixLength);
!!!199298.java!!!	toString() : String
        return (address == null ? "" : (address.getHostAddress() + "/" + prefixLength));
!!!199426.java!!!	equals(inout obj : Object) : boolean
        if (!(obj instanceof LinkAddress)) {
            return false;
        }
        LinkAddress linkAddress = (LinkAddress) obj;
        return this.address.equals(linkAddress.address) &&
            this.prefixLength == linkAddress.prefixLength;
!!!199554.java!!!	hashCode() : int
        return ((null == address) ? 0 : address.hashCode()) + prefixLength;
!!!199682.java!!!	getAddress() : InetAddress
        return address;
!!!199810.java!!!	getNetworkPrefixLength() : int
        return prefixLength;
!!!199938.java!!!	describeContents() : int
        return 0;
!!!200066.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        if (address != null) {
            dest.writeByte((byte)1);
            dest.writeByteArray(address.getAddress());
            dest.writeInt(prefixLength);
        } else {
            dest.writeByte((byte)0);
        }
