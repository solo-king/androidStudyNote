class DhcpInfoInternal
!!!131970.java!!!	DhcpInfoInternal()
        mRoutes = new ArrayList<RouteInfo>();
!!!132098.java!!!	addRoute(inout routeInfo : RouteInfo) : void
        mRoutes.add(routeInfo);
!!!132226.java!!!	getRoutes() : Collection<RouteInfo>
        return Collections.unmodifiableCollection(mRoutes);
!!!132354.java!!!	convertToInt(in addr : String) : int
        if (addr != null) {
            try {
                InetAddress inetAddress = NetworkUtils.numericToInetAddress(addr);
                if (inetAddress instanceof Inet4Address) {
                    return NetworkUtils.inetAddressToInt((Inet4Address)inetAddress);
                }
            } catch (IllegalArgumentException e) {}
        }
        return 0;
!!!132482.java!!!	makeDhcpInfo() : DhcpInfo
        DhcpInfo info = new DhcpInfo();
        info.ipAddress = convertToInt(ipAddress);
        for (RouteInfo route : mRoutes) {
            if (route.isDefaultRoute()) {
                info.gateway = convertToInt(route.getGateway().getHostAddress());
                break;
            }
        }
        try {
            InetAddress inetAddress = NetworkUtils.numericToInetAddress(ipAddress);
            info.netmask = NetworkUtils.prefixLengthToNetmaskInt(prefixLength);
        } catch (IllegalArgumentException e) {}
        info.dns1 = convertToInt(dns1);
        info.dns2 = convertToInt(dns2);
        info.serverAddress = convertToInt(serverAddress);
        info.leaseDuration = leaseDuration;
        return info;
!!!132610.java!!!	makeLinkAddress() : LinkAddress
        if (TextUtils.isEmpty(ipAddress)) {
            Log.e(TAG, "makeLinkAddress with empty ipAddress");
            return null;
        }
        return new LinkAddress(NetworkUtils.numericToInetAddress(ipAddress), prefixLength);
!!!132738.java!!!	makeLinkProperties() : LinkProperties
        LinkProperties p = new LinkProperties();
        p.addLinkAddress(makeLinkAddress());
        for (RouteInfo route : mRoutes) {
            p.addRoute(route);
        }
        //if empty, connectivity configures default DNS
        if (TextUtils.isEmpty(dns1) == false) {
            p.addDns(NetworkUtils.numericToInetAddress(dns1));
        } else {
            Log.d(TAG, "makeLinkProperties with empty dns1!");
        }
        if (TextUtils.isEmpty(dns2) == false) {
            p.addDns(NetworkUtils.numericToInetAddress(dns2));
        } else {
            Log.d(TAG, "makeLinkProperties with empty dns2!");
        }
        return p;
!!!132866.java!!!	updateFromDhcpRequest(inout orig : DhcpInfoInternal) : void
        if (orig == null) return;

        if (TextUtils.isEmpty(dns1)) {
            dns1 = orig.dns1;
        }

        if (TextUtils.isEmpty(dns2)) {
            dns2 = orig.dns2;
        }

        if (mRoutes.size() == 0) {
            for (RouteInfo route : orig.getRoutes()) {
                addRoute(route);
            }
        }
!!!132994.java!!!	hasMeteredHint() : boolean
        if (vendorInfo != null) {
            return vendorInfo.contains("ANDROID_METERED");
        } else {
            return false;
        }
!!!133122.java!!!	toString() : String
        String routeString = "";
        String gateway = "";   // add by chenqigan
        for (RouteInfo route : mRoutes) {
            gateway = route.getGateway().getHostAddress();//获取独立gateway
            routeString += route.toString() + " | ";
        }
        SystemProperties.set("dhcp.eth0.ipaddress", ipAddress);
        SystemProperties.set("dhcp.eth0.mask", String.valueOf(prefixLength));
        SystemProperties.set("dhcp.eth0.gateway", gateway);
        SystemProperties.set("dhcp.eth0.dns1", dns1);
        return "addr: " + ipAddress + "/" + prefixLength +
                " mRoutes: " + routeString +
                " dns: " + dns1 + "," + dns2 +
                " dhcpServer: " + serverAddress +
                " leaseDuration: " + leaseDuration+
                "gateway = "+gateway;
