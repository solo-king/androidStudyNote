class DhcpResults
!!!182402.java!!!	DhcpResults()
        linkProperties = new LinkProperties();
!!!182530.java!!!	DhcpResults(inout source : DhcpResults)
        if (source != null) {
            linkProperties = new LinkProperties(source.linkProperties);
            serverAddress = source.serverAddress;
            leaseDuration = source.leaseDuration;
            vendorInfo = source.vendorInfo;
        } else {
            linkProperties = new LinkProperties();
        }
!!!182658.java!!!	DhcpResults(inout lp : LinkProperties)
        linkProperties = new LinkProperties(lp);
!!!182786.java!!!	updateFromDhcpRequest(inout orig : DhcpResults) : void
        if (orig == null || orig.linkProperties == null) return;
        if (linkProperties.getRoutes().size() == 0) {
            for (RouteInfo r : orig.linkProperties.getRoutes()) linkProperties.addRoute(r);
        }
        if (linkProperties.getDnses().size() == 0) {
            for (InetAddress d : orig.linkProperties.getDnses()) linkProperties.addDns(d);
        }
!!!182914.java!!!	hasMeteredHint() : boolean
        if (vendorInfo != null) {
            return vendorInfo.contains("ANDROID_METERED");
        } else {
            return false;
        }
!!!183042.java!!!	clear() : void
        linkProperties.clear();
        serverAddress = null;
        vendorInfo = null;
        leaseDuration = 0;
!!!183170.java!!!	toString() : String
        StringBuffer str = new StringBuffer(linkProperties.toString());

        str.append(" DHCP server ").append(serverAddress);
        str.append(" Vendor info ").append(vendorInfo);
        str.append(" lease ").append(leaseDuration).append(" seconds");

        return str.toString();
!!!183298.java!!!	equals(inout obj : Object) : boolean
        if (this == obj) return true;

        if (!(obj instanceof DhcpResults)) return false;

        DhcpResults target = (DhcpResults)obj;

        if (linkProperties == null) {
            if (target.linkProperties != null) return false;
        } else if (!linkProperties.equals(target.linkProperties)) return false;
        if (serverAddress == null) {
            if (target.serverAddress != null) return false;
        } else if (!serverAddress.equals(target.serverAddress)) return false;
        if (vendorInfo == null) {
            if (target.vendorInfo != null) return false;
        } else if (!vendorInfo.equals(target.vendorInfo)) return false;
        if (leaseDuration != target.leaseDuration) return false;

        return true;
!!!183426.java!!!	describeContents() : int
        return 0;
!!!183554.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        linkProperties.writeToParcel(dest, flags);

        dest.writeInt(leaseDuration);

        if (serverAddress != null) {
            dest.writeByte((byte)1);
            dest.writeByteArray(serverAddress.getAddress());
        } else {
            dest.writeByte((byte)0);
        }

        dest.writeString(vendorInfo);
!!!183682.java!!!	setInterfaceName(in interfaceName : String) : void
        linkProperties.setInterfaceName(interfaceName);
!!!183810.java!!!	addLinkAddress(in addrString : String, in prefixLength : int) : boolean
        InetAddress addr;
        try {
            addr = NetworkUtils.numericToInetAddress(addrString);
        } catch (IllegalArgumentException e) {
            Log.e(TAG, "addLinkAddress failed with addrString " + addrString);
            return true;
        }

        LinkAddress linkAddress = new LinkAddress(addr, prefixLength);
        linkProperties.addLinkAddress(linkAddress);

        RouteInfo routeInfo = new RouteInfo(linkAddress);
        linkProperties.addRoute(routeInfo);
        return false;
!!!183938.java!!!	addGateway(in addrString : String) : boolean
        try {
            linkProperties.addRoute(new RouteInfo(NetworkUtils.numericToInetAddress(addrString)));
        } catch (IllegalArgumentException e) {
            Log.e(TAG, "addGateway failed with addrString " + addrString);
            return true;
        }
        return false;
!!!184066.java!!!	addDns(in addrString : String) : boolean
        if (TextUtils.isEmpty(addrString) == false) {
            try {
                linkProperties.addDns(NetworkUtils.numericToInetAddress(addrString));
            } catch (IllegalArgumentException e) {
                Log.e(TAG, "addDns failed with addrString " + addrString);
                return true;
            }
        }
        return false;
!!!184194.java!!!	setServerAddress(in addrString : String) : boolean
        try {
            serverAddress = NetworkUtils.numericToInetAddress(addrString);
        } catch (IllegalArgumentException e) {
            Log.e(TAG, "setServerAddress failed with addrString " + addrString);
            return true;
        }
        return false;
!!!184322.java!!!	setLeaseDuration(in duration : int) : void
        leaseDuration = duration;
!!!184450.java!!!	setVendorInfo(in info : String) : void
        vendorInfo = info;
!!!184578.java!!!	setDomains(in domains : String) : void
        linkProperties.setDomains(domains);
