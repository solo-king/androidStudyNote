class InterfaceConfiguration
!!!196866.java!!!	toString() : String
        final StringBuilder builder = new StringBuilder();
        builder.append("mHwAddr=").append(mHwAddr);
        builder.append(" mAddr=").append(String.valueOf(mAddr));
        builder.append(" mFlags=").append(getFlags());
        return builder.toString();
!!!196994.java!!!	getFlags() : Iterable<String>
        return mFlags;
!!!197122.java!!!	hasFlag(in flag : String) : boolean
        validateFlag(flag);
        return mFlags.contains(flag);
!!!197250.java!!!	clearFlag(in flag : String) : void
        validateFlag(flag);
        mFlags.remove(flag);
!!!197378.java!!!	setFlag(in flag : String) : void
        validateFlag(flag);
        mFlags.add(flag);
!!!197506.java!!!	setInterfaceUp() : void
        mFlags.remove(FLAG_DOWN);
        mFlags.add(FLAG_UP);
!!!197634.java!!!	setInterfaceDown() : void
        mFlags.remove(FLAG_UP);
        mFlags.add(FLAG_DOWN);
!!!197762.java!!!	getLinkAddress() : LinkAddress
        return mAddr;
!!!197890.java!!!	setLinkAddress(inout addr : LinkAddress) : void
        mAddr = addr;
!!!198018.java!!!	getHardwareAddress() : String
        return mHwAddr;
!!!198146.java!!!	setHardwareAddress(in hwAddr : String) : void
        mHwAddr = hwAddr;
!!!198274.java!!!	isActive() : boolean
        try {
            if (hasFlag(FLAG_UP)) {
                for (byte b : mAddr.getAddress().getAddress()) {
                    if (b != 0) return true;
                }
            }
        } catch (NullPointerException e) {
            return false;
        }
        return false;
!!!198402.java!!!	describeContents() : int
        return 0;
!!!198530.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeString(mHwAddr);
        if (mAddr != null) {
            dest.writeByte((byte)1);
            dest.writeParcelable(mAddr, flags);
        } else {
            dest.writeByte((byte)0);
        }
        dest.writeInt(mFlags.size());
        for (String flag : mFlags) {
            dest.writeString(flag);
        }
!!!198658.java!!!	validateFlag(in flag : String) : void
        if (flag.indexOf(' ') >= 0) {
            throw new IllegalArgumentException("flag contains space: " + flag);
        }
