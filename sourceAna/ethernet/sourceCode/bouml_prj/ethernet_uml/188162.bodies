class SystemVibrator
!!!577922.java!!!	SystemVibrator()
        mPackageName = ActivityThread.currentPackageName();
        mService = IVibratorService.Stub.asInterface(
                ServiceManager.getService("vibrator"));
!!!578050.java!!!	SystemVibrator(inout context : Context)
        mPackageName = context.getOpPackageName();
        mService = IVibratorService.Stub.asInterface(
                ServiceManager.getService("vibrator"));
!!!578178.java!!!	hasVibrator() : boolean
        if (mService == null) {
            Log.w(TAG, "Failed to vibrate; no vibrator service.");
            return false;
        }
        try {
            return mService.hasVibrator();
        } catch (RemoteException e) {
        }
        return false;
!!!578306.java!!!	vibrate(in milliseconds : long) : void
        vibrate(Process.myUid(), mPackageName, milliseconds);
!!!578434.java!!!	vibrate(inout pattern : long, in repeat : int) : void
        vibrate(Process.myUid(), mPackageName, pattern, repeat);
!!!578562.java!!!	vibrate(in owningUid : int, in owningPackage : String, in milliseconds : long) : void
        if (mService == null) {
            Log.w(TAG, "Failed to vibrate; no vibrator service.");
            return;
        }
        try {
            mService.vibrate(owningUid, owningPackage, milliseconds, mToken);
        } catch (RemoteException e) {
            Log.w(TAG, "Failed to vibrate.", e);
        }
!!!578690.java!!!	vibrate(in owningUid : int, in owningPackage : String, inout pattern : long, in repeat : int) : void
        if (mService == null) {
            Log.w(TAG, "Failed to vibrate; no vibrator service.");
            return;
        }
        // catch this here because the server will do nothing.  pattern may
        // not be null, let that be checked, because the server will drop it
        // anyway
        if (repeat < pattern.length) {
            try {
                mService.vibratePattern(owningUid, owningPackage, pattern, repeat, mToken);
            } catch (RemoteException e) {
                Log.w(TAG, "Failed to vibrate.", e);
            }
        } else {
            throw new ArrayIndexOutOfBoundsException();
        }
!!!578818.java!!!	cancel() : void
        if (mService == null) {
            return;
        }
        try {
            mService.cancelVibrate(mToken);
        } catch (RemoteException e) {
            Log.w(TAG, "Failed to cancel vibration.", e);
        }
