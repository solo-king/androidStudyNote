class UserManager
!!!589954.java!!!	get(inout context : Context) : UserManager
        if (sInstance == null) {
            sInstance = (UserManager) context.getSystemService(Context.USER_SERVICE);
        }
        return sInstance;
!!!590082.java!!!	UserManager(inout context : Context, inout service : IUserManager)
        mService = service;
        mContext = context;
!!!590210.java!!!	supportsMultipleUsers() : boolean
        return getMaxSupportedUsers() > 1;
!!!590338.java!!!	getUserHandle() : int
        return UserHandle.myUserId();
!!!590466.java!!!	getUserName() : String
        try {
            return mService.getUserInfo(getUserHandle()).name;
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user name", re);
            return "";
        }
!!!590594.java!!!	isUserAGoat() : boolean
        return false;
!!!590722.java!!!	isLinkedUser() : boolean
        try {
            return mService.isRestricted();
        } catch (RemoteException re) {
            Log.w(TAG, "Could not check if user is limited ", re);
            return false;
        }
!!!590850.java!!!	isUserRunning(inout user : UserHandle) : boolean
        try {
            return ActivityManagerNative.getDefault().isUserRunning(
                    user.getIdentifier(), false);
        } catch (RemoteException e) {
            return false;
        }
!!!590978.java!!!	isUserRunningOrStopping(inout user : UserHandle) : boolean
        try {
            return ActivityManagerNative.getDefault().isUserRunning(
                    user.getIdentifier(), true);
        } catch (RemoteException e) {
            return false;
        }
!!!591106.java!!!	getUserInfo(in userHandle : int) : UserInfo
        try {
            return mService.getUserInfo(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user info", re);
            return null;
        }
!!!591234.java!!!	getUserRestrictions() : Bundle
        return getUserRestrictions(Process.myUserHandle());
!!!591362.java!!!	getUserRestrictions(inout userHandle : UserHandle) : Bundle
        try {
            return mService.getUserRestrictions(userHandle.getIdentifier());
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user restrictions", re);
            return Bundle.EMPTY;
        }
!!!591490.java!!!	setUserRestrictions(inout restrictions : Bundle) : void
        setUserRestrictions(restrictions, Process.myUserHandle());
!!!591618.java!!!	setUserRestrictions(inout restrictions : Bundle, inout userHandle : UserHandle) : void
        try {
            mService.setUserRestrictions(restrictions, userHandle.getIdentifier());
        } catch (RemoteException re) {
            Log.w(TAG, "Could not set user restrictions", re);
        }
!!!591746.java!!!	setUserRestriction(in key : String, inout value : boolean) : void
        Bundle bundle = getUserRestrictions();
        bundle.putBoolean(key, value);
        setUserRestrictions(bundle);
!!!591874.java!!!	setUserRestriction(in key : String, inout value : boolean, inout userHandle : UserHandle) : void
        Bundle bundle = getUserRestrictions(userHandle);
        bundle.putBoolean(key, value);
        setUserRestrictions(bundle, userHandle);
!!!592002.java!!!	hasUserRestriction(in restrictionKey : String) : boolean
        return hasUserRestriction(restrictionKey, Process.myUserHandle());
!!!592130.java!!!	hasUserRestriction(in restrictionKey : String, inout userHandle : UserHandle) : boolean
        return getUserRestrictions(userHandle).getBoolean(restrictionKey, false);
!!!592258.java!!!	getSerialNumberForUser(inout user : UserHandle) : long
        return getUserSerialNumber(user.getIdentifier());
!!!592386.java!!!	getUserForSerialNumber(in serialNumber : long) : UserHandle
        int ident = getUserHandle((int)serialNumber);
        return ident >= 0 ? new UserHandle(ident) : null;
!!!592514.java!!!	createUser(in name : String, in flags : int) : UserInfo
        try {
            return mService.createUser(name, flags);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not create a user", re);
            return null;
        }
!!!592642.java!!!	getUserCount() : int
        List<UserInfo> users = getUsers();
        return users != null ? users.size() : 1;
!!!592770.java!!!	getUsers() : List<UserInfo>
        try {
            return mService.getUsers(false);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user list", re);
            return null;
        }
!!!592898.java!!!	getUsers(inout excludeDying : boolean) : List<UserInfo>
        try {
            return mService.getUsers(excludeDying);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get user list", re);
            return null;
        }
!!!593026.java!!!	removeUser(in userHandle : int) : boolean
        try {
            return mService.removeUser(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not remove user ", re);
            return false;
        }
!!!593154.java!!!	setUserName(in userHandle : int, in name : String) : void
        try {
            mService.setUserName(userHandle, name);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not set the user name ", re);
        }
!!!593282.java!!!	setUserIcon(in userHandle : int, inout icon : Bitmap) : void
        try {
            mService.setUserIcon(userHandle, icon);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not set the user icon ", re);
        }
!!!593410.java!!!	getUserIcon(in userHandle : int) : Bitmap
        try {
            return mService.getUserIcon(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get the user icon ", re);
            return null;
        }
!!!593538.java!!!	setGuestEnabled(inout enable : boolean) : void
        try {
            mService.setGuestEnabled(enable);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not change guest account availability to " + enable);
        }
!!!593666.java!!!	isGuestEnabled() : boolean
        try {
            return mService.isGuestEnabled();
        } catch (RemoteException re) {
            Log.w(TAG, "Could not retrieve guest enabled state");
            return false;
        }
!!!593794.java!!!	wipeUser(in userHandle : int) : void
        try {
            mService.wipeUser(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not wipe user " + userHandle);
        }
!!!593922.java!!!	getMaxSupportedUsers() : int
        // Don't allow multiple users on certain builds
        if (android.os.Build.ID.startsWith("JVP")) return 1;
        return SystemProperties.getInt("fw.max_users",
                Resources.getSystem().getInteger(R.integer.config_multiuserMaximumUsers));
!!!594050.java!!!	getUserSerialNumber(in userHandle : int) : int
        try {
            return mService.getUserSerialNumber(userHandle);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get serial number for user " + userHandle);
        }
        return -1;
!!!594178.java!!!	getUserHandle(in userSerialNumber : int) : int
        try {
            return mService.getUserHandle(userSerialNumber);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get userHandle for user " + userSerialNumber);
        }
        return -1;
!!!594306.java!!!	getApplicationRestrictions(in packageName : String) : Bundle
        try {
            return mService.getApplicationRestrictions(packageName);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get application restrictions for package " + packageName);
        }
        return null;
!!!594434.java!!!	getApplicationRestrictions(in packageName : String, inout user : UserHandle) : Bundle
        try {
            return mService.getApplicationRestrictionsForUser(packageName, user.getIdentifier());
        } catch (RemoteException re) {
            Log.w(TAG, "Could not get application restrictions for user " + user.getIdentifier());
        }
        return null;
!!!594562.java!!!	setApplicationRestrictions(in packageName : String, inout restrictions : Bundle, inout user : UserHandle) : void
        try {
            mService.setApplicationRestrictions(packageName, restrictions, user.getIdentifier());
        } catch (RemoteException re) {
            Log.w(TAG, "Could not set application restrictions for user " + user.getIdentifier());
        }
!!!594690.java!!!	setRestrictionsChallenge(in newPin : String) : boolean
        try {
            return mService.setRestrictionsChallenge(newPin);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not change restrictions pin");
        }
        return false;
!!!594818.java!!!	checkRestrictionsChallenge(in pin : String) : int
        try {
            return mService.checkRestrictionsChallenge(pin);
        } catch (RemoteException re) {
            Log.w(TAG, "Could not check restrictions pin");
        }
        return PIN_VERIFICATION_FAILED_INCORRECT;
!!!594946.java!!!	hasRestrictionsChallenge() : boolean
        try {
            return mService.hasRestrictionsChallenge();
        } catch (RemoteException re) {
            Log.w(TAG, "Could not change restrictions pin");
        }
        return false;
!!!595074.java!!!	removeRestrictions() : void
        try {
            mService.removeRestrictions();
        } catch (RemoteException re) {
            Log.w(TAG, "Could not change restrictions pin");
        }
